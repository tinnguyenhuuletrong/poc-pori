{"version":3,"file":"main.js","mappings":"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","sources":["webpack://pori-and-friends/./packages/examples/simple-tele-bot/src/app/config.ts","webpack://pori-and-friends/./packages/examples/simple-tele-bot/src/app/worker.ts","webpack://pori-and-friends/./packages/examples/simple-tele-bot/src/environments/environment.prod.porichain.ts","webpack://pori-and-friends/./packages/examples/simple-tele-bot/src/environments/environment.prod.ts","webpack://pori-and-friends/./packages/mongodb-data-store/src/index.ts","webpack://pori-and-friends/./packages/mongodb-data-store/src/lib/mongodb-data-store.ts","webpack://pori-and-friends/./packages/pori-actions/src/index.ts","webpack://pori-and-friends/./packages/pori-actions/src/lib/adventure.ts","webpack://pori-and-friends/./packages/pori-actions/src/lib/auto/autoPlayWorkflow.ts","webpack://pori-and-friends/./packages/pori-actions/src/lib/auto/sbattleSlotPick.ts","webpack://pori-and-friends/./packages/pori-actions/src/lib/auto/supportSlotPick.ts","webpack://pori-and-friends/./packages/pori-actions/src/lib/basic.ts","webpack://pori-and-friends/./packages/pori-actions/src/lib/cmds/cmds.ts","webpack://pori-and-friends/./packages/pori-actions/src/lib/computed/myAdventure.ts","webpack://pori-and-friends/./packages/pori-actions/src/lib/dataView/index.ts","webpack://pori-and-friends/./packages/pori-actions/src/lib/dataView/playerAdventure.ts","webpack://pori-and-friends/./packages/pori-actions/src/lib/exchange/binance.ts","webpack://pori-and-friends/./packages/pori-actions/src/lib/exchange/kyberPool.ts","webpack://pori-and-friends/./packages/pori-actions/src/lib/exchange/token2Usd.ts","webpack://pori-and-friends/./packages/pori-actions/src/lib/input/pullData.ts","webpack://pori-and-friends/./packages/pori-actions/src/lib/nftBodyPart.ts","webpack://pori-and-friends/./packages/pori-actions/src/lib/queryPoriApi.ts","webpack://pori-and-friends/./packages/pori-actions/src/lib/startStop.ts","webpack://pori-and-friends/./packages/pori-actions/src/lib/transformer/transformIdleGameEvent2Database.ts","webpack://pori-and-friends/./packages/pori-actions/src/lib/util/web3utils.ts","webpack://pori-and-friends/./packages/pori-actions/src/lib/wallet/balance.ts","webpack://pori-and-friends/./packages/pori-actions/src/lib/wallet/walletConnect.ts","webpack://pori-and-friends/./packages/pori-actions/src/lib/wallet/web3Action.ts","webpack://pori-and-friends/./packages/pori-actions/src/lib/workflow/workflowV1.ts","webpack://pori-and-friends/./packages/pori-metadata/src/commonTypes.ts","webpack://pori-and-friends/./packages/pori-metadata/src/index.ts","webpack://pori-and-friends/./packages/pori-metadata/src/lib/idleGameSc/eventParser.ts","webpack://pori-and-friends/./packages/pori-metadata/src/lib/idleGameSc/index.ts","webpack://pori-and-friends/./packages/pori-metadata/src/lib/idleGameSc/type.idleGame.ts","webpack://pori-and-friends/./packages/pori-metadata/src/lib/prod-porichain-poriverse_info.ts","webpack://pori-and-friends/./packages/pori-metadata/src/lib/prod-poriverse_info.ts","webpack://pori-and-friends/./packages/pori-metadata/src/lib/sta-poriverse_info.ts","webpack://pori-and-friends/./packages/pori-repositories/src/index.ts","webpack://pori-and-friends/./packages/pori-repositories/src/lib/common/baseDataModel.ts","webpack://pori-and-friends/./packages/pori-repositories/src/lib/idleGames/game.schema.ts","webpack://pori-and-friends/./packages/pori-repositories/src/lib/idleGames/scInfo.schema.ts","webpack://pori-and-friends/./packages/pori-repositories/src/lib/idleGames/schema.ts","webpack://pori-and-friends/./packages/pori-repositories/src/lib/services/scheduler.ts","webpack://pori-and-friends/./packages/utils/src/index.ts","webpack://pori-and-friends/./packages/utils/src/lib/axiosHelper.ts","webpack://pori-and-friends/./packages/utils/src/lib/cryptoHelper.ts","webpack://pori-and-friends/./packages/utils/src/lib/deferred.ts","webpack://pori-and-friends/./packages/utils/src/lib/functionHelper.ts","webpack://pori-and-friends/./packages/utils/src/lib/jobQueue.ts","webpack://pori-and-friends/./packages/utils/src/lib/typeConvertHelper.ts","webpack://pori-and-friends/external commonjs \"@dynamic-amm/sdk\"","webpack://pori-and-friends/external commonjs \"@ethersproject/providers\"","webpack://pori-and-friends/external commonjs \"@walletconnect/client\"","webpack://pori-and-friends/external commonjs \"@walletconnect/qrcode-modal\"","webpack://pori-and-friends/external commonjs \"axios\"","webpack://pori-and-friends/external commonjs \"debug\"","webpack://pori-and-friends/external commonjs \"lodash\"","webpack://pori-and-friends/external commonjs \"moment\"","webpack://pori-and-friends/external commonjs \"mongodb\"","webpack://pori-and-friends/external commonjs \"node-telegram-bot-api\"","webpack://pori-and-friends/external commonjs \"process\"","webpack://pori-and-friends/external commonjs \"realm\"","webpack://pori-and-friends/external commonjs \"tslib\"","webpack://pori-and-friends/external commonjs \"web3\"","webpack://pori-and-friends/external node-commonjs \"crypto\"","webpack://pori-and-friends/external node-commonjs \"fs\"","webpack://pori-and-friends/external node-commonjs \"os\"","webpack://pori-and-friends/external node-commonjs \"path\"","webpack://pori-and-friends/external node-commonjs \"stream\"","webpack://pori-and-friends/external node-commonjs \"url\"","webpack://pori-and-friends/webpack/bootstrap","webpack://pori-and-friends/./packages/examples/simple-tele-bot/src/main.ts"],"sourcesContent":["import { ENV } from '@pori-and-friends/pori-metadata';\nimport { readFileSync } from 'fs';\nimport { join } from 'path';\nimport * as AppEnv from '../environments/environment';\nimport * as AppEnvProd from '../environments/environment.prod';\nimport * as AppEnvProdPorichain from '../environments/environment.prod.porichain';\n\nexport const VERSION = '17';\nexport const env = ENV.ProdPorichain;\nexport const activeEnv = computeActiveEnv(env);\nexport const playerAddress = process.env.PLAYER_ADDRESS;\nexport const botMasterUid = process.env.TELEGRAM_MASTER_ID;\n\nexport const schedulerNewMineId = () => 'schedule_new_mine';\nexport const schedulerNewMineType = 'submit_new_mine_action';\n\nexport const schedulerNotifyMineFinishId = (mineId) =>\n  `schedule_mine_finish_${mineId}`;\n\nexport const schedulerNotifyMineNotifyIdType =\n  'schedule_mine_finish_notify_action';\n\nexport const schedulerNotifyMineAtkId = (mineId) =>\n  `schedule_mine_atk_${mineId}`;\n\nconst formationConfig = readAsset(join(__dirname, './assets/formation.json'));\ntype AssetFormations = {\n  minePories: string[];\n  supportPori: string;\n  usePortal: boolean;\n};\ntype AssetSettings = {\n  botTimeoutHours: number;\n  maxPoriEngagedMission: number;\n};\n\nexport const RuntimeConfig = {\n  formations: formationConfig.formations as AssetFormations[],\n  settings: formationConfig.settings as AssetSettings,\n};\n\nfunction computeActiveEnv(env: ENV) {\n  let activeEnv: typeof AppEnv;\n  switch (env) {\n    case ENV.Prod:\n      activeEnv = AppEnvProd;\n      break;\n    case ENV.ProdPorichain:\n      activeEnv = AppEnvProdPorichain;\n      break;\n    case ENV.Staging:\n      activeEnv = AppEnv;\n      break;\n  }\n  return activeEnv;\n}\n\nfunction readAsset(path) {\n  const config = readFileSync(path).toString();\n  return JSON.parse(config);\n}\n","import { Context } from '@pori-and-friends/pori-metadata';\nimport TelegramBot from 'node-telegram-bot-api';\nimport * as Repos from '@pori-and-friends/pori-repositories';\nimport {\n  schedulerNotifyMineAtkId,\n  schedulerNotifyMineFinishId,\n  schedulerNotifyMineNotifyIdType,\n} from './config';\n\nexport function registerWorkerNotify({\n  ctx,\n  realm,\n  scheduler,\n  bot,\n}: {\n  ctx: Context;\n  realm: Realm;\n  scheduler: Repos.SchedulerService;\n  bot: TelegramBot;\n}) {\n  const doSendNotify = async (job: Repos.ScheduleJobModel) => {\n    const { _id, params } = job;\n    const paramObj = JSON.parse(params);\n    const chatId = paramObj?.chatId;\n    const msgData = paramObj?.msgData;\n    const extra = (paramObj?.extra || {}) as TelegramBot.SendMessageOptions;\n\n    if (!(chatId && msgData)) return;\n    await bot.sendMessage(chatId, msgData, extra);\n  };\n\n  scheduler.addHandler(schedulerNotifyMineNotifyIdType, doSendNotify);\n}\n\nexport async function addWorkerTaskForMineEndNotify({\n  ctx,\n  realm,\n  scheduler,\n  chatId,\n  mineId,\n  endAt,\n  pnMessage = 'ready for new action',\n  extra = {},\n}: {\n  ctx: Context;\n  realm: Realm;\n  scheduler: Repos.SchedulerService;\n  chatId: number;\n  mineId: number;\n  endAt: Date;\n  pnMessage: string;\n  extra: TelegramBot.SendMessageOptions;\n}) {\n  const mineEndSchedulerId = schedulerNotifyMineFinishId(mineId);\n  const jobIns = await scheduler.getJobById(realm, mineEndSchedulerId);\n\n  // already have it\n  if (\n    jobIns &&\n    !jobIns.hasFinish &&\n    jobIns.runAt.valueOf() === endAt.valueOf()\n  ) {\n    return;\n  }\n\n  // Register new job\n  await scheduler.scheduleJob(realm, {\n    codeName: schedulerNotifyMineNotifyIdType,\n    runAt: endAt,\n    params: JSON.stringify({ chatId, msgData: pnMessage, extra }),\n    _id: mineEndSchedulerId,\n  });\n}\n\nexport async function addWorkerTaskForMineAtkNotify({\n  ctx,\n  realm,\n  scheduler,\n  chatId,\n  mineId,\n  endAt,\n  pnMessage = 'ready for new action',\n  extra = {},\n}: {\n  ctx: Context;\n  realm: Realm;\n  scheduler: Repos.SchedulerService;\n  chatId: number;\n  mineId: number;\n  endAt: Date;\n  pnMessage: string;\n  extra: TelegramBot.SendMessageOptions;\n}) {\n  const mineAtkSchedulerId = schedulerNotifyMineAtkId(mineId);\n  const jobIns = await scheduler.getJobById(realm, mineAtkSchedulerId);\n\n  // already have it\n  if (\n    jobIns &&\n    !jobIns.hasFinish &&\n    jobIns.runAt.valueOf() === endAt.valueOf()\n  ) {\n    return;\n  }\n\n  // Register new job\n  await scheduler.scheduleJob(realm, {\n    codeName: schedulerNotifyMineNotifyIdType,\n    runAt: endAt,\n    params: JSON.stringify({ chatId, msgData: pnMessage, extra }),\n    _id: mineAtkSchedulerId,\n  });\n}\n","import path from 'path';\n\nexport const environment = {\n  dbPath: path.join(\n    __dirname,\n    '../../../../archived/repo/prodPoriChain/allEvents.prod.realm'\n  ),\n  walletConnectSessionStoragePath: path.join(\n    __dirname,\n    '../../../../archived/repo/.web3session'\n  ),\n  botMemoryPath: path.join(__dirname, '../../../../archived/repo/.botMem'),\n  mongodbDataStoreUri: process.env.MONGODB_DATA_STORE_URI,\n  mongodbDataStoreSSLCer: path.join(\n    __dirname,\n    '../../../../archived/repo/mongodb.pem'\n  ),\n  aesKeyPath: path.join(__dirname, '../../../../archived/repo/.aesKey'),\n  createdBlock: 7643,\n  production: true,\n};\n","import path from 'path';\n\nexport const environment = {\n  dbPath: path.join(\n    __dirname,\n    '../../../../archived/repo/prod/allEvents.prod.realm'\n  ),\n  walletConnectSessionStoragePath: path.join(\n    __dirname,\n    '../../../../archived/repo/.web3session'\n  ),\n  botMemoryPath: path.join(__dirname, '../../../../archived/repo/.botMem'),\n  mongodbDataStoreUri: process.env.MONGODB_DATA_STORE_URI,\n  mongodbDataStoreSSLCer: path.join(\n    __dirname,\n    '../../../../archived/repo/mongodb.pem'\n  ),\n  aesKeyPath: path.join(__dirname, '../../../../archived/repo/.aesKey'),\n  createdBlock: 27503296,\n  production: true,\n};\n","export * from './lib/mongodb-data-store';\n","import { Context } from '@pori-and-friends/pori-metadata';\nimport {\n  GridFSBucket,\n  GridFSBucketReadStream,\n  GridFSFile,\n  MongoClient,\n  ObjectId,\n  ServerApiVersion,\n} from 'mongodb';\nimport debug from 'debug';\nimport { Stream } from 'stream';\nimport { Deferred } from '@pori-and-friends/utils';\n\nconst log = debug('pori:mongodb-data-store');\nconst connectDefer = new Deferred();\n\nexport async function waitForConnected(ctx: Context) {\n  // if (!ctx.mongoClient) throw new Error('ctx.mongoClient not found');\n\n  await connectDefer.promise;\n  return ctx.mongoClient;\n}\n\nexport async function addMongodbDataStore(\n  ctx: Context,\n  uri: string,\n  pathToCert: string\n): Promise<MongoClient> {\n  const client = new MongoClient(uri, {\n    sslKey: pathToCert,\n    sslCert: pathToCert,\n    serverApi: ServerApiVersion.v1,\n  });\n\n  connectDefer.reset();\n\n  await client.connect();\n  ctx.mongoClient = client;\n\n  connectDefer.resolve(client);\n\n  log('connected!');\n  return client;\n}\n\nfunction getBucket(mongoClient: MongoClient) {\n  const db = mongoClient.db('storage');\n  const bucket = new GridFSBucket(db, {\n    chunkSizeBytes: 10 * 1024 * 1024, // 5mb\n  });\n  return bucket;\n}\n\nexport async function storeBlob(\n  ctx: Context,\n  key: string,\n  dataStream: Stream,\n  metadata: Record<string, any> = {}\n) {\n  if (!ctx.mongoClient) throw new Error('ctx.mongoClient not found');\n\n  const bucket = getBucket(ctx.mongoClient);\n\n  // TODO: check max revision to keep\n  const oldFiles = await bucket.find({ filename: key }).toArray();\n  for (const it of oldFiles) {\n    await bucket.delete(it._id);\n  }\n\n  const writeStream = bucket.openUploadStream(key, {\n    metadata,\n  });\n  dataStream.pipe(writeStream);\n\n  return new Promise<void>((resolve, _) => {\n    writeStream.once('finish', () => {\n      resolve();\n    });\n  });\n}\n\nexport async function downloadBlob(\n  ctx: Context,\n  key: string\n): Promise<[GridFSFile, GridFSBucketReadStream]> {\n  if (!ctx.mongoClient) throw new Error('ctx.mongoClient not found');\n\n  const bucket = getBucket(ctx.mongoClient);\n\n  const fileMeta = (\n    await bucket.find({ filename: key }, { sort: { uploadDate: -1 } }).toArray()\n  )[0];\n\n  const readStream = bucket.openDownloadStreamByName(key);\n  return [fileMeta, readStream];\n}\n\nexport async function fetchBolb(\n  ctx: Context,\n  key: string\n): Promise<GridFSFile> {\n  if (!ctx.mongoClient) throw new Error('ctx.mongoClient not found');\n\n  const bucket = getBucket(ctx.mongoClient);\n\n  const fileMeta = (\n    await bucket.find({ filename: key }, { sort: { uploadDate: -1 } }).toArray()\n  )[0];\n\n  return fileMeta;\n}\n","import * as Input from './lib/input/pullData';\nimport * as DataView from './lib/dataView';\nimport * as Adventure from './lib/adventure';\nimport * as Workflow from './lib/workflow/workflowV1';\nimport * as WalletActions from './lib/wallet/web3Action';\nimport * as MyAdventure from './lib/computed/myAdventure';\nimport * as Auto from './lib/auto/autoPlayWorkflow';\nimport * as Cmds from './lib/cmds/cmds';\n\nexport * from './lib/basic';\nexport * from './lib/nftBodyPart';\nexport * from './lib/queryPoriApi';\nexport * from './lib/startStop';\nexport * from './lib/transformer/transformIdleGameEvent2Database';\nexport * from './lib/wallet/walletConnect';\nexport * from './lib/wallet/balance';\nexport * from './lib/exchange/kyberPool';\nexport * from './lib/exchange/binance';\nexport * from './lib/exchange/token2Usd';\n\nconst Computed = {\n  MyAdventure,\n};\n\nexport {\n  Input,\n  DataView,\n  Adventure,\n  Workflow,\n  WalletActions,\n  Computed,\n  Cmds,\n  Auto,\n};\n","import {\n  Context,\n  PromiseReturnType,\n  TEN_POWER_10,\n} from '@pori-and-friends/pori-metadata';\nimport { PoriRepo } from '@pori-and-friends/pori-repositories';\nimport { byte2number } from '@pori-and-friends/utils';\nimport { random } from 'lodash';\n\nconst ALL_SLOTS = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nexport function randAdventureSlot(\n  samples: number,\n  excludeIndex: number[] = []\n) {\n  let pool = ALL_SLOTS.filter((itm) => !excludeIndex.includes(itm));\n\n  const res = [];\n  for (let i = 0; i < samples; i++) {\n    const next = pool[random(0, pool.length - 1, false)];\n    if (!next) throw new Error('not enough pool');\n\n    pool = pool.filter((v) => v !== next);\n    res.push(next);\n  }\n\n  return res;\n}\n\nexport type SCMineInfo = PromiseReturnType<\n  ReturnType<typeof queryMineinfoFromSc>\n>;\nexport async function queryMineinfoFromSc(ctx: Context, mineId: number) {\n  const res = await ctx.contract.methods.mines(mineId - 1).call();\n  const farmer = parseMinePlayer(ctx, res.farmer);\n  const helper = parseMinePlayer(ctx, res.helper);\n  const rewardMap = parseRewardMap(ctx, res.rewardMap);\n  return {\n    farmer,\n    helper,\n    rewardMap,\n  };\n}\n\nfunction parseMinePlayer(ctx: Context, playerInfo: any) {\n  const address = playerInfo.player;\n  const selectedIndex = ctx.web3.utils\n    .hexToBytes(playerInfo.selectedCells)\n    .filter((itm) => itm > 0);\n  return {\n    address,\n    selectedIndex,\n  };\n}\n\nfunction parseRewardMap(ctx: Context, rawRewardMap: string) {\n  const bytes = ctx.web3.utils.hexToBytes(rawRewardMap);\n  const env = byte2number(bytes.slice(0, 2));\n  const startTimeUnixSec = byte2number(bytes.slice(20, 28));\n\n  const slots: Record<string, { reward: number; joined: number }> = {};\n  const startOffset = 2;\n  for (let i = 0; i < 9; i++) {\n    const reward = bytes[startOffset + i * 2];\n    const joined = bytes[startOffset + i * 2 + 1];\n    slots[i] = { reward, joined };\n  }\n\n  return {\n    env,\n    startTimeUnixSec,\n    startTimeInDate: new Date(startTimeUnixSec * 1000),\n    slots,\n    mineRawRewadMap: rawRewardMap,\n  };\n}\n\nexport async function queryRandomRewardLevelFromSc(\n  ctx: Context,\n  mineInfo: SCMineInfo\n) {\n  return ctx.contract.methods\n    .randomRewardLevel(mineInfo.rewardMap.mineRawRewadMap)\n    .call();\n}\n\nexport async function queryMissiontOfPoriSc(\n  ctx: Context,\n  pori: string | number\n) {\n  const engagedMission = await ctx.contract.methods.missionOfPori(pori).call();\n  return parseInt(engagedMission);\n}\n\nexport type SCPortalInfo = PromiseReturnType<\n  ReturnType<typeof queryPortalInfoSc>\n>;\nexport async function queryPortalInfoSc(ctx: Context, addr: string) {\n  const info = await ctx.contractPortal.methods.portalInfoOf(addr).call();\n  const {\n    missions,\n    fastMissions,\n    capacityMissions,\n    suppliedRiken,\n    availableRiken,\n    lockedRiken,\n  } = info;\n\n  let nextMissionRequireRiken =\n    parseInt(\n      await ctx.contractPortal.methods.mission2Riken(+fastMissions + 1).call()\n    ) / TEN_POWER_10;\n\n  if (nextMissionRequireRiken <= 0)\n    nextMissionRequireRiken = Number.MAX_SAFE_INTEGER;\n\n  return {\n    missions: parseInt(missions),\n    fastMissions: parseInt(fastMissions),\n    capacityMissions: parseInt(capacityMissions),\n    suppliedRiken: parseInt(suppliedRiken) / TEN_POWER_10,\n    availableRiken: parseInt(availableRiken) / TEN_POWER_10,\n    lockedRiken: parseInt(lockedRiken) / TEN_POWER_10,\n    nextMissionRequireRiken: nextMissionRequireRiken,\n  };\n}\n\nexport type SCSCellInfo = PromiseReturnType<\n  ReturnType<typeof getPoriansAtSCellSc>\n>;\nexport async function getPoriansAtSCellSc(ctx: Context, missionId: string) {\n  const [farmerSCellInfo, helperSCellInfo] = await Promise.all([\n    ctx.contract.methods.getPoriansAtSCell(missionId, false).call(),\n    ctx.contract.methods.getPoriansAtSCell(missionId, true).call(),\n  ]);\n\n  const farmer: string[] = [farmerSCellInfo['0'], farmerSCellInfo['1']]\n    .filter((itm) => itm !== '0')\n    .map((itm) => itm.toString());\n  const helper: string[] = [helperSCellInfo['0'], helperSCellInfo['1']]\n    .filter((itm) => itm !== '0')\n    .map((itm) => itm.toString());\n\n  return {\n    farmer,\n    helper,\n  };\n}\n\nexport function queryPowers({\n  ctx,\n  realm,\n  farmerPories,\n  supporterPories,\n}: {\n  ctx: Context;\n  realm: Realm;\n  farmerPories: string[];\n  supporterPories: string[];\n}) {\n  const powers: Record<string, number> = {};\n  for (const id of farmerPories) {\n    const info = PoriRepo.findOneSync(realm, id);\n    if (info) powers[id] = info.minePower;\n  }\n  for (const id of supporterPories) {\n    const info = PoriRepo.findOneSync(realm, id);\n    if (info) powers[id] = info.helpPower;\n  }\n  return powers;\n}\n","import {\n  Workflow,\n  Adventure,\n  Computed,\n  Cmds,\n  WalletActions,\n} from '../../index';\nimport { AdventureInfoEx, Context } from '@pori-and-friends/pori-metadata';\nimport {\n  doTaskWithRetry,\n  isArrayIncludeAll,\n  waitForMs,\n} from '@pori-and-friends/utils';\nimport moment from 'moment';\nimport { queryMissiontOfPoriSc } from '../adventure';\nimport { AdventureStatsComputed } from '../computed/myAdventure';\nimport { supportSlotPick } from './supportSlotPick';\n\nexport const ESB_P_THRESHOLD_KEEP_BIG_REWARD = 15;\nconst MAX_PORI_ENGAGED_MISSION = 500;\nconst SBATTLE_BEFORE_END_MS = 30 * 60 * 1000; // 30 mins\n\nexport type AutoPlayOpenMineArgs = {\n  type: 'bot';\n  minePories: string[];\n  supportPori: string;\n  timeOutHours: number;\n  usePortal: boolean;\n};\nexport type AutoPlayRefreshStatusArg = {\n  type: 'background_refresh';\n  intervalMs: number;\n};\n\nexport type AutoPlayArgs = AutoPlayOpenMineArgs | AutoPlayRefreshStatusArg;\nexport const AutoPlayDb: Record<\n  string,\n  { args: AutoPlayArgs; state: Workflow.WorkflowState }\n> = {};\n\nexport async function autoRefreshStatus({\n  ctx,\n  realm,\n  playerAddress,\n  args,\n}: {\n  ctx: Context;\n  realm: Realm;\n  playerAddress: string;\n  args: AutoPlayRefreshStatusArg;\n}) {\n  const intervalMs = args.intervalMs;\n  const botId = `auto_refresh`;\n  if (AutoPlayDb[botId]) {\n    ctx.ui.writeMessage(`bot with id ${botId} is running. skip it`);\n    return;\n  }\n\n  const workflowExec = async (state: Workflow.WorkflowState) => {\n    let count = 0;\n    state.updateState(() => {\n      state.data['_it'] = count;\n      state.data['_nextAt'] = new Date(Date.now() + intervalMs);\n    });\n\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      await takeABreak(state, ctx, intervalMs);\n      await state.promiseWithAbort(\n        refreshStatus(state, realm, ctx, playerAddress)\n      );\n\n      state.updateState(() => {\n        count++;\n        state.data['_it'] = count;\n        state.data['_nextAt'] = new Date(Date.now() + intervalMs);\n      });\n    }\n  };\n\n  const state = Workflow.createWorkflow(workflowExec, botId);\n  state\n    .start()\n    .catch((err) => {\n      ctx.ui.writeMessage(\n        `autoRefresh #bot${state.id} error ${err.toString()}`\n      );\n    })\n    .finally(() => {\n      ctx.ui.writeMessage(`autoRefresh #bot${state.id} end!`);\n    });\n\n  ctx.ui.writeMessage(\n    `autoRefresh #bot${state.id} started:\n  - Interval: ${intervalMs / (1 * 60 * 1000)} mins\n  `\n  );\n\n  captureStartedBot(state, args);\n  return state;\n}\n\nexport async function autoPlayV1({\n  ctx,\n  realm,\n  playerAddress,\n  args,\n}: {\n  ctx: Context;\n  realm: Realm;\n  playerAddress: string;\n  args: AutoPlayOpenMineArgs;\n}) {\n  const { minePories, supportPori, timeOutHours } = args;\n  const start = Date.now();\n  const end = start + timeOutHours * 60 * 60 * 1000;\n  const botId = `bot_${[...args.minePories, args.supportPori].join('_')}`;\n  if (AutoPlayDb[botId]) {\n    ctx.ui.writeMessage(`bot with id ${botId} is running. skip it`);\n    return;\n  }\n\n  const workflowExec = async (state: Workflow.WorkflowState) => {\n    while (Date.now() < end) {\n      let addvStats = await refreshStatus(state, realm, ctx, playerAddress);\n      let activeMine = findActiveMine({ ctx, addvStats, args });\n      if (!activeMine) {\n        state.updateState(() => {\n          state.data['step'] = 'start_mine';\n        });\n\n        await state.promiseWithAbort(checkGasPrice({ ctx, end, state }));\n\n        await state.promiseWithAbort(\n          checkPoriMissionCapping({ ctx, args, state })\n        );\n\n        await state.promiseWithAbort(\n          checkPortal({ ctx, args, state, end, playerAddress })\n        );\n\n        // 1. start new mine with portal\n        await state.promiseWithAbort(\n          Cmds.cmdDoMine({\n            ctx,\n            realm,\n            args: args.usePortal ? '1' : '0',\n            minePories,\n          })\n        );\n        state.updateState(() => {\n          state.data['step'] = 'start_mine_finish';\n        });\n      }\n\n      // 2. do support\n      addvStats = await refreshStatus(state, realm, ctx, playerAddress);\n      activeMine = findActiveMine({ ctx, addvStats, args });\n      if (!activeMine) {\n        console.log(addvStats);\n        throw 'OoO';\n      }\n      const mineId = activeMine.mineId;\n      const nextSupportAt = activeMine.atkAt;\n      const shouldSupport = moment(nextSupportAt || 0).isAfter();\n      if (shouldSupport) {\n        state.updateState(() => {\n          state.data[\n            'step'\n          ] = `waiting_for_support. Wakeup at ${nextSupportAt.toLocaleString()} - ${moment(\n            nextSupportAt\n          ).fromNow()}`;\n        });\n        await state.promiseWithAbort(\n          waitForMs(\n            nextSupportAt.valueOf() -\n              Date.now() +\n              ctx.setting.autoPlayMicroDelayMs\n          )\n        );\n\n        if (supportPori) {\n          state.updateState(() => {\n            state.data['step'] = 'begin_support';\n          });\n          await state.promiseWithAbort(\n            doSupport(ctx, mineId, supportPori, realm)\n          );\n          state.updateState(() => {\n            state.data['step'] = 'end_support';\n          });\n        }\n      }\n\n      // 3. do SBattle. before finish 30 mins\n      const sAt = activeMine.blockedTo.valueOf() - SBATTLE_BEFORE_END_MS;\n      const needToWaitForSMin =\n        sAt - Date.now() + ctx.setting.autoPlayMicroDelayMs;\n      if (needToWaitForSMin > 0) {\n        state.updateState(() => {\n          state.data['step'] = `waiting_for_s. Wakeup at ${new Date(\n            sAt\n          ).toLocaleString()} - ${moment(new Date(sAt)).fromNow()}`;\n        });\n\n        await state.promiseWithAbort(waitForMs(needToWaitForSMin));\n        await state.promiseWithAbort(checkGasPrice({ ctx, end, state }));\n\n        state.updateState(() => {\n          state.data['step'] = 'begin_s';\n        });\n\n        // CMD do SBattle\n        await state.promiseWithAbort(\n          Cmds.cmdDoSBattle({ ctx, realm, args: mineId.toString() })\n        );\n\n        state.updateState(() => {\n          state.data['step'] = 'end_s';\n        });\n      }\n\n      // 4. do finish\n      addvStats = await refreshStatus(state, realm, ctx, playerAddress);\n      activeMine = findActiveMine({ ctx, addvStats, args });\n      if (activeMine) {\n        state.updateState(() => {\n          state.data[\n            'step'\n          ] = `waiting_for_finish. Wakeup at ${activeMine?.blockedTo.toLocaleString()} - ${moment(\n            activeMine?.blockedTo\n          ).fromNow()}`;\n        });\n        await state.promiseWithAbort(\n          waitForMs(\n            activeMine.blockedTo.valueOf() -\n              Date.now() +\n              ctx.setting.autoPlayMicroDelayMs\n          )\n        );\n\n        await state.promiseWithAbort(checkGasPrice({ ctx, end, state }));\n\n        state.updateState(() => {\n          state.data['step'] = 'begin_finish';\n        });\n        await state.promiseWithAbort(\n          doFinishWithRetry(ctx, realm, mineId, state)\n        );\n        state.updateState(() => {\n          state.data['step'] = 'end_finish';\n        });\n      }\n\n      // done 1 loop\n      await takeABreak(state, ctx);\n    }\n  };\n\n  const state = Workflow.createWorkflow(workflowExec, botId);\n  state.onChange = () => {\n    ctx.ui.writeMessage(`autoPlay #bot${state.id} step ${state.data['step']}`);\n  };\n\n  state\n    .start()\n    .catch((err) => {\n      ctx.ui.writeMessage(`autoPlay #bot${state.id} error ${err.toString()}`);\n    })\n    .finally(() => {\n      ctx.ui.writeMessage(`autoPlay #bot${state.id} end!`);\n    });\n\n  ctx.ui.writeMessage(\n    `autoPlay #bot${state.id} started:\n  - BeginAt: ${new Date(start).toLocaleString()}\n  - BeginEnd: ${new Date(end).toLocaleString()}\n  - Duration: ${timeOutHours} hours\n  `\n  );\n\n  captureStartedBot(state, args);\n  return state;\n}\n\n//----------------------------------------------------------//\n// bot manager\n//----------------------------------------------------------//\n\nexport function stopBot(id: string) {\n  const botInfo = AutoPlayDb[id];\n  if (!botInfo) return;\n  botInfo.state.abort();\n  delete AutoPlayDb[id];\n}\n\nfunction captureStartedBot(state: Workflow.WorkflowState, args: AutoPlayArgs) {\n  const id = state.id;\n  state.finishDefered.promise\n    .then((res) => {\n      console.log('bot finish');\n    })\n    .catch((err) => {\n      console.log('bot error', err);\n    })\n    .finally(() => {\n      delete AutoPlayDb[id];\n    });\n  AutoPlayDb[id] = { state, args };\n}\n\n//----------------------------------------------------------//\n// internal\n//----------------------------------------------------------//\n\nasync function refreshStatus(\n  state: Workflow.WorkflowState,\n  realm: Realm,\n  ctx: Context,\n  playerAddress: string\n) {\n  await takeABreak(state, ctx);\n  return await Computed.MyAdventure.refreshAdventureStatsForAddress(\n    { realm, ctx },\n    playerAddress\n  );\n}\n\nasync function takeABreak(\n  state: Workflow.WorkflowState,\n  ctx: Context,\n  sec?: number\n) {\n  await state.promiseWithAbort(\n    waitForMs(sec ?? ctx.setting.autoPlayMicroDelayMs)\n  );\n}\n\nasync function checkGasPrice({\n  ctx,\n  end,\n  state,\n}: {\n  ctx: Context;\n  end: number;\n  state: Workflow.WorkflowState;\n}) {\n  const sleepInterval = 60000;\n  const msgInfo = await ctx.ui.writeMessage(`checking gas...`);\n  while (Date.now() < end) {\n    const web3GasPrice = await WalletActions.currentGasPrice({ ctx });\n    const valueInGweith = ctx.web3.utils.toWei(\n      ctx.setting.safeGweith.toString(),\n      'gwei'\n    );\n\n    if (+web3GasPrice > +valueInGweith) {\n      ctx.ui.editMessage(\n        msgInfo,\n        `gas price higher than expected ${web3GasPrice} > ${valueInGweith}. Check again after ${sleepInterval}ms`\n      );\n      await state.promiseWithAbort(waitForMs(sleepInterval));\n      continue;\n    }\n\n    ctx.ui.editMessage(msgInfo, `gas price ${web3GasPrice} is safe to go`);\n    break;\n  }\n}\n\nasync function checkPoriMissionCapping({\n  ctx,\n  args,\n  state,\n}: {\n  ctx: Context;\n  args: AutoPlayOpenMineArgs;\n  state: Workflow.WorkflowState;\n}) {\n  const pories = [...args.minePories];\n  if (args.supportPori) pories.push(args.supportPori);\n  const msgInfo = await ctx.ui.writeMessage(`checking pories capping...`);\n  let maxMission = -1;\n  for (const it of pories) {\n    const missionCount = await queryMissiontOfPoriSc(ctx, it);\n    if (missionCount > maxMission) maxMission = missionCount;\n    if (missionCount > MAX_PORI_ENGAGED_MISSION) {\n      throw new Error(`Pori mission capping reach ${it}: ${missionCount}`);\n    }\n  }\n  ctx.ui.editMessage(\n    msgInfo,\n    `capping is safe to go. Current cap ${maxMission}/${MAX_PORI_ENGAGED_MISSION}`\n  );\n}\n\nasync function checkPortal({\n  ctx,\n  args,\n  playerAddress,\n  end,\n  state,\n}: {\n  ctx: Context;\n  args: AutoPlayOpenMineArgs;\n  playerAddress: string;\n  end: number;\n  state: Workflow.WorkflowState;\n}) {\n  if (!args.usePortal) return;\n  const msgInfo = await ctx.ui.writeMessage(`checking portal capping...`);\n  const sleepInterval = 60000;\n\n  while (Date.now() < end) {\n    const portalCap = await Adventure.queryPortalInfoSc(ctx, playerAddress);\n    if (portalCap.availableRiken < portalCap.nextMissionRequireRiken) {\n      ctx.ui.editMessage(\n        msgInfo,\n        `portal capping is not enough. ${\n          portalCap.availableRiken\n        } left. Require ${\n          portalCap.nextMissionRequireRiken\n        } ... try again after ${sleepInterval / 1000}s`\n      );\n      await state.promiseWithAbort(waitForMs(sleepInterval));\n      continue;\n    }\n    break;\n  }\n\n  ctx.ui.editMessage(msgInfo, `portal capping is safe to go`);\n}\n\nasync function doSupport(\n  ctx: Context,\n  mineId: number,\n  SUPPORT_PORI: string,\n  realm: Realm\n) {\n  await Cmds.cmdDoSupport({\n    ctx,\n    realm,\n    args: `${mineId}`,\n    SUPPORT_PORI,\n    customSlotPick: supportSlotPick,\n  });\n}\n\nasync function doFinishWithRetry(\n  ctx: Context,\n  realm: Realm,\n  mineId: number,\n  state: Workflow.WorkflowState\n) {\n  // delay 3 sec\n  // Porichain time lag ??\n  //  0x175b05a99aca3f64fcfad12bc6c60c0392625a3eca08e3a070f17aa3c36b1f7e\n  await waitForMs(30 * 1000);\n\n  const doJob = async () => {\n    await Cmds.cmdDoFinish({ ctx, realm, args: `${mineId}` });\n  };\n\n  await doTaskWithRetry(\n    4,\n    doJob,\n    (err, retryNo) => {\n      ctx.ui.writeMessage(\n        `autoPlay #bot${state.id} retry no ${retryNo} cmdDoFinish after error ${err.message}`\n      );\n    },\n    60 * 1000\n  );\n}\n\nfunction findActiveMine({\n  ctx,\n  addvStats,\n  args,\n}: {\n  ctx: Context;\n  args: AutoPlayOpenMineArgs;\n  addvStats: AdventureStatsComputed;\n}): AdventureInfoEx | null {\n  const minePories = [...args.minePories].map((itm) => itm.toString()).sort();\n\n  for (const key in addvStats.mines) {\n    const mineInfo = addvStats.mines[key];\n    const farmerPories = (mineInfo.farmerPories || [])\n      .map((itm) => itm.toString())\n      .sort();\n\n    const isMatch = isArrayIncludeAll(farmerPories, minePories);\n    if (isMatch) return mineInfo;\n  }\n  return null;\n}\n","import { Adventure } from '../../index';\nimport { AdventureInfoEx, Context } from '@pori-and-friends/pori-metadata';\nimport { isEmpty, minBy, sortBy, sum, toString, uniq } from 'lodash';\nimport { ESB_P_THRESHOLD_KEEP_BIG_REWARD } from './autoPlayWorkflow';\nimport { minIndex, minIndexBy } from '@pori-and-friends/utils';\nimport { SCSCellInfo } from '../adventure';\n\n/*\n  SBattle\n  1. assit 3 pories\n    2MaxFarmerPower > 2MaxSupportPower => null\n\n    // supporter have only 1 pori\n    //  farmer may have \n    //    1 atk lower => need send more \n    //    0 => need send more\n    \n    no S => pick 1 pori rewardlevel min\n    has S => pick 1 pori. atk > x AND rewardLevel min\n  else \n  2. query \n      Adventure.getPoriansAtSCellSc -> {sFarmer, sHelper}\n      2MaxFarmerPower, 2MaxSupportPower\n  3. if esb(Sum(2MaxFarmerPower) , Sum(2MaxSupportPower)) < 15 => null\n\n  [optional] - optimize cost\n  3.5 find optimize pair in case 2MaxFarmerPower > 2MaxSupportPower\n        example: 57525\n        need to find (max1,max2) \n            - sum(max1,max2) > 2MaxSupportPower\n            - min(rewardLevel(max1) + rewardLevel(max2))\n\n  4. Return\n     srcIds = [max1, max2].filter(id => !sFarmer.includes(id))\n     desIds = sFarmer.filter(id => ![max1, max2].include(id))\n     if empty(desIds)\n        desIds.fill(srcIds.length,0)\n     \n\nswap tables\n[3,4] [3]   => src [4] des[0]\n[3,4] [4]   => src [3] des[0]\n[3,4] [3,5] => src [4] des[5]\n[3,4] []    => src [3,4] des [0,0]\n[3,4] [5,6] => src [3,4] des [5,6]\n\n\n3.5 note \nSumMaxEnemyPower\nminCost = int.Max\n\nfor i 0 -> n-1\n  for j i+i -> n\n    i.p + j.p > SumMaxEnemyPower\n      AND i.rewardLevel + j.rewardLevel < minCost\n        \n*/\n\ntype ParseMineInfo = ReturnType<typeof _parseMineInfo>;\nexport type SBattlerDecision = {\n  missionId: number;\n  srcIds: number[];\n  desIds: number[];\n  sTreasureIndex: number;\n};\nexport async function sbattleSlotPick({\n  mineInfo,\n  sCellInfo,\n  isFarmer,\n  ctx,\n}: {\n  mineInfo: AdventureInfoEx;\n  sCellInfo: SCSCellInfo;\n  isFarmer: boolean;\n  ctx: Context;\n}): Promise<SBattlerDecision | null> {\n  if (!mineInfo.supporterAddress) {\n    await ctx.ui.writeMessage(`sbattle ${mineInfo.mineId}: empty supporter`);\n    return null;\n  }\n  const parseMineInfo = _parseMineInfo(mineInfo);\n  const {\n    supporterPories,\n    hasS,\n    mineId,\n    sIndex,\n    farmerMaxPowerOf2,\n    supporterMaxPowerOf2,\n    farmerPories,\n    supporterPoriesSortedByDecPower,\n    farmerPoriesSortedByDecPower,\n    powerOf,\n  } = parseMineInfo;\n  if (!hasS) {\n    await ctx.ui.writeMessage(`sbattle ${mineId}: s not found`);\n    return null;\n  }\n  if (supporterPories.length <= 3) {\n    await ctx.ui.writeMessage(`sbattle ${mineId}: assit have 3 pories case`);\n    return sbattleSlotPickCase3({ mineInfo, sCellInfo, isFarmer, ctx });\n  }\n\n  if (supporterMaxPowerOf2 > farmerMaxPowerOf2) {\n    const esbCal = await ctx.contract.methods\n      .getESB(farmerMaxPowerOf2, supporterMaxPowerOf2)\n      .call();\n    const esbPercentage = Math.round(+esbCal / 100);\n    if (esbPercentage < ESB_P_THRESHOLD_KEEP_BIG_REWARD) {\n      await ctx.ui.writeMessage(\n        `sbattle ${mineId}: max2Power lesser than supporter ${farmerMaxPowerOf2} < ${supporterMaxPowerOf2}. And ebs too low ${esbPercentage}`\n      );\n      return null;\n    }\n\n    await ctx.ui.writeMessage(`sbattle ${mineId}: ebs ${esbPercentage}`);\n  }\n\n  await ctx.ui.writeMessage(\n    `sbattle ${mineId}: max2Power of supporter ${supporterMaxPowerOf2}, farmer ${farmerMaxPowerOf2}. sFarmer: ${sCellInfo.farmer.join(\n      ','\n    )}, sSupport: ${sCellInfo.helper.join(',')}`\n  );\n\n  // TODO: optimize\n  //    need consier missing case\n  //      pori at s already. need find another one => maybe cost lower than global min\n  // let { maxSum, minCost, max1, max2 } = _pickSMinimizeLoss(\n  //   farmerPoriesSortedByDecPower,\n  //   supporterMaxPowerOf2\n  // );\n\n  const max1 = farmerPoriesSortedByDecPower[0],\n    max2 = farmerPoriesSortedByDecPower[1];\n  const maxSum = max1.power + max2.power;\n  const minCost = max1.rewardLevel + max2.rewardLevel;\n\n  await ctx.ui.writeMessage(\n    `sbattle ${mineId}: max2Power power ${maxSum} cost ${minCost} pair ${max1.id} - ${max1.power} - ${max1.rewardLevel}, ${max2.id} - ${max2.power} - ${max2.rewardLevel}`\n  );\n\n  const sFarmer = sCellInfo.farmer.map((itm) => +itm);\n  const srcIds = [max1, max2]\n    .filter((itm) => !sFarmer.includes(itm.id))\n    .map((itm) => itm.id);\n  const desIds = sFarmer.filter((itm) => ![max1.id, max2.id].includes(itm));\n\n  // fill 0 for remaining\n  if (desIds.length != srcIds.length) {\n    const needToFill = srcIds.length - desIds.length;\n    for (let i = 0; i < needToFill; i++) {\n      desIds.push(0);\n    }\n  }\n\n  await ctx.ui.writeMessage(\n    `sbattle ${mineId}: move srcIds: ${srcIds.join(\n      ','\n    )} -> desIds: ${desIds.join(',')} `\n  );\n\n  return {\n    missionId: mineId,\n    srcIds,\n    desIds,\n    sTreasureIndex: sIndex,\n  };\n}\n\nasync function sbattleSlotPickCase3({\n  mineInfo,\n  sCellInfo,\n  isFarmer,\n  ctx,\n}: {\n  mineInfo: AdventureInfoEx;\n  sCellInfo: SCSCellInfo;\n  isFarmer: boolean;\n  ctx: Context;\n}): Promise<SBattlerDecision | null> {\n  const parseMineInfo = _parseMineInfo(mineInfo);\n  const {\n    mineId,\n    sIndex,\n    powerOf,\n    farmerMaxPowerOf2,\n    farmerPoriesSortedByDecPower,\n  } = parseMineInfo;\n  const sPowerFarmer = sum(sCellInfo.farmer.map((itm) => powerOf(itm)));\n  const sPowerSupporter = sum(sCellInfo.helper.map((itm) => powerOf(itm)));\n\n  // no need to play. win S already\n  if (sPowerFarmer > sPowerSupporter) {\n    await ctx.ui.writeMessage(\n      `sbattle ${mineId}: explorer power higher ${sPowerFarmer} vs ${sPowerSupporter} and assit can not play s. nothing to do`\n    );\n    return null;\n  }\n\n  // swap 1 pori have power higher\n  const minAtk = powerOf(sCellInfo.helper[0]);\n  const poriInfo = _pickOneMinRewardLevelAndAtkGtXPori(parseMineInfo, minAtk);\n  if (poriInfo) {\n    await ctx.ui.writeMessage(\n      `sbattle ${mineId}: move min rewardLevel -> S. ${poriInfo.id} - R:${poriInfo.rewardLevel} - Pw:${poriInfo.power}`\n    );\n    return {\n      missionId: mineId,\n      srcIds: [poriInfo.id],\n      desIds: [0],\n      sTreasureIndex: sIndex,\n    };\n  }\n\n  // swap 2 pories power -> s\n  if (minAtk > farmerMaxPowerOf2) {\n    await ctx.ui.writeMessage(\n      `sbattle ${mineId}: don't have 2 pories atk > ${minAtk}. nothing to do`\n    );\n    return null;\n  }\n\n  const max1 = farmerPoriesSortedByDecPower[0],\n    max2 = farmerPoriesSortedByDecPower[1];\n  const maxSum = max1.power + max2.power;\n  const minCost = max1.rewardLevel + max2.rewardLevel;\n\n  await ctx.ui.writeMessage(\n    `sbattle ${mineId}: max2Power power ${maxSum} cost ${minCost} pair ${max1.id} - ${max1.power} - ${max1.rewardLevel}, ${max2.id} - ${max2.power} - ${max2.rewardLevel}`\n  );\n\n  const sFarmer = sCellInfo.farmer.map((itm) => +itm);\n  const srcIds = [max1, max2]\n    .filter((itm) => !sFarmer.includes(itm.id))\n    .map((itm) => itm.id);\n  const desIds = sFarmer.filter((itm) => ![max1.id, max2.id].includes(itm));\n\n  // fill 0 for remaining\n  if (desIds.length != srcIds.length) {\n    const needToFill = srcIds.length - desIds.length;\n    for (let i = 0; i < needToFill; i++) {\n      desIds.push(0);\n    }\n  }\n\n  await ctx.ui.writeMessage(\n    `sbattle ${mineId}: move srcIds: ${srcIds.join(\n      ','\n    )} -> desIds: ${desIds.join(',')} `\n  );\n\n  return {\n    missionId: mineId,\n    srcIds,\n    desIds,\n    sTreasureIndex: sIndex,\n  };\n}\n\nfunction _parseMineInfo(mineInfo: AdventureInfoEx) {\n  const farmerPories = mineInfo.farmerPories || [];\n  const farmerRewardLevel = mineInfo.farmerRewardLevel || [];\n  const farmerSlots = mineInfo.farmerSlots || [];\n  const supporterPories = mineInfo.supporterPories || [];\n  const supporterRewardLevel = mineInfo.supporterRewardLevel || [];\n  const supporterSlots = mineInfo.supporterSlots || [];\n  const mineId = mineInfo.mineId;\n\n  const activeIndexs = [\n    ...(mineInfo?.farmerSlots || []),\n    ...(mineInfo?.supporterSlots || []),\n  ];\n  const activeRewardLevels = [...farmerRewardLevel, ...supporterRewardLevel];\n  const sIndex = activeIndexs[activeRewardLevels.indexOf(4)];\n  const powerOf = (id: number | string) => {\n    return mineInfo.powers[id.toString()];\n  };\n\n  const farmerPoriesSortedByDecPower = sortBy(\n    farmerPories.map((itm, index) => ({\n      id: itm,\n      index,\n      power: powerOf(itm),\n      rewardLevel: farmerRewardLevel[index],\n    })),\n    (a) => a.power\n  ).reverse();\n  const supporterPoriesSortedByDecPower = sortBy(\n    supporterPories.map((itm, index) => ({\n      id: itm,\n      index,\n      power: powerOf(itm),\n      rewardLevel: supporterRewardLevel[index],\n    })),\n    (a) => a.power\n  ).reverse();\n\n  const farmerMaxPowerOf2 =\n    farmerPoriesSortedByDecPower[0].power +\n    farmerPoriesSortedByDecPower[1].power;\n\n  const supporterMaxPowerOf2 =\n    supporterPoriesSortedByDecPower[0].power +\n    supporterPoriesSortedByDecPower[1].power;\n\n  return {\n    mineId,\n    sIndex,\n    hasS: !!sIndex,\n    farmerPories,\n    farmerRewardLevel,\n    farmerSlots,\n    supporterPories,\n    supporterRewardLevel,\n    supporterSlots,\n\n    farmerPoriesSortedByDecPower,\n    supporterPoriesSortedByDecPower,\n    farmerMaxPowerOf2,\n    supporterMaxPowerOf2,\n    powerOf,\n  };\n}\n\nfunction _pickOneMinRewardLevelPori(mineInfo: ParseMineInfo) {\n  const { farmerPoriesSortedByDecPower } = mineInfo;\n  const res = minBy(farmerPoriesSortedByDecPower, (itm) => itm.rewardLevel);\n\n  if (!res) return null;\n  return res.id;\n}\n\nfunction _pickOneMinRewardLevelAndAtkGtXPori(\n  mineInfo: ParseMineInfo,\n  minAtk: number\n) {\n  const { farmerPoriesSortedByDecPower } = mineInfo;\n  const tmp = farmerPoriesSortedByDecPower.filter((itm) => itm.power > minAtk);\n  const res = minBy(tmp, (itm) => itm.rewardLevel);\n  if (!res) return null;\n  return res;\n}\n\nfunction _pickSMinimizeLoss(\n  farmerPoriesSortedByDecPower: {\n    id: number;\n    index: number;\n    power: number;\n    rewardLevel: number;\n  }[],\n  supporterMaxPowerOf2: number\n) {\n  const arr = farmerPoriesSortedByDecPower.reverse();\n  let max1 = farmerPoriesSortedByDecPower[0],\n    max2 = farmerPoriesSortedByDecPower[1];\n  let maxSum = 0,\n    minCost = Number.MAX_VALUE;\n\n  for (let i = 0; i < arr.length - 1; i++) {\n    const p1 = arr[i];\n    for (let j = i + 1; j < arr.length; j++) {\n      const p2 = arr[j];\n\n      if (\n        maxSum < p1.power + p2.power &&\n        p1.power + p2.power > supporterMaxPowerOf2 &&\n        minCost > p1.rewardLevel + p2.rewardLevel\n      ) {\n        max1 = p1;\n        max2 = p2;\n        maxSum = p1.power + p2.power;\n        minCost = p1.rewardLevel + p2.rewardLevel;\n      }\n    }\n  }\n  return { maxSum, minCost, max1, max2 };\n}\n","import { Adventure } from '../../index';\nimport { AdventureInfoEx, Context } from '@pori-and-friends/pori-metadata';\nimport { uniq } from 'lodash';\nimport { ESB_P_THRESHOLD_KEEP_BIG_REWARD } from './autoPlayWorkflow';\n\n/*\n  No supporter\n    random new slot\n  If has bigReward\n    farmer found:\n      calculate esb. If >= 15%\n        send support to bigReward slot (protect it)\n      else\n        open new slot\n    assit found: ignore -> open new slot\n  else\n    open new slot\n*/\nexport async function supportSlotPick({\n  mineInfo,\n  isFarmer,\n  pori,\n  ctx,\n}: {\n  mineInfo: AdventureInfoEx;\n  isFarmer: boolean;\n  pori: string;\n  ctx: Context;\n}): Promise<number> {\n  const supporterRewardLevel = mineInfo?.supporterRewardLevel || [];\n  const farmerRewardLevel = mineInfo?.farmerRewardLevel || [];\n  const hasSupporter = !!mineInfo.supporterAddress;\n  const activeIndexs = [\n    ...(mineInfo?.farmerSlots || []),\n    ...(mineInfo?.supporterSlots || []),\n  ];\n  const activeRewardLevels = [...farmerRewardLevel, ...supporterRewardLevel];\n\n  let slotIndex!: number;\n  const bigRewardIndex = activeIndexs[activeRewardLevels.indexOf(4)];\n  const isFarmerFound = farmerRewardLevel.includes(4);\n  let esbPercentage = NaN;\n  let bigRewardEP = -1,\n    bigRewardAP = -1;\n\n  if (!hasSupporter)\n    slotIndex = Adventure.randAdventureSlot(1, uniq(activeIndexs))[0];\n  else if (hasSupporter && mineInfo.hasBigReward) {\n    if (isFarmerFound) {\n      // calculate ESB\n      //  https://docs.poriverse.io/game-guide/chapter-1-the-lost-porian/esb-explorer-strike-back\n      const farmerPories = mineInfo?.farmerPories || [];\n      const supporterPories = mineInfo?.supporterPories || [];\n      const farmerPori = farmerPories[farmerRewardLevel.indexOf(4)];\n      bigRewardEP = mineInfo?.powers[farmerPori] ?? 0;\n      const supporterPori = supporterPories[supporterRewardLevel.indexOf(4)];\n      bigRewardAP = mineInfo?.powers[supporterPori] ?? 0;\n      const esbCal = await ctx.contract.methods\n        .getESB(bigRewardEP, bigRewardAP)\n        .call();\n      esbPercentage = Math.round(+esbCal / 100);\n      // calculate ESB - end\n      if (esbPercentage >= ESB_P_THRESHOLD_KEEP_BIG_REWARD) {\n        slotIndex = bigRewardIndex;\n      } else slotIndex = Adventure.randAdventureSlot(1, uniq(activeIndexs))[0];\n    } else slotIndex = Adventure.randAdventureSlot(1, uniq(activeIndexs))[0];\n  } else {\n    slotIndex = Adventure.randAdventureSlot(1, uniq(activeIndexs))[0];\n  }\n\n  console.log({\n    isFarmer,\n    activeIndexs,\n    activeRewardLevels,\n    bigRewardIndex,\n    pori,\n    slotIndex,\n    isFarmerFound,\n  });\n  await ctx.ui.writeMessage(\n    `roger that!. send pori ${pori} to support mineId:${mineInfo.mineId} at ${slotIndex} \n\n    - (bigRewardIndex: ${bigRewardIndex}, isFarmerFound:${isFarmerFound}) \n    - (bigRewardEP1: ${bigRewardEP}, bigRewardAP1: ${bigRewardAP}, esbPercentage: ${esbPercentage})`\n  );\n  return slotIndex;\n}\n","import { EventEmitter } from 'stream';\nimport { Context } from '@pori-and-friends/pori-metadata';\nimport { BlockNumber } from 'web3-core';\n\nexport async function getMineInfo({ contract }: Context, mineId: string) {\n  const mineInfo = await contract.methods.mines(mineId).call();\n  const { state, farmer, helper, rewardMap } = mineInfo;\n  return { state, farmer, helper, rewardMap };\n}\n\nexport async function listenEvents({\n  contract,\n}: Context): Promise<EventEmitter> {\n  // To scan pass event from blockA -> blockB\n  // use\n  //  https://web3js.readthedocs.io/en/v1.7.3/web3-eth-contract.html#getpastevents\n\n  // Scan all event from currentTime\n  return contract.events\n    .allEvents()\n    .on('connected', function (subscriptionId: string) {\n      console.log(subscriptionId);\n    });\n}\n\nexport async function scanEvents(\n  ctx: Context,\n  {\n    filter = 'allEvents',\n    fromBlock,\n    toBlock,\n  }: {\n    filter: string;\n    fromBlock: BlockNumber;\n    toBlock: BlockNumber;\n  }\n) {\n  const contract = ctx.contract;\n\n  return contract.getPastEvents(filter, {\n    fromBlock,\n    toBlock,\n  });\n}\n","import { Adventure, WalletActions } from '../../index';\nimport {\n  AdventureInfoEx,\n  Context,\n  getChainExplorerTxHashLink,\n  getIdleGameAddressSC,\n} from '@pori-and-friends/pori-metadata';\nimport { boolFromString } from '@pori-and-friends/utils';\nimport type { ITxData } from '@walletconnect/types';\nimport { uniq } from 'lodash';\nimport { refreshAdventureStatsForAddress } from '../computed/myAdventure';\nimport { SBattlerDecision, sbattleSlotPick } from '../auto/sbattleSlotPick';\nimport { getPoriansAtSCellSc } from '../adventure';\n\n//------------------------------------------------------------------------//\n//\n//------------------------------------------------------------------------//\n\nexport async function cmdDoMine({\n  ctx,\n  realm,\n  args,\n  minePories,\n}: {\n  ctx: Context;\n  realm: Realm;\n  args: string;\n  minePories: string[];\n}) {\n  if (!ctx.walletAcc) {\n    console.warn('wallet channel not ready. Please run wallet_unlock first');\n    return;\n  }\n\n  const tmp = args.split(' ');\n  const usePortal = boolFromString(tmp[0]);\n\n  const poriants = minePories;\n  const index = Adventure.randAdventureSlot(3);\n\n  await ctx.ui.writeMessage(\n    `roger that!. Start new mine. usePortal:${usePortal}`\n  );\n\n  const callData = ctx.contract.methods\n    .startAdventure(\n      // poriants\n      poriants,\n\n      // index\n      index,\n\n      // notPortal\n      !usePortal\n    )\n    .encodeABI();\n\n  console.log({\n    poriants,\n    index,\n    usePortal,\n  });\n\n  const tx = {\n    from: ctx.walletAcc.address,\n    to: getIdleGameAddressSC(ctx.env).address,\n    data: callData, // Required\n  };\n\n  if (!ctx.walletAcc)\n    await ctx.ui.writeMessage(`Sir! please accept tx in trust wallet`);\n\n  // Sign transaction\n  const txHash = await WalletActions.sendRequestForWalletConnectTx(\n    { ctx },\n    tx,\n    (r) => {\n      ctx.ui.writeMessage(`on Receipt: ${r.transactionHash}`);\n    }\n  );\n  if (txHash)\n    await ctx.ui.writeMessage(getChainExplorerTxHashLink(ctx.env, txHash));\n  else await ctx.ui.writeMessage(`Ố ồ..`);\n}\n\n//------------------------------------------------------------------------//\n//\n//------------------------------------------------------------------------//\n\nexport async function cmdDoFinish({\n  ctx,\n  realm,\n  args,\n}: {\n  ctx: Context;\n  realm: Realm;\n  args: string;\n}) {\n  if (!ctx.walletAcc) {\n    console.warn('wallet channel not ready. Please run wallet_unlock first');\n    return;\n  }\n\n  const tmp = args.split(' ');\n  const mineId = parseInt(tmp[0]);\n  if (Number.isNaN(mineId)) {\n    return await ctx.ui.writeMessage(`Usage: /finish <mineId>`);\n  }\n  const playerAddress = ctx.playerAddress || '';\n  const addvStats = await refreshAdventureStatsForAddress(\n    { realm, ctx },\n    playerAddress\n  );\n\n  const mineInfo = addvStats.mines[mineId];\n  if (!mineInfo) {\n    console.log('opps. Mine status changed');\n    await ctx.ui.writeMessage(\n      `opps. Mine status changed. Already finished....`\n    );\n    return;\n  }\n\n  await ctx.ui.writeMessage(`roger that!. Finish mine: ${mineId}`);\n\n  const callData = ctx.contract.methods\n    .finish(\n      // poriants\n      mineId\n    )\n    .encodeABI();\n\n  console.log({\n    mineId,\n  });\n\n  const tx = {\n    from: ctx.walletAcc.address,\n    to: getIdleGameAddressSC(ctx.env).address,\n    data: callData, // Required\n  };\n\n  if (!ctx.walletAcc)\n    await ctx.ui.writeMessage(`Sir! please accept tx in trust wallet`);\n\n  // Sign transaction\n  const txHash = await WalletActions.sendRequestForWalletConnectTx(\n    { ctx },\n    tx,\n    (r) => {\n      ctx.ui.writeMessage(`on Receipt: ${r.transactionHash}`);\n    }\n  );\n  if (txHash)\n    await ctx.ui.writeMessage(getChainExplorerTxHashLink(ctx.env, txHash));\n  else await ctx.ui.writeMessage(`Ố ồ..`);\n}\n\n//------------------------------------------------------------------------//\n//\n//------------------------------------------------------------------------//\n\nexport async function cmdDoAtk({\n  ctx,\n  realm,\n  FORMATION,\n  MINE_ATK_PRICE_FACTOR,\n  args,\n}: {\n  ctx: Context;\n  realm: Realm;\n  args: string;\n  FORMATION: string[];\n  MINE_ATK_PRICE_FACTOR: number;\n}) {\n  if (!ctx.walletAcc) {\n    console.warn('wallet channel not ready. Please run wallet_unlock first');\n    return;\n  }\n  const tmp = args.split(' ');\n  const mineId = tmp[0];\n  const usePortal = boolFromString(tmp[1]);\n  if (!mineId) {\n    await ctx.ui.writeMessage('\\tUsage: /atk <mineId> [usePortal = false]');\n    return;\n  }\n\n  const addvStats = await refreshAdventureStatsForAddress(\n    { realm, ctx },\n    ctx.playerAddress || ''\n  );\n\n  await ctx.ui.writeMessage(\n    `roger that!. Start atk mineId:${mineId} usePortal:${usePortal}`\n  );\n  console.log({ mineId, usePortal });\n  const mineInfo = addvStats.targets[mineId];\n\n  if (!mineInfo) {\n    console.log('opps. Mine status changed');\n    await ctx.ui.writeMessage(`opps. Mine status changed. Retreat....`);\n    return;\n  }\n\n  const poriants = FORMATION;\n  const index = Adventure.randAdventureSlot(3, mineInfo.farmerSlots);\n\n  const callData = ctx.contract.methods\n    .support1(\n      // mineId\n      mineId,\n      // poriants\n      poriants,\n\n      // index\n      index,\n\n      // notPortal\n      !usePortal\n    )\n    .encodeABI();\n\n  console.log({\n    method: 'support1',\n    mineId,\n    poriants,\n    index,\n    usePortal,\n    callData,\n  });\n\n  const web3GasPrice = await WalletActions.currentGasPrice({ ctx });\n  const factor = MINE_ATK_PRICE_FACTOR;\n\n  const tx: ITxData = {\n    from: ctx.walletAcc.address,\n    to: getIdleGameAddressSC(ctx.env).address,\n    data: callData, // Required\n    gasPrice: +web3GasPrice * factor,\n  };\n\n  if (!ctx.walletAcc)\n    await ctx.ui.writeMessage(`Sir! please accept tx in trust wallet`);\n\n  // Sign transaction\n  const txHash = await WalletActions.sendRequestForWalletConnectTx(\n    { ctx },\n    tx,\n    (r) => {\n      ctx.ui.writeMessage(`on Receipt: ${r.transactionHash}`);\n    }\n  );\n  if (txHash)\n    await ctx.ui.writeMessage(getChainExplorerTxHashLink(ctx.env, txHash));\n  else await ctx.ui.writeMessage(`Ố ồ..`);\n}\n\n//------------------------------------------------------------------------//\n//\n//------------------------------------------------------------------------//\n\n// args: mineId\n// const args = match[1];\n//      supporter: support2(mineId, porian, index)\n//      farmer: fortify(mineId, porian, index)\nexport type SupportSlotCalculator = typeof defaultSupportSlotPick;\nexport async function cmdDoSupport({\n  ctx,\n  realm,\n  args,\n  SUPPORT_PORI,\n  customSlotPick = defaultSupportSlotPick,\n}: {\n  ctx: Context;\n  realm: Realm;\n  args: string;\n  SUPPORT_PORI: string;\n  customSlotPick?: SupportSlotCalculator;\n}) {\n  if (!ctx.walletAcc) {\n    console.warn('wallet channel not ready. Please run wallet_unlock first');\n    return;\n  }\n\n  const tmp = args.split(' ');\n  const mineId = tmp[0];\n  if (!mineId) {\n    await ctx.ui.writeMessage('\\tUsage: /mine_support <mineId>');\n    return;\n  }\n\n  const addvStats = await refreshAdventureStatsForAddress(\n    { realm, ctx },\n    ctx.playerAddress || ''\n  );\n\n  const mineInfo = addvStats.mines[mineId];\n  if (!mineInfo) {\n    console.log('opps. Mine status changed');\n    await ctx.ui.writeMessage(`opps. Mine not found`);\n    return;\n  }\n  const isFarmer = mineInfo.isFarmer;\n  const pori = SUPPORT_PORI;\n\n  const slotIndex = await customSlotPick({\n    mineInfo,\n    isFarmer,\n    pori,\n    ctx,\n  });\n\n  let callDataAbi = '';\n  if (isFarmer) {\n    callDataAbi = ctx.contract.methods\n      .fortify(mineId, pori, slotIndex)\n      .encodeABI();\n  } else\n    callDataAbi = ctx.contract.methods\n      .support2(mineId, pori, slotIndex)\n      .encodeABI();\n\n  const tx = {\n    from: ctx.walletAcc.address,\n    to: getIdleGameAddressSC(ctx.env).address,\n    data: callDataAbi, // Required\n  };\n\n  if (!ctx.walletAcc)\n    await ctx.ui.writeMessage(`Sir! please accept tx in trust wallet`);\n\n  // Sign transaction\n  const txHash = await WalletActions.sendRequestForWalletConnectTx(\n    { ctx },\n    tx,\n    (r) => {\n      ctx.ui.writeMessage(`on Receipt: ${r.transactionHash}`);\n    }\n  );\n  if (txHash)\n    await ctx.ui.writeMessage(getChainExplorerTxHashLink(ctx.env, txHash));\n  else await ctx.ui.writeMessage(`Ố ồ..`);\n}\n\n// IF has bigReward (level = 4 at index i)\n//    Support this index\n// Else\n//    Random remaining slots\nasync function defaultSupportSlotPick({\n  mineInfo,\n  isFarmer,\n  pori,\n  ctx,\n}: {\n  mineInfo: AdventureInfoEx;\n  isFarmer: boolean;\n  pori: string;\n  ctx: Context;\n}): Promise<number> {\n  const activeIndexs = [\n    ...(mineInfo?.farmerSlots || []),\n    ...(mineInfo?.supporterSlots || []),\n  ];\n  const activeRewardLevels = [\n    ...(mineInfo?.farmerRewardLevel || []),\n    ...(mineInfo?.supporterRewardLevel || []),\n  ];\n\n  const bigRewardIndex = activeIndexs[activeRewardLevels.indexOf(4)];\n\n  const slotIndex = bigRewardIndex\n    ? bigRewardIndex\n    : Adventure.randAdventureSlot(1, uniq(activeIndexs))[0];\n\n  console.log({\n    isFarmer,\n    activeIndexs,\n    activeRewardLevels,\n    bigRewardIndex,\n    pori,\n    slotIndex,\n  });\n  await ctx.ui.writeMessage(\n    `roger that!. send pori ${pori} to support mineId:${mineInfo.mineId} at ${slotIndex} (bigRewardIndex: ${bigRewardIndex})`\n  );\n  return slotIndex;\n}\n\n//------------------------------------------------------------------------//\n//\n//------------------------------------------------------------------------//\n\nexport async function cmdDoSBattle({\n  ctx,\n  realm,\n  args,\n}: {\n  ctx: Context;\n  realm: Realm;\n  args: string;\n}) {\n  if (!ctx.walletAcc) {\n    console.warn('wallet channel not ready. Please run wallet_unlock first');\n    return;\n  }\n\n  const tmp = args.split(' ');\n  const mineId = tmp[0];\n  if (!mineId) {\n    await ctx.ui.writeMessage('\\tUsage: /sbattle <mineId>');\n    return;\n  }\n\n  const playerAddress = ctx.playerAddress || '';\n  const addvStats = await refreshAdventureStatsForAddress(\n    { realm, ctx },\n    playerAddress\n  );\n\n  const mineInfo = addvStats.mines[mineId];\n  if (!mineInfo) {\n    await ctx.ui.writeMessage(`opps. Mine not found`);\n    return;\n  }\n\n  await ctx.ui.writeMessage(`roger that!. SBattle for mine: ${mineId}`);\n\n  const sCellInfo = await getPoriansAtSCellSc(ctx, mineId);\n  const sbattleCmd = await sbattleSlotPick({\n    ctx,\n    mineInfo,\n    sCellInfo,\n    isFarmer: true,\n  });\n\n  if (!sbattleCmd) {\n    return;\n  }\n\n  // missionId\n  // srcIds\n  // desIds\n  // sTreasure\n  const callData = ctx.contract.methods\n    .swapPorians(\n      sbattleCmd.missionId,\n      sbattleCmd.srcIds,\n      sbattleCmd.desIds,\n      sbattleCmd.sTreasureIndex\n    )\n    .encodeABI();\n\n  const tx = {\n    from: ctx.walletAcc.address,\n    to: getIdleGameAddressSC(ctx.env).address,\n    data: callData, // Required\n  };\n\n  // Sign transaction\n  const txHash = await WalletActions.sendRequestForWalletConnectTx(\n    { ctx },\n    tx,\n    (r) => {\n      ctx.ui.writeMessage(`on Receipt: ${r.transactionHash}`);\n    }\n  );\n  if (txHash)\n    await ctx.ui.writeMessage(getChainExplorerTxHashLink(ctx.env, txHash));\n  else await ctx.ui.writeMessage(`Ố ồ..`);\n}\n","import { Input, DataView, WalletActions, token2Usd } from '../../index';\nimport * as Repos from '@pori-and-friends/pori-repositories';\nimport {\n  AdventureInfoEx,\n  AdventureInfo,\n  Context,\n  getIdleGameAddressSC,\n  AdventureStatsGroupByDay,\n} from '@pori-and-friends/pori-metadata';\nimport { maxBy, minBy } from 'lodash';\nimport moment from 'moment';\nimport { queryPortalInfoSc, SCPortalInfo } from '../adventure';\nimport { URL } from 'url';\n\nconst QUICK_CHART_URL =\n  'https://quickchart.io/chart/render/sm-d5f8d67a-d271-4d30-9ae1-be744bd2627e';\n\nexport type ProtentialTarget = {\n  link: string;\n  mineId: number;\n  hasBigReward: boolean;\n  startTimeLocalTime: string;\n  startTime: Date;\n  sinceSec: number;\n};\n\nexport type AdventureStatsComputed = {\n  note: any;\n  mines: Record<string, AdventureInfoEx>;\n  targets: Record<string, AdventureInfoEx>;\n  protentialTarget: ProtentialTarget[];\n  activeMines: number;\n  canDoNextAction: boolean;\n  nextActionAt: string;\n  nextAtkAt: string;\n  nextActionAtDate?: Date;\n  nextAtkAtDate?: Date;\n  gasPriceGWEI: string;\n  todayStats?: AdventureStatsGroupByDay;\n  portalInfo?: SCPortalInfo;\n  price?: {\n    rigy2Usd: number;\n    rken2Usd: number;\n  };\n};\n\nexport async function refreshAdventureStatsForAddress(\n  {\n    realm,\n    ctx,\n    options = {\n      withGasPrice: false,\n      withPortal: false,\n      withPrice: false,\n    },\n  }: {\n    realm: Realm;\n    ctx: Context;\n    options?: {\n      withGasPrice?: boolean;\n      withPortal?: boolean;\n      withPrice?: boolean;\n    };\n  },\n  addr: string\n): Promise<AdventureStatsComputed> {\n  const createdBlock = getIdleGameAddressSC(ctx.env).createdBlock;\n  await Input.updateEventDb(realm, ctx, {\n    createdBlock,\n  });\n\n  const activeAddr = addr;\n  const now = Date.now();\n\n  const viewData = await DataView.computePlayerAdventure({\n    realm,\n    playerAddress: activeAddr,\n    realmEventStore: await Repos.IdleGameSCEventRepo.findAll(realm),\n  });\n\n  // humanView\n  const humanView: AdventureStatsComputed = {\n    note: DataView.humanrizeNote(viewData),\n\n    // my active adventures\n    mines: {} as Record<string, AdventureInfoEx>,\n\n    // protential target\n    targets: {},\n    protentialTarget: [],\n    activeMines: 0,\n    canDoNextAction: false,\n    nextActionAt: '',\n    nextActionAtDate: new Date(),\n    nextAtkAt: '',\n    nextAtkAtDate: new Date(),\n    gasPriceGWEI: '',\n  };\n\n  for (const k of Object.keys(viewData.activeAdventures)) {\n    const value = viewData.activeAdventures[k as any] as AdventureInfo;\n    if (\n      value.farmerAddress === activeAddr ||\n      value.supporterAddress === activeAddr\n    )\n      humanView.mines[k] = DataView.humanrizeAdventureInfo(\n        ctx,\n        realm,\n        value,\n        true\n      );\n    else if (value.state === 'AdventureStarted') {\n      humanView.targets[k] = DataView.humanrizeAdventureInfo(ctx, realm, value);\n    }\n  }\n\n  humanView.protentialTarget = Object.keys(humanView.targets)\n    .map((key) => {\n      const val = humanView.targets[key];\n      const sinceSec = (now - new Date(val.startTime ?? 0).valueOf()) / 1000;\n      return {\n        link: val.link,\n        mineId: val.mineId,\n        hasBigReward: val.hasBigReward,\n        startTimeLocalTime: new Date(val.startTime ?? 0).toLocaleString(),\n        startTime: new Date(val.startTime ?? 0),\n        sinceSec,\n      };\n    })\n    .sort((a, b) => {\n      return +a.hasBigReward - +b.hasBigReward;\n    });\n\n  humanView.activeMines = Object.keys(humanView.mines).length;\n\n  // mine completed by farmer. But our poriant still lock\n  if (humanView.note.readyToStart === false) humanView.activeMines++;\n\n  if (options.withGasPrice) {\n    const web3GasPrice = await WalletActions.currentGasPrice({ ctx });\n    humanView.gasPriceGWEI = ctx.web3.utils.fromWei(web3GasPrice, 'gwei');\n  }\n\n  // next action timeline\n  const timeViewMine = Object.values(humanView.mines);\n  const noBlock = timeViewMine.every((itm) => {\n    return !!itm.canCollect;\n  });\n  const nextActionAt = maxBy(timeViewMine, (v) =>\n    v.blockedTo.valueOf()\n  )?.blockedTo;\n\n  const nextAtkAt = minBy(\n    timeViewMine.filter((itm) => itm.atkAt.valueOf() > now),\n    (v) => v.atkAt.valueOf()\n  )?.atkAt;\n\n  humanView.canDoNextAction = humanView.note.readyToStart && noBlock;\n  if (nextActionAt) {\n    humanView.nextActionAt = `${nextActionAt.toLocaleString()} - ${moment(\n      nextActionAt\n    ).fromNow()}`;\n  }\n  humanView.nextActionAtDate = nextActionAt;\n\n  if (nextAtkAt) {\n    humanView.nextAtkAt = `${nextAtkAt.toLocaleString()} - ${moment(\n      nextAtkAt\n    ).fromNow()}`;\n  }\n  humanView.nextAtkAtDate = nextAtkAt;\n\n  // stats\n  const toDayNo = moment().startOf('D').unix();\n  humanView.todayStats = viewData.finishedAdventures[toDayNo];\n\n  // portal\n  if (options.withPortal) {\n    humanView.portalInfo = await queryPortalInfoSc(ctx, addr);\n  }\n\n  // price\n  if (options.withPrice) {\n    humanView.price = await token2Usd(ctx);\n    if (humanView.todayStats) {\n      humanView.todayStats.rigyUsd =\n        humanView.todayStats.totalRigy * humanView.price.rigy2Usd;\n      humanView.todayStats.rikenUsd =\n        humanView.todayStats.totalRiken * humanView.price.rken2Usd;\n    }\n  }\n\n  return humanView;\n}\n\nexport async function genLast7DaysGraphData({\n  ctx,\n  realm,\n  playerAddress,\n}: {\n  ctx: Context;\n  realm: Realm;\n  playerAddress: string;\n}) {\n  const viewData = await DataView.computePlayerAdventure({\n    realm,\n    playerAddress: playerAddress,\n    realmEventStore: await Repos.IdleGameSCEventRepo.findAll(realm),\n  });\n  const entries = Object.entries(viewData.finishedAdventures);\n\n  const last7Days = entries\n    .map((itm) => itm[1])\n    .sort((a, b) => b.unixDay - a.unixDay)\n    .slice(0, 7)\n    .reverse();\n\n  const graphData: { labels: string[]; data1: string[]; data2: string[] } = {\n    labels: [],\n    data1: [],\n    data2: [],\n  };\n  for (const it of last7Days) {\n    const tmp = moment(it.timestamp).format('MMM-DD');\n    graphData.labels.push(tmp);\n    graphData.data1.push(Math.round(it.totalRigy).toString());\n    graphData.data2.push(Math.round(it.totalRiken).toString());\n  }\n\n  const url = new URL(QUICK_CHART_URL);\n  url.searchParams.append('labels', graphData.labels.join(','));\n  url.searchParams.append('data1', graphData.data1.join(','));\n\n  return { graphData, url: url.toString() };\n}\n","export * from './playerAdventure';\n","import type Realm from 'realm';\nimport {\n  IdleGameSCEventDataModel,\n  DataViewRepo,\n  DataViewModel,\n  PoriRepo,\n} from '@pori-and-friends/pori-repositories';\nimport {\n  AdventureFinishedData,\n  AdventureFortifiedData,\n  AdventureInfo,\n  AdventureInfoEx,\n  AdventureStartedData,\n  AdventureStatsGroupByDay,\n  AdventureSupported1Data,\n  AdventureSupported2Data,\n  calculateMineTurnTime,\n  Context,\n  EIdleGameSCEventType,\n  getAdventureBaseLink,\n  SBattleSwapData,\n} from '@pori-and-friends/pori-metadata';\nimport moment from 'moment';\n\nconst TOKEN_DECIMAL = 18;\nconst TOKEN_CONVERT_CONSTANT = 10 ** TOKEN_DECIMAL;\n\nconst HEAD_VERSION = '1';\nexport interface IComputePlayerAdventureProps {\n  realm: Realm;\n  playerAddress: string;\n  realmEventStore: Realm.Results<IdleGameSCEventDataModel & Realm.Object>;\n}\n\nexport interface ActiveAdventureComputed {\n  playerAddress: string;\n  note: {\n    lastMine?: number;\n    lastMineUnlockAt?: Date;\n  };\n  activeAdventures: Record<number, AdventureInfo>;\n  finishedAdventures: Record<number, AdventureStatsGroupByDay>;\n}\n\nexport async function computePlayerAdventure(\n  options: IComputePlayerAdventureProps\n) {\n  const { realm, playerAddress } = options;\n  const viewId = computeViewId(options);\n  const lastViewIns = await getLastView(options);\n  const { cursor } = lastViewIns;\n  const viewData = JSON.parse(lastViewIns.data) as ActiveAdventureComputed;\n\n  const allEvents = options.realmEventStore.filtered(\n    `\n      _id > oid(${cursor}) && (\n        type=\"AdventureStarted\" ||\n        type=\"AdventureSupported1\" ||\n        type=\"AdventureFortified\" ||\n        type=\"AdventureSupported2\" ||\n        type=\"SBattleSwapped\" ||\n        type=\"AdventureFinished\"\n      )\n    `\n  );\n\n  if (allEvents.length <= 0) return viewData;\n  console.log('need to process', { playerAddress, count: allEvents.length });\n  for (const it of allEvents) {\n    switch (it.type) {\n      case EIdleGameSCEventType.AdventureStarted:\n        {\n          const evData = it.data as AdventureStartedData;\n          const isFarmer = evData.farmer === playerAddress;\n\n          viewData.activeAdventures[evData.mineId] = {\n            mineId: evData.mineId,\n            state: 'AdventureStarted',\n\n            isFarmer,\n            farmerAddress: evData.farmer,\n            startTime: new Date(evData.startTime * 1000),\n            farmerEndTime: new Date(evData.blockedTime * 1000),\n\n            farmerPories: [...evData.porians],\n            farmerRewardLevel: [...evData.rewardLevels],\n            farmerSlots: [...evData.indexes],\n          };\n        }\n        break;\n\n      case EIdleGameSCEventType.AdventureSupported1:\n        {\n          const evData = it.data as AdventureSupported1Data;\n          const isSupporter = evData.helper === playerAddress;\n          const mineInfo = viewData.activeAdventures[evData.mineId];\n\n          if (!mineInfo) {\n            console.log('missing', evData.mineId);\n            break;\n          }\n\n          // not interesting\n          if (!(isSupporter || mineInfo.isFarmer)) {\n            delete viewData.activeAdventures[evData.mineId];\n            break;\n          }\n\n          viewData.activeAdventures[evData.mineId] = {\n            ...mineInfo,\n            state: 'AdventureSupported1',\n            isSupporter,\n            supporterEndTime: new Date(evData.blockedTime * 1000),\n            supporterAddress: evData.helper,\n\n            supporterPories: evData.porians,\n            supporterRewardLevel: evData.rewardLevels,\n            supporterSlots: evData.indexes,\n          };\n        }\n        break;\n\n      case EIdleGameSCEventType.AdventureFortified:\n        {\n          const evData = it.data as AdventureFortifiedData;\n          const mineInfo = viewData.activeAdventures[evData.mineId];\n\n          // not interesting\n          if (!mineInfo) break;\n          if (!(mineInfo.isSupporter || mineInfo.isFarmer)) {\n            delete viewData.activeAdventures[evData.mineId];\n            break;\n          }\n\n          viewData.activeAdventures[evData.mineId] = {\n            ...mineInfo,\n            state: 'AdventureFortified',\n\n            farmerEndTime: new Date(evData.blockedTime * 1000),\n\n            // add more pori\n            farmerPories: [...(mineInfo.farmerPories ?? []), evData.porian],\n            farmerRewardLevel: [\n              ...(mineInfo.farmerRewardLevel ?? []),\n              evData.rewardLevel,\n            ],\n            farmerSlots: [...(mineInfo.farmerSlots ?? []), evData.index],\n          };\n        }\n        break;\n\n      case EIdleGameSCEventType.AdventureSupported2:\n        {\n          const evData = it.data as AdventureSupported2Data;\n          const mineInfo = viewData.activeAdventures[evData.mineId];\n\n          // not interesting\n          if (!mineInfo) break;\n          if (!(mineInfo.isSupporter || mineInfo.isFarmer)) {\n            delete viewData.activeAdventures[evData.mineId];\n            break;\n          }\n\n          viewData.activeAdventures[evData.mineId] = {\n            ...mineInfo,\n            state: 'AdventureSupported2',\n\n            supporterEndTime: new Date(evData.blockedTime * 1000),\n\n            // add more pori\n            supporterPories: [\n              ...(mineInfo.supporterPories ?? []),\n              evData.porian,\n            ],\n            supporterRewardLevel: [\n              ...(mineInfo.supporterRewardLevel ?? []),\n              evData.rewardLevel,\n            ],\n            supporterSlots: [...(mineInfo.supporterSlots ?? []), evData.index],\n          };\n        }\n        break;\n\n      case EIdleGameSCEventType.SBattleSwapped:\n        {\n          const evData = it.data as SBattleSwapData;\n          const mineInfo = viewData.activeAdventures[evData.mineId];\n\n          // not interesting\n          if (!mineInfo) break;\n          if (!(mineInfo.isSupporter || mineInfo.isFarmer)) {\n            delete viewData.activeAdventures[evData.mineId];\n            break;\n          }\n\n          const { farmer, from, to, porians } = evData;\n\n          let rewardLevel, slots, pories: number[];\n\n          if (mineInfo.isFarmer) {\n            pories = mineInfo.farmerPories || [];\n            rewardLevel = mineInfo.farmerRewardLevel || [];\n            slots = mineInfo.farmerSlots || [];\n          } else {\n            pories = mineInfo.supporterPories || [];\n            rewardLevel = mineInfo.supporterRewardLevel || [];\n            slots = mineInfo.supporterSlots || [];\n          }\n\n          // do swap\n          const poriIdOutside = +porians[0];\n          const poriIdInside = +porians[1];\n          const outsideIndex = pories.findIndex((itm) => itm === poriIdOutside);\n          const insideIndex = pories.findIndex((itm) => itm === poriIdInside);\n\n          const outsideRewardLevel = rewardLevel[outsideIndex];\n          const outsideSlot = slots[outsideIndex];\n\n          const insideRewardLevel = rewardLevel[insideIndex] || 4;\n          const insideSlot = slots[insideIndex] || +to;\n\n          if (poriIdInside) {\n            rewardLevel[insideIndex] = outsideRewardLevel;\n            slots[insideIndex] = outsideSlot;\n          }\n\n          rewardLevel[outsideIndex] = insideRewardLevel;\n          slots[outsideIndex] = insideSlot;\n\n          if (mineInfo.isFarmer) {\n            viewData.activeAdventures[evData.mineId] = {\n              ...mineInfo,\n              farmerPories: pories,\n              farmerRewardLevel: rewardLevel,\n              farmerSlots: slots,\n            };\n          } else {\n            viewData.activeAdventures[evData.mineId] = {\n              ...mineInfo,\n              supporterPories: pories,\n              supporterRewardLevel: rewardLevel,\n              supporterSlots: slots,\n            };\n          }\n        }\n        break;\n\n      case EIdleGameSCEventType.AdventureFinished:\n        {\n          const evData = it.data as AdventureFinishedData;\n          const mineInfo = viewData.activeAdventures[evData.mineId];\n\n          // not interesting\n          if (!mineInfo) break;\n          if (!(mineInfo.isSupporter || mineInfo.isFarmer)) {\n            delete viewData.activeAdventures[evData.mineId];\n            break;\n          }\n\n          delete viewData.activeAdventures[evData.mineId];\n          const dateNo = moment(\n            mineInfo.isSupporter\n              ? mineInfo.supporterEndTime\n              : mineInfo.farmerEndTime\n          )\n            .startOf('D')\n            .unix();\n\n          const previous = viewData.finishedAdventures[dateNo] || {\n            unixDay: dateNo,\n            timestamp: new Date(dateNo * 1000),\n            finishedMineIds: [],\n            totalRigy: 0,\n            totalRiken: 0,\n          };\n\n          const rigyReward = mineInfo.isSupporter\n            ? evData.helperReward1\n            : evData.farmerReward1;\n          const rikenReward = mineInfo.isSupporter\n            ? evData.helperReward2\n            : evData.farmerReward2;\n\n          viewData.finishedAdventures[dateNo] = {\n            ...previous,\n            finishedMineIds: [...previous.finishedMineIds, mineInfo.mineId],\n            totalRigy:\n              previous.totalRigy +\n              parseFloat(rigyReward.toString()) / TOKEN_CONVERT_CONSTANT,\n            totalRiken:\n              previous.totalRiken +\n              parseFloat(rikenReward.toString()) / TOKEN_CONVERT_CONSTANT,\n          };\n\n          // add note\n          const prevNote = viewData.note ?? {};\n          viewData.note = {\n            ...prevNote,\n            lastMine: mineInfo.mineId,\n            lastMineUnlockAt: mineInfo.isSupporter\n              ? mineInfo.supporterEndTime\n              : mineInfo.farmerEndTime,\n          };\n        }\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  DataViewRepo.txSync(realm, () => {\n    lastViewIns.cursor = allEvents[allEvents.length - 1]._id.toHexString();\n    lastViewIns.data = JSON.stringify(viewData);\n  });\n\n  return viewData;\n}\n\nasync function getLastView(options: IComputePlayerAdventureProps) {\n  const { realm } = options;\n  const viewId = computeViewId(options);\n\n  let viewIns = await DataViewRepo.findOne(realm, viewId);\n  if (!viewIns) {\n    const defaultData = DataViewModel.generate(\n      viewId,\n      '000000000000000000000000',\n      defaultViewData(options),\n      HEAD_VERSION\n    );\n    viewIns = await DataViewRepo.createWithTx(realm, defaultData);\n  }\n\n  return viewIns;\n}\n\nfunction computeViewId(options: IComputePlayerAdventureProps) {\n  return `player:adventure:${options.playerAddress}`;\n}\n\nfunction defaultViewData(\n  options: IComputePlayerAdventureProps\n): ActiveAdventureComputed {\n  return {\n    playerAddress: options.playerAddress,\n    activeAdventures: {},\n    finishedAdventures: {},\n    note: {},\n  };\n}\n\nexport function humanrizeAdventureInfo(\n  ctx: Context,\n  realm: Realm,\n  advIno: AdventureInfo,\n  withPoriePower = false\n): AdventureInfoEx {\n  const startTime = advIno.startTime\n    ? new Date(advIno.startTime).toLocaleString()\n    : undefined;\n  const farmerEndTime = advIno.farmerEndTime\n    ? new Date(advIno.farmerEndTime).toLocaleString()\n    : undefined;\n  const supporterEndTime = advIno.supporterEndTime\n    ? new Date(advIno.supporterEndTime).toLocaleString()\n    : undefined;\n\n  let canCollect = undefined;\n  const now = Date.now();\n  if (advIno.isFarmer && advIno.farmerEndTime) {\n    canCollect = now > new Date(advIno.farmerEndTime).valueOf();\n  }\n  if (advIno.isSupporter && advIno.supporterEndTime) {\n    canCollect = now > new Date(advIno.supporterEndTime).valueOf();\n  }\n\n  const blockedTo = advIno.isFarmer\n    ? new Date(advIno.farmerEndTime)\n    : new Date(advIno.supporterEndTime as any);\n\n  const baseAdvLink = getAdventureBaseLink(ctx.env);\n  const link = `${baseAdvLink}/missions/${advIno.mineId}`;\n  const hasBigRewardFarmer =\n    (advIno.farmerRewardLevel?.filter((itm) => itm >= 4).length ?? 0) > 0;\n  const hasBigRewardSupporter =\n    (advIno.supporterRewardLevel?.filter((itm) => itm >= 4).length ?? 0) > 0;\n\n  const turnTime: any = {};\n  const { farmerAtkStartAt, supporterAtkStartAt } = calculateMineTurnTime(\n    new Date(advIno.startTime || '')\n  );\n\n  turnTime.farmerAtkTime = farmerAtkStartAt.toLocaleString();\n  turnTime.supporterAtkTime = supporterAtkStartAt.toLocaleString();\n\n  // calculate pories power\n  const powers: Record<string, number> = {};\n  if (withPoriePower) {\n    const farmerPories = advIno.farmerPories ?? [];\n    for (const id of farmerPories) {\n      const info = PoriRepo.findOneSync(realm, id);\n      if (info) powers[id] = info.minePower;\n    }\n    const supportPories = advIno.supporterPories ?? [];\n    for (const id of supportPories) {\n      const info = PoriRepo.findOneSync(realm, id);\n      if (info) powers[id] = info.helpPower;\n    }\n  }\n\n  return {\n    link,\n    canCollect,\n    hasBigReward: hasBigRewardFarmer || hasBigRewardSupporter,\n    ...advIno,\n    startTime,\n    farmerEndTime,\n    supporterEndTime,\n    ...turnTime,\n    atkAt: advIno.isFarmer ? farmerAtkStartAt : supporterAtkStartAt,\n    blockedTo,\n    powers,\n  };\n}\n\nexport function humanrizeNote(data: ActiveAdventureComputed) {\n  const note = data.note || {};\n  const res: any = {\n    ...note,\n  };\n\n  if (note.lastMineUnlockAt) {\n    const tmp = new Date(note.lastMineUnlockAt);\n    res.lastMineUnlockAt = tmp.toLocaleString();\n    res.readyToStart = Date.now() > tmp.valueOf();\n  }\n  return res;\n}\n\n//--------------------------------------------------------------\n// Note:\n// all events\n\n//  -> create\n//     -> new mineObj\n\n// -> support 1\n//     -> update\n\n//   if support != me || farmer != me => delete\n\n// -> porify\n//   if have mine -> update\n\n// -> support 2\n//   if have mine -> update\n\n// -> finish\n//   if have mine -> update + capture reward -> delete\n","import { Context } from '@pori-and-friends/pori-metadata';\nimport { axiosIns } from '@pori-and-friends/utils';\n\nexport type BinancePriceInfo = {\n  symbol: string;\n  price: string;\n};\nexport async function queryBinancePrice({\n  ctx,\n  pair,\n}: {\n  ctx: Context;\n  pair: string;\n}): Promise<BinancePriceInfo> {\n  // https://api.binance.com/api/v3/ticker/price?symbol=LUNAUSDT\n\n  const baseURL = 'https://api.binance.com';\n\n  const res = await axiosIns.request({\n    method: 'get',\n    baseURL,\n    url: `/api/v3/ticker/price`,\n    params: {\n      symbol: pair.toUpperCase(),\n    },\n  });\n  if (res.status !== 200)\n    throw new Error(`Request failed status ${res.status} - ${res.data}`);\n\n  const data = JSON.parse(res.data) as BinancePriceInfo;\n  return data;\n}\n","import {\n  Token,\n  WETH,\n  Fetcher,\n  Trade,\n  Route,\n  TokenAmount,\n  TradeType,\n  Pair,\n} from '@dynamic-amm/sdk';\nimport {\n  Context,\n  getKyberSwapFactoryAddress,\n  getRIGYTokenInfoOnPolygon,\n  getRIKENTokenInfoOnPolygon,\n  getWeb3NodeUriPolygonHttp,\n} from '@pori-and-friends/pori-metadata';\n\nlet lazyProvider: any;\nconst PairCacheDb: Record<string, Pair[]> = {};\n\nasync function getProvider({ ctx }: { ctx: Context }) {\n  if (lazyProvider) return lazyProvider;\n\n  const etherJs = await import('@ethersproject/providers');\n  const url = getWeb3NodeUriPolygonHttp();\n  lazyProvider = new etherJs.JsonRpcProvider(url);\n  return lazyProvider;\n}\n\nasync function getPairData(ctx: Context, tokenA: Token, tokenB: Token) {\n  const KyberFactoryAddress = getKyberSwapFactoryAddress(ctx.env);\n  const provider = await getProvider({ ctx });\n\n  const key = `${tokenA.address}_${tokenB.address}`;\n  if (PairCacheDb[key]) return PairCacheDb[key];\n\n  PairCacheDb[key] = await Fetcher.fetchPairData(\n    tokenA,\n    tokenB,\n    KyberFactoryAddress,\n    provider\n  );\n  return PairCacheDb[key];\n}\n\nexport async function getKyberPoolRIGYPrice({\n  ctx,\n  amountInWei = '1000000000000000000',\n}: {\n  ctx: Context;\n  amountInWei?: string;\n}) {\n  const tokenInfo = getRIGYTokenInfoOnPolygon();\n\n  const RIGYToken = new Token(\n    +tokenInfo.chainId,\n    tokenInfo.tokenAddress,\n    +tokenInfo.decimal,\n    tokenInfo.symbol\n  );\n\n  const pools = await getPairData(ctx, RIGYToken, WETH[RIGYToken.chainId]);\n\n  const route = new Route(pools, WETH[RIGYToken.chainId]);\n\n  const trade = new Trade(\n    route,\n    new TokenAmount(WETH[RIGYToken.chainId], amountInWei),\n    TradeType.EXACT_INPUT\n  );\n\n  return {\n    'RIGY->MATIC': trade.executionPrice.invert().toSignificant(6),\n    'MATIC->RIGY': trade.executionPrice.toSignificant(6),\n  };\n}\n\nexport async function getKyberPoolRIKENPrice({\n  ctx,\n  amountInWei = '1000000000000000000',\n}: {\n  ctx: Context;\n  amountInWei?: string;\n}) {\n  const tokenInfo = getRIKENTokenInfoOnPolygon();\n\n  const RIKENToken = new Token(\n    +tokenInfo.chainId,\n    tokenInfo.tokenAddress,\n    +tokenInfo.decimal,\n    tokenInfo.symbol\n  );\n\n  const pools = await getPairData(ctx, RIKENToken, WETH[RIKENToken.chainId]);\n\n  const route = new Route(pools, WETH[RIKENToken.chainId]);\n\n  const trade = new Trade(\n    route,\n    new TokenAmount(WETH[RIKENToken.chainId], amountInWei),\n    TradeType.EXACT_INPUT\n  );\n\n  return {\n    'RIKEN->MATIC': trade.executionPrice.invert().toSignificant(6),\n    'MATIC->RIKEN': trade.executionPrice.toSignificant(6),\n  };\n}\n","import { Context } from '@pori-and-friends/pori-metadata';\nimport { queryBinancePrice } from './binance';\nimport { getKyberPoolRIGYPrice, getKyberPoolRIKENPrice } from './kyberPool';\n\nconst CACHE_TIMEOUT_MS = 1 * 60 * 1000; // 1 min\nconst Cache = {\n  rigy2Usd: 0,\n  rken2Usd: 0,\n  _time: 0,\n};\n\nexport async function token2Usd(ctx: Context) {\n  const now = Date.now();\n  if (now - Cache._time < CACHE_TIMEOUT_MS) {\n    return {\n      rigy2Usd: Cache.rigy2Usd,\n      rken2Usd: Cache.rken2Usd,\n    };\n  }\n\n  const rigyPoolInfo = await getKyberPoolRIGYPrice({ ctx });\n  const rikenPoolInfo = await getKyberPoolRIKENPrice({ ctx });\n  const [maticBusd] = await Promise.all([\n    queryBinancePrice({ ctx, pair: 'MATICBUSD' }),\n  ]);\n\n  Cache.rigy2Usd = +rigyPoolInfo['RIGY->MATIC'] * +maticBusd.price;\n  Cache.rken2Usd = +rikenPoolInfo['RIKEN->MATIC'] * +maticBusd.price;\n  Cache._time = now;\n\n  return {\n    rigy2Usd: Cache.rigy2Usd,\n    rken2Usd: Cache.rken2Usd,\n  };\n}\n","import { Context, IdleGameSc } from '@pori-and-friends/pori-metadata';\nimport {\n  IdleGameSCMetadataRepo,\n  IdleGameSCEventRepo,\n  IdleGameSCEventDataModel,\n} from '@pori-and-friends/pori-repositories';\nimport { waitForMs } from '@pori-and-friends/utils';\nimport { scanEvents } from '../basic';\nimport { queryNftInfo } from '../queryPoriApi';\nimport { transformIdleGameEvent2Database } from '../transformer/transformIdleGameEvent2Database';\n\nexport async function updateEventDb(\n  realm: Realm,\n  ctx: Context,\n  { createdBlock }: { createdBlock: number }\n) {\n  try {\n    const scData = await IdleGameSCMetadataRepo.getOrCreateWithTx(\n      realm,\n      'default',\n      {\n        updatedBlock: createdBlock,\n        createdBlock: createdBlock,\n      }\n    );\n\n    let from = scData.updatedBlock + 1;\n\n    const batchSize = 500;\n    const headBlock = await ctx.web3.eth.getBlockNumber();\n    console.log('top block', headBlock);\n    console.log('context', scData.toJSON());\n\n    while (from < headBlock) {\n      const to = Math.min(from + batchSize, headBlock);\n      console.log('scan from ', { from, to });\n      const events = await scanEvents(ctx, {\n        filter: 'allEvents',\n        fromBlock: from,\n        toBlock: to,\n      });\n\n      from = to + 1;\n\n      IdleGameSCMetadataRepo.txSync(realm, () => {\n        scData.updatedBlock = to;\n\n        const transformedEvents = events\n          .map((itm) => IdleGameSc.parseIdleGameScEvent(itm))\n          .filter(Boolean) as IdleGameSc.IdleGameSCEvent[];\n\n        for (const iterator of transformedEvents) {\n          IdleGameSCEventRepo.create(\n            realm,\n            IdleGameSCEventDataModel.generate(iterator)\n          );\n        }\n      });\n    }\n\n    await updateKnowleageDb(realm, ctx);\n  } catch (error) {\n    console.error(error);\n  } finally {\n    // noop\n  }\n}\n\nasync function updateKnowleageDb(realm: Realm, ctx: Context) {\n  const metadata = await IdleGameSCMetadataRepo.findOne(realm, 'default');\n  if (!metadata) return;\n\n  const knCursor = metadata.extras['knCursor'] || '000000000000000000000000';\n\n  const events = await IdleGameSCEventRepo.findAll(realm);\n\n  const scanner = events.filtered(`_id > oid(${knCursor})`);\n  console.log(`updateKnowleageDb need to update ${scanner.length} events`);\n\n  const total = scanner.length;\n  if (total <= 0) return;\n\n  const resolveNft = async (id: string | number) => {\n    const data = await queryNftInfo(id, ctx);\n    // await waitForMs(1000);\n    return data;\n  };\n\n  let count = 0;\n  const saveInterval = 10;\n\n  const onIt = (id: Realm.BSON.ObjectId, forceSave = false) => {\n    count++;\n    if (forceSave || count % saveInterval === 0) {\n      IdleGameSCMetadataRepo.txSync(realm, () => {\n        metadata.extras['knCursor'] = id.toHexString();\n      });\n    }\n    console.log('onit', id, count / total);\n  };\n\n  await transformIdleGameEvent2Database(\n    realm,\n    Array.from(scanner.values()) as any,\n    resolveNft,\n    onIt\n  );\n\n  onIt(scanner[scanner.length - 1]._id, true);\n  console.log('updateKnowleageDb done');\n}\n","import { DnaBodyPartInfo } from '@pori-and-friends/pori-metadata';\n\nfunction parseLegendary(e: any) {\n  return {\n    l_head: 0 < (1 & e) ? 1 : 0,\n    l_face: 0 < (2 & e) ? 1 : 0,\n    l_body: 0 < (4 & e) ? 1 : 0,\n    l_arm: 0 < (8 & e) ? 1 : 0,\n    l_accessory: 0 < (16 & e) ? 1 : 0,\n    l_leg: 0 < (32 & e) ? 1 : 0,\n    l_tail: 0 < (64 & e) ? 1 : 0,\n  };\n}\n\nexport function parseDnaToBodyPart(e: any): DnaBodyPartInfo {\n  if (!/^[0-9A-Fa-f]{64}$/g.test(e)) throw new Error('INVALID_DNA');\n\n  const r = new RegExp(\n      '^(?<d_head_class>.{1})(?<d_head_type>.{1})(?<r1_head_class>.{1})(?<r1_head_type>.{1})(?<r2_head_class>.{1})(?<r2_head_type>.{1})(?<r3_head_class>.{1})(?<r3_head_type>.{1})(?<d_face_class>.{1})(?<d_face_type>.{1})(?<r1_face_class>.{1})(?<r1_face_type>.{1})(?<r2_face_class>.{1})(?<r2_face_type>.{1})(?<r3_face_class>.{1})(?<r3_face_type>.{1})(?<d_body_class>.{1})(?<d_body_type>.{1})(?<r1_body_class>.{1})(?<r1_body_type>.{1})(?<r2_body_class>.{1})(?<r2_body_type>.{1})(?<r3_body_class>.{1})(?<r3_body_type>.{1})(?<d_arm_class>.{1})(?<d_arm_type>.{1})(?<r1_arm_class>.{1})(?<r1_arm_type>.{1})(?<r2_arm_class>.{1})(?<r2_arm_type>.{1})(?<r3_arm_class>.{1})(?<r3_arm_type>.{1})(?<d_accessory_class>.{1})(?<d_accessory_type>.{1})(?<r1_accessory_class>.{1})(?<r1_accessory_type>.{1})(?<r2_accessory_class>.{1})(?<r2_accessory_type>.{1})(?<r3_accessory_class>.{1})(?<r3_accessory_type>.{1})(?<d_leg_class>.{1})(?<d_leg_type>.{1})(?<r1_leg_class>.{1})(?<r1_leg_type>.{1})(?<r2_leg_class>.{1})(?<r2_leg_type>.{1})(?<r3_leg_class>.{1})(?<r3_leg_type>.{1})(?<d_tail_class>.{1})(?<d_tail_type>.{1})(?<r1_tail_class>.{1})(?<r1_tail_type>.{1})(?<r2_tail_class>.{1})(?<r2_tail_type>.{1})(?<r3_tail_class>.{1})(?<r3_tail_type>.{1})(?<legendary>.{2})(?<reserved>.{6})$'\n    ),\n    t = e.match(r),\n    a = t.groups;\n\n  (a.legendary = Number('0x' + a.legendary)),\n    (e = parseLegendary(a.legendary)),\n    (a.l_head = e.l_head),\n    (a.l_face = e.l_face),\n    (a.l_body = e.l_body),\n    (a.l_arm = e.l_arm),\n    (a.l_accessory = e.l_accessory),\n    (a.l_leg = e.l_leg),\n    (a.l_tail = e.l_tail),\n    (a.species_type = Number('0x' + a.d_head_class)),\n    (a.reserved = Number('0x' + a.reserved)),\n    (a.d_head_class = Number('0x' + a.d_head_class)),\n    (a.d_head_type = Number('0x' + a.d_head_type)),\n    (a.r1_head_class = Number('0x' + a.r1_head_class)),\n    (a.r1_head_type = Number('0x' + a.r1_head_type)),\n    (a.r2_head_class = Number('0x' + a.r2_head_class)),\n    (a.r2_head_type = Number('0x' + a.r2_head_type)),\n    (a.r3_head_class = Number('0x' + a.r3_head_class)),\n    (a.r3_head_type = Number('0x' + a.r3_head_type)),\n    (a.d_face_class = Number('0x' + a.d_face_class)),\n    (a.d_face_type = Number('0x' + a.d_face_type)),\n    (a.r1_face_class = Number('0x' + a.r1_face_class)),\n    (a.r1_face_type = Number('0x' + a.r1_face_type)),\n    (a.r2_face_class = Number('0x' + a.r2_face_class)),\n    (a.r2_face_type = Number('0x' + a.r2_face_type)),\n    (a.r3_face_class = Number('0x' + a.r3_face_class)),\n    (a.r3_face_type = Number('0x' + a.r3_face_type)),\n    (a.d_body_class = Number('0x' + a.d_body_class)),\n    (a.d_body_type = Number('0x' + a.d_body_type)),\n    (a.r1_body_class = Number('0x' + a.r1_body_class)),\n    (a.r1_body_type = Number('0x' + a.r1_body_type)),\n    (a.r2_body_class = Number('0x' + a.r2_body_class)),\n    (a.r2_body_type = Number('0x' + a.r2_body_type)),\n    (a.r3_body_class = Number('0x' + a.r3_body_class)),\n    (a.r3_body_type = Number('0x' + a.r3_body_type)),\n    (a.d_arm_class = Number('0x' + a.d_arm_class)),\n    (a.d_arm_type = Number('0x' + a.d_arm_type)),\n    (a.r1_arm_class = Number('0x' + a.r1_arm_class)),\n    (a.r1_arm_type = Number('0x' + a.r1_arm_type)),\n    (a.r2_arm_class = Number('0x' + a.r2_arm_class)),\n    (a.r2_arm_type = Number('0x' + a.r2_arm_type)),\n    (a.r3_arm_class = Number('0x' + a.r3_arm_class)),\n    (a.r3_arm_type = Number('0x' + a.r3_arm_type)),\n    (a.d_accessory_class = Number('0x' + a.d_accessory_class)),\n    (a.d_accessory_type = Number('0x' + a.d_accessory_type)),\n    (a.r1_accessory_class = Number('0x' + a.r1_accessory_class)),\n    (a.r1_accessory_type = Number('0x' + a.r1_accessory_type)),\n    (a.r2_accessory_class = Number('0x' + a.r2_accessory_class)),\n    (a.r2_accessory_type = Number('0x' + a.r2_accessory_type)),\n    (a.r3_accessory_class = Number('0x' + a.r3_accessory_class)),\n    (a.r3_accessory_type = Number('0x' + a.r3_accessory_type)),\n    (a.d_leg_class = Number('0x' + a.d_leg_class)),\n    (a.d_leg_type = Number('0x' + a.d_leg_type)),\n    (a.r1_leg_class = Number('0x' + a.r1_leg_class)),\n    (a.r1_leg_type = Number('0x' + a.r1_leg_type)),\n    (a.r2_leg_class = Number('0x' + a.r2_leg_class)),\n    (a.r2_leg_type = Number('0x' + a.r2_leg_type)),\n    (a.r3_leg_class = Number('0x' + a.r3_leg_class)),\n    (a.r3_leg_type = Number('0x' + a.r3_leg_type)),\n    (a.d_tail_class = Number('0x' + a.d_tail_class)),\n    (a.d_tail_type = Number('0x' + a.d_tail_type)),\n    (a.r1_tail_class = Number('0x' + a.r1_tail_class)),\n    (a.r1_tail_type = Number('0x' + a.r1_tail_type)),\n    (a.r2_tail_class = Number('0x' + a.r2_tail_class)),\n    (a.r2_tail_type = Number('0x' + a.r2_tail_type)),\n    (a.r3_tail_class = Number('0x' + a.r3_tail_class)),\n    (a.r3_tail_type = Number('0x' + a.r3_tail_type)),\n    (a.species_class = getClassName(a.species_type)),\n    (a.d_head_type_name = getTypeName(a.d_head_class, a.d_head_type)),\n    (a.d_face_type_name = getTypeName(a.d_face_class, a.d_face_type)),\n    (a.d_body_type_name = getTypeName(a.d_body_class, a.d_body_type)),\n    (a.d_arm_type_name = getTypeName(a.d_arm_class, a.d_arm_type)),\n    (a.d_accessory_type_name = getTypeName(\n      a.d_accessory_class,\n      a.d_accessory_type\n    )),\n    (a.d_leg_type_name = getTypeName(a.d_leg_class, a.d_leg_type)),\n    (a.d_tail_type_name = getTypeName(a.d_tail_class, a.d_tail_type)),\n    (a.r1_head_type_name = getTypeName(a.r1_head_class, a.r1_head_type)),\n    (a.r1_face_type_name = getTypeName(a.r1_face_class, a.r1_face_type)),\n    (a.r1_body_type_name = getTypeName(a.r1_body_class, a.r1_body_type)),\n    (a.r1_arm_type_name = getTypeName(a.r1_arm_class, a.r1_arm_type)),\n    (a.r1_accessory_type_name = getTypeName(\n      a.r1_accessory_class,\n      a.r1_accessory_type\n    )),\n    (a.r1_leg_type_name = getTypeName(a.r1_leg_class, a.r1_leg_type)),\n    (a.r1_tail_type_name = getTypeName(a.r1_tail_class, a.r1_tail_type)),\n    (a.r2_head_type_name = getTypeName(a.r2_head_class, a.r2_head_type)),\n    (a.r2_face_type_name = getTypeName(a.r2_face_class, a.r2_face_type)),\n    (a.r2_body_type_name = getTypeName(a.r2_body_class, a.r2_body_type)),\n    (a.r2_arm_type_name = getTypeName(a.r2_arm_class, a.r2_arm_type)),\n    (a.r2_accessory_type_name = getTypeName(\n      a.r2_accessory_class,\n      a.r2_accessory_type\n    )),\n    (a.r2_leg_type_name = getTypeName(a.r2_leg_class, a.r2_leg_type)),\n    (a.r2_tail_type_name = getTypeName(a.r2_tail_class, a.r2_tail_type)),\n    (a.r3_head_type_name = getTypeName(a.r3_head_class, a.r3_head_type)),\n    (a.r3_face_type_name = getTypeName(a.r3_face_class, a.r3_face_type)),\n    (a.r3_body_type_name = getTypeName(a.r3_body_class, a.r3_body_type)),\n    (a.r3_arm_type_name = getTypeName(a.r3_arm_class, a.r3_arm_type)),\n    (a.r3_accessory_type_name = getTypeName(\n      a.r3_accessory_class,\n      a.r3_accessory_type\n    )),\n    (a.r3_leg_type_name = getTypeName(a.r3_leg_class, a.r3_leg_type)),\n    (a.r3_tail_type_name = getTypeName(a.r3_tail_class, a.r3_tail_type));\n  let s = 1;\n\n  a.d_head_type == a.d_body_type && s++,\n    a.d_face_type == a.d_body_type && s++,\n    a.d_arm_type == a.d_body_type && s++,\n    a.d_accessory_type == a.d_body_type && s++,\n    a.d_leg_type == a.d_body_type && s++,\n    a.d_tail_type == a.d_body_type && s++,\n    (a.purity = s);\n\n  return { ...a };\n}\n\nconst t = new Map(),\n  a = new Map(),\n  s = new Map(),\n  n = new Map(),\n  _ = new Map(),\n  c = new Map(),\n  o = new Map();\nt.set(1, 'Chickie'),\n  t.set(2, 'Rampi'),\n  t.set(3, 'Ri Kong'),\n  t.set(4, 'Bruwan'),\n  t.set(5, 'Calico'),\n  t.set(6, 'Tiga'),\n  t.set(7, 'Mama Puncha'),\n  a.set(1, 'Doo Doo'),\n  a.set(2, 'Lumin'),\n  a.set(3, 'Cancihalcon'),\n  a.set(4, 'Nimo'),\n  a.set(5, 'Hoba'),\n  a.set(6, 'OctoHook'),\n  a.set(7, 'Blowish'),\n  s.set(1, 'Knowizall'),\n  s.set(2, 'Veneno'),\n  s.set(3, 'Wipe Genie'),\n  s.set(4, 'Apollyon'),\n  s.set(5, 'Frankender'),\n  s.set(6, 'Fio'),\n  s.set(7, 'Hocori'),\n  _.set(1, 'Willy Wheel'),\n  _.set(2, 'Drilla '),\n  _.set(3, 'Monica'),\n  _.set(4, 'Zeta'),\n  _.set(5, 'Sami'),\n  _.set(6, 'Gampo'),\n  _.set(7, 'Carry'),\n  _.set(1, 'Pozilla'),\n  _.set(2, 'Poceratop'),\n  _.set(3, 'Dinoxic'),\n  _.set(4, 'Pobarrian'),\n  _.set(5, 'Calepis '),\n  _.set(6, 'Teelop'),\n  _.set(7, 'Wyvo'),\n  c.set(1, 'Sig Sar'),\n  c.set(2, 'Brotopo'),\n  c.set(3, 'Pizzalien'),\n  c.set(4, 'Gree'),\n  c.set(5, 'Tototaco'),\n  c.set(6, 'Rupa'),\n  c.set(7, 'Trippy'),\n  o.set(1, 'Mysteria 1'),\n  o.set(2, 'Mysteria 2'),\n  o.set(3, 'Mysteria 3'),\n  o.set(4, 'Mysteria 4'),\n  o.set(5, 'Mysteria 5'),\n  o.set(6, 'Mysteria 6'),\n  o.set(7, 'Mysteria 7');\n\nconst l = new Map();\nl.set(1, {\n  name: 'Terra',\n  typeNames: t,\n});\nl.set(2, {\n  name: 'Aqua',\n  typeNames: a,\n});\nl.set(3, {\n  name: 'Magica',\n  typeNames: s,\n});\nl.set(4, {\n  name: 'Mecha',\n  typeNames: n,\n});\nl.set(5, {\n  name: 'Ancia',\n  typeNames: _,\n});\nl.set(6, {\n  name: 'Stella',\n  typeNames: c,\n});\nl.set(7, {\n  name: 'Mysteria',\n  typeNames: o,\n});\nfunction getClassName(e: any) {\n  return l.has(e) ? l.get(e).name : null;\n}\nfunction getTypeName(r: any, t: any) {\n  if (l.has(r)) {\n    const e = l.get(r).typeNames;\n    if (e.has(t)) return e.get(t);\n  }\n  return null;\n}\n","import { Context, getAPILink } from '@pori-and-friends/pori-metadata';\nimport { ENV, NftInfo } from '@pori-and-friends/pori-metadata';\nimport { axiosIns } from '@pori-and-friends/utils';\nimport { queryMissiontOfPoriSc } from './adventure';\nimport { toChecksumAddress } from './util/web3utils';\n\nexport async function queryNftInfo(\n  id: string | number,\n  ctx: {\n    env: ENV;\n  } = {\n    env: ENV.Staging,\n  }\n): Promise<NftInfo> {\n  const baseURL = getAPILink(ctx.env);\n\n  const res = await axiosIns.request({\n    method: 'get',\n    baseURL,\n    url: `/api/v1/assets/${id}`,\n  });\n  if (res.status !== 200)\n    throw new Error(`Request failed status ${res.status} - ${res.data}`);\n\n  const data = JSON.parse(res.data) as NftInfo;\n  data.ownerAddress = toChecksumAddress(data.ownerAddress);\n  return data;\n}\n\nexport type NftInfoForSale = NftInfo & {\n  price: string;\n  saleId: number;\n  engagedMission?: number;\n};\n\nexport type NftInfoForItem = {\n  id: number;\n  sellerAddress: string;\n  itemType: {\n    id: number;\n    name: string;\n    description: string;\n    usage: string;\n    logoUrl: string;\n  };\n  unitPrice: string;\n  amount: string;\n  scOrderId: number;\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport async function queryMarketInfo({\n  ctx,\n}: {\n  ctx: Context;\n}): Promise<NftInfoForSale[]> {\n  // https://api.poriverse.io/api/v1/assets\n\n  const baseURL = getAPILink(ctx.env);\n\n  const res = await axiosIns.request({\n    method: 'get',\n    baseURL,\n    url: `/api/v1/assets`,\n    params: {\n      status: '1',\n      pageIndex: '0',\n      pageSize: '35',\n      sortBy: 'price',\n      sortOrder: 'asc',\n      minPrice: '0',\n      maxPrice: '99000000',\n      minNumOfBreeds: '0',\n      maxNumOfBreeds: '5',\n      minLegend: '0',\n      maxLegend: '7',\n      minMinePower: '0',\n      maxMinePower: '500',\n      minHelpPower: '0',\n      maxHelpPower: '500',\n      stage: '',\n      type: '',\n      poriClass: '',\n      keyword: '',\n    },\n  });\n  if (res.status !== 200)\n    throw new Error(`Request failed status ${res.status} - ${res.data}`);\n\n  const data = (JSON.parse(res.data)?.items || []) as NftInfoForSale[];\n  return data;\n}\n\nexport async function expandEngadedMission({\n  ctx,\n  data,\n}: {\n  ctx: Context;\n  data: NftInfoForSale[];\n}) {\n  return Promise.all(\n    data.map(async (itm) => {\n      const engagedMission = await queryMissiontOfPoriSc(ctx, itm.tokenId);\n      return {\n        ...itm,\n        engagedMission: engagedMission,\n      };\n    })\n  );\n}\n\n// ------------\nexport async function queryMarketItems({\n  ctx,\n  pageSize = 10,\n}: {\n  ctx: Context;\n  pageSize: number;\n}) {\n  const baseURL = getAPILink(ctx.env);\n\n  const res = await axiosIns.request({\n    method: 'get',\n    baseURL,\n    url: `/api/v1/item-orders`,\n    params: {\n      pageIndex: 0,\n      pageSize,\n      sortBy: 'unitPrice',\n      sortOrder: 'asc',\n      minPrice: 0,\n      maxPrice: 99000000,\n    },\n  });\n\n  if (res.status !== 200)\n    throw new Error(`Request failed status ${res.status} - ${res.data}`);\n\n  const data = (JSON.parse(res.data)?.items || []) as NftInfoForItem[];\n  return data;\n}\n","import {\n  Context,\n  ENV,\n  getContextSetting,\n  getIdleGameAddressSC,\n  getPortalAddressSC,\n  getWeb3NodeUri,\n  getWeb3NodeUriHttp,\n} from '@pori-and-friends/pori-metadata';\nimport { EventEmitter } from 'stream';\nimport Web3 from 'web3';\n\nexport async function init(env: ENV): Promise<Context> {\n  const uriws = getWeb3NodeUri(env);\n  const urihttp = getWeb3NodeUriHttp(env);\n\n  if (!uriws && !urihttp) {\n    console.error(`missing env NODE_URI_${env} or NODE_URI_${env}_HTTP`);\n    process.exit(1);\n  }\n\n  const provider = uriws\n    ? new Web3.providers.WebsocketProvider(uriws)\n    : new Web3.providers.HttpProvider(urihttp);\n\n  console.log(\n    'use web3 provider',\n    provider instanceof Web3.providers.WebsocketProvider ? 'wss' : 'http'\n  );\n\n  const web3 = new Web3(provider);\n\n  const idleGameSc = getIdleGameAddressSC(env);\n  const portalSc = getPortalAddressSC(env);\n  if (!portalSc) throw new Error('missing portal sc config');\n\n  const contract = new web3.eth.Contract(idleGameSc.abi, idleGameSc.address);\n  const contractPortal = new web3.eth.Contract(portalSc.abi, portalSc.address);\n\n  const { setting, custom } = getContextSetting(env);\n\n  const ctx: Context = {\n    contract,\n    contractPortal,\n    web3,\n    provider,\n    env,\n    emiter: new EventEmitter(),\n\n    ui: {\n      writeMessage: async (msg) => console.log(msg),\n      editMessage: async (lastMsginfo, msg) => {\n        /*nothing*/\n      },\n    },\n    setting: setting,\n    custom: custom,\n  };\n\n  return ctx;\n}\n\nexport async function close(ctx: Context) {\n  ctx.provider.disconnect();\n}\n","import Realm from 'realm';\nimport * as Repos from '@pori-and-friends/pori-repositories';\nimport { IdleGameSc, NftInfo } from '@pori-and-friends/pori-metadata';\n\nexport async function transformIdleGameEvent2Database(\n  realm: Realm,\n  events: Repos.IdleGameSCEventDataModel[],\n  resolveNftInfo: (id: string | number) => Promise<NftInfo>,\n  onIt?: (it: Realm.BSON.ObjectId) => void\n) {\n  for (const it of events) {\n    switch (it.type) {\n      case IdleGameSc.EIdleGameSCEventType.PorianDeposited:\n        {\n          const data = it.data as IdleGameSc.PorianDepositedData;\n          const playerId = data.from;\n          const poriId = data.porian;\n\n          let nftInfo: any;\n\n          const poriObj = await Repos.PoriRepo.findOne(realm, poriId);\n\n          // resolve api query only for new nft\n          if (!poriObj) nftInfo = await resolveNftInfo(poriId);\n\n          Repos.PlayerRepo.txSync(realm, () => {\n            const playerObj = Repos.PlayerRepo.getOrCreate(\n              realm,\n              playerId,\n              Repos.PlayerDataModel.generate(playerId, it.blockNo)\n            );\n\n            const poriObj = Repos.PoriRepo.getOrCreate(\n              realm,\n              poriId,\n              nftInfo ? Repos.PoriDataModel.generate(nftInfo) : {}\n            );\n\n            // active + add to player inventories\n            poriObj.isActive = true;\n            const isExists =\n              playerObj.pories.findIndex((itm) => itm._id === poriId) >= 0;\n            if (!isExists) playerObj.pories.push(poriObj);\n          });\n        }\n        break;\n\n      case IdleGameSc.EIdleGameSCEventType.PorianWithdrawed:\n        {\n          const data = it.data as IdleGameSc.PorianWithdrawedData;\n          const playerId = data.to;\n          const poriId = data.porian;\n\n          const playerObj = await Repos.PlayerRepo.findOne(realm, playerId);\n          const poriObj = await Repos.PoriRepo.findOne(realm, poriId);\n\n          if (!playerObj) break;\n\n          Repos.PlayerRepo.txSync(realm, () => {\n            // deactive + remove from player inventories\n            if (poriObj) poriObj.isActive = false;\n            const isExists =\n              playerObj.pories.findIndex((itm) => itm._id === poriId) >= 0;\n            if (isExists) {\n              playerObj.pories = playerObj.pories.filter(\n                (itm) => itm._id !== poriId\n              ) as any;\n            }\n          });\n        }\n        break;\n\n      case IdleGameSc.EIdleGameSCEventType.GameDurationChanged:\n        {\n          const data = it.data as IdleGameSc.GameDurationChangedData;\n          const metadata = await Repos.IdleGameSCMetadataRepo.findOne(\n            realm,\n            'default'\n          );\n\n          if (!metadata) break;\n\n          Repos.IdleGameSCMetadataRepo.txSync(realm, () => {\n            metadata.extras['turnDuration'] = data.turnDuration;\n            metadata.extras['adventureDuration'] = data.adventureDuration;\n          });\n        }\n        break;\n\n      default:\n        break;\n    }\n    onIt && onIt(it._id);\n  }\n}\n","import Web3 from 'web3';\nconst web3 = new Web3();\n\nexport function functionSignature(inp: string) {\n  return web3.eth.abi.encodeFunctionSignature(inp);\n}\n\nexport function toChecksumAddress(inp: string) {\n  return web3.utils.toChecksumAddress(inp);\n}\n","import type { Contract } from 'web3-eth-contract';\nimport { Context } from '@pori-and-friends/pori-metadata';\n\nconst minABI: any = [\n  // balanceOf\n  {\n    constant: true,\n    inputs: [{ name: '_owner', type: 'address' }],\n    name: 'balanceOf',\n    outputs: [{ name: 'balance', type: 'uint256' }],\n    type: 'function',\n  },\n];\n\nconst contractForTokenCache: Record<string, Contract> = {};\n\nexport async function getTokenBalance({\n  ctx,\n  erc20Address,\n  walletAddress,\n}: {\n  ctx: Context;\n  erc20Address: string;\n  walletAddress: string;\n}) {\n  let contract = contractForTokenCache[erc20Address];\n  if (!contract) {\n    contract = new ctx.web3.eth.Contract(minABI, erc20Address);\n    contractForTokenCache[erc20Address] = contract;\n  }\n\n  const res = await contract.methods.balanceOf(walletAddress).call();\n\n  return parseInt(res) / 10 ** 18;\n}\n\nexport async function getMaticBalance({\n  ctx,\n  walletAddress,\n}: {\n  ctx: Context;\n  walletAddress: string;\n}) {\n  const balanceInWei = await ctx.web3.eth.getBalance(walletAddress);\n  return +ctx.web3.utils.fromWei(balanceInWei);\n}\n","import { Context } from '@pori-and-friends/pori-metadata';\nimport WalletConnect from '@walletconnect/client';\nimport QRCodeModal from '@walletconnect/qrcode-modal';\nimport { existsSync, readFileSync, unlinkSync, writeFileSync } from 'fs';\n\nclass MySessionStorage {\n  storageId?: string;\n  constructor(storagePath?: string) {\n    console.log('MySessionStorage new', storagePath);\n    this.storageId = storagePath;\n  }\n  getSession() {\n    if (this.storageId) {\n      if (existsSync(this.storageId)) {\n        const data = JSON.parse(readFileSync(this.storageId).toString());\n        return data;\n      }\n    }\n    return null;\n  }\n  setSession(session: any) {\n    if (this.storageId) writeFileSync(this.storageId, JSON.stringify(session));\n    return session;\n  }\n  removeSession() {\n    if (this.storageId) unlinkSync(this.storageId);\n  }\n}\n\nexport async function addWalletConnectToContext(\n  ctx: Context,\n  sessionStoragePath?: string\n) {\n  const storage = new MySessionStorage(sessionStoragePath);\n\n  const connector = new WalletConnect({\n    bridge: 'https://bridge.walletconnect.org', // Required\n    qrcodeModal: QRCodeModal,\n    session: storage.getSession(),\n    clientMeta: {\n      description: 'Pori-Poc',\n      url: 'https://nodejs.org/en/',\n      icons: ['https://nodejs.org/static/images/logo.svg'],\n      name: 'Pori-Poc',\n    },\n  });\n\n  // injected hack b/c in version 1.8.x - typedef is wrong\n  (connector as any)._sessionStorage = storage;\n\n  ctx.walletConnectChannel = connector;\n\n  // Check if connection is already established\n  if (!connector.connected) {\n    // create new session\n    connector.createSession({ chainId: 137 });\n  }\n\n  // Subscribe to connection events\n  connector.on('connect', (error, payload) => {\n    if (error) {\n      throw error;\n    }\n\n    // Get provided accounts and chainId\n    const { accounts, chainId } = payload.params[0];\n    console.info('wallet connect channel connected', { accounts, chainId });\n  });\n\n  connector.on('session_update', (error, payload) => {\n    if (error) {\n      throw error;\n    }\n\n    // Get updated accounts and chainId\n    const { accounts, chainId } = payload.params[0];\n    console.info('wallet connect channel session updated', {\n      accounts,\n      chainId,\n    });\n  });\n\n  connector.on('disconnect', (error, payload) => {\n    if (error) {\n      throw error;\n    }\n    console.info('wallet connect channel disconnected', { error, payload });\n    // Delete connector\n  });\n}\n","import type { TransactionConfig, TransactionReceipt } from 'web3-core';\nimport type { ITxData } from '@walletconnect/types';\nimport { Context } from '@pori-and-friends/pori-metadata';\nimport { JobQueue, waitForMs } from '@pori-and-friends/utils';\nimport { isFunction } from 'lodash';\nimport { WalletActions } from '../../index';\n\nconst sendTxJobQueue = new JobQueue();\n\nexport function sendRequestForWalletConnectTx(\n  { ctx }: { ctx: Context },\n  tx: ITxData,\n  onTxReceipt?: (r: TransactionReceipt) => void\n) {\n  return sendTxJobQueue.addJob(async () => {\n    return useAccountToSendTx(ctx, tx, onTxReceipt);\n  });\n}\n\nasync function useAccountToSendTx(\n  ctx: Context,\n  tx: ITxData,\n  onTxReceipt?: (r: TransactionReceipt) => void\n) {\n  if (!ctx.walletAcc) return;\n\n  const gasFactor = ctx.setting.gasFactor ?? 1;\n\n  const defaultWeb3GasPrice = await currentGasPrice({ ctx });\n  const defaultNonce = await ctx.web3.eth.getTransactionCount(\n    ctx.walletAcc.address\n  );\n\n  const baseGas = Math.round(+defaultWeb3GasPrice * gasFactor);\n\n  if (!tx.gasPrice && gasFactor !== 1) {\n    await ctx.ui.writeMessage(\n      `warning: with gasFactor = ${gasFactor}. total gas price = ${baseGas}`\n    );\n  }\n\n  const web3Tx: TransactionConfig = {\n    from: ctx.walletAcc.address,\n    to: tx.to,\n    data: tx.data, // Required\n    gas: tx.gas || '2000000',\n    gasPrice: tx.gasPrice || baseGas,\n    nonce: tx.nonce ? parseInt(tx.nonce.toString()) : defaultNonce,\n  };\n  const signedTx = await ctx.walletAcc.signTransaction(web3Tx);\n\n  if (signedTx.rawTransaction) {\n    const txInfo = ctx.web3.eth.sendSignedTransaction(signedTx.rawTransaction);\n    txInfo.on('receipt', (r) => onTxReceipt && onTxReceipt(r));\n    return (await txInfo).transactionHash;\n  }\n  return;\n}\n\nexport function sendSignRequestForWalletConnectTx(\n  { ctx }: { ctx: Context },\n  tx: ITxData\n) {\n  return useAccountToSignTx(ctx, tx);\n}\n\nasync function useAccountToSignTx(ctx: Context, tx: ITxData) {\n  if (!ctx.walletAcc) return;\n\n  const defaultWeb3GasPrice = await WalletActions.currentGasPrice({ ctx });\n  const defaultNonce = await ctx.web3.eth.getTransactionCount(\n    ctx.walletAcc.address\n  );\n\n  const web3Tx: TransactionConfig = {\n    from: ctx.walletAcc.address,\n    to: tx.to,\n    data: tx.data, // Required\n    gas: tx.gas || '600000',\n    gasPrice: tx.gasPrice || defaultWeb3GasPrice,\n    nonce: tx.nonce ? parseInt(tx.nonce.toString()) : defaultNonce,\n  };\n  const signedTx = await ctx.walletAcc.signTransaction(web3Tx);\n  if (signedTx.rawTransaction) {\n    return signedTx.rawTransaction.split('0x')[1];\n  }\n  return signedTx.rawTransaction;\n}\n\nexport async function currentGasPrice({ ctx }: { ctx: Context }) {\n  if (isFunction(ctx.custom.estimageGas))\n    return await ctx.custom.estimageGas(ctx);\n\n  return await ctx.web3.eth.getGasPrice();\n}\n\nconst TIME_4_HOUR_MS = 4 * 60 * 60 * 1000;\nexport async function monitorTx({\n  ctx,\n  txHash,\n  timeoutMs = TIME_4_HOUR_MS,\n}: {\n  ctx: Context;\n  txHash: string;\n  timeoutMs?: number;\n}) {\n  let shouldRun = true;\n  const sleepTimeoutMs = 30 * 1000; // 30 sec\n\n  const now = Date.now();\n  const endAt = timeoutMs + now;\n  while (shouldRun) {\n    const info = await ctx.web3.eth.getTransactionReceipt(txHash);\n\n    // not found receipt -> wrong tx\n    if (!info) return false;\n\n    // tx mined\n    if (info.blockNumber && info.status) {\n      return true;\n    }\n\n    // continue waiting\n    await waitForMs(sleepTimeoutMs);\n    shouldRun = Date.now() > endAt;\n  }\n\n  return false;\n}\n","import { Deferred } from '@pori-and-friends/utils';\n\nexport type WorkflowState = {\n  id: string;\n  startAt: Date;\n  finishAt?: Date;\n  error?: Error;\n  data: Record<string, any>;\n  currentStep: string;\n  finishDefered: Deferred;\n  abort: () => void;\n  start: () => Promise<any>;\n  onChange?: (flowState: WorkflowState) => void;\n  updateState: (func: () => void) => void;\n  promiseWithAbort: (p: Promise<any>) => Promise<any>;\n};\n\nexport type FlowExec = (state: WorkflowState) => Promise<void>;\n\nexport function createWorkflow(exec: FlowExec, id?: string): WorkflowState {\n  const cancelDefered = new Deferred();\n  const finishDefered = new Deferred();\n\n  const state: WorkflowState = {\n    id: id ?? `workflow_simple_${Date.now()}`,\n    startAt: new Date(),\n    data: {},\n    currentStep: '0',\n    finishDefered,\n    abort: () =>\n      cancelDefered.reject && cancelDefered.reject(new Error('aborted')),\n    start: () => {\n      doJob();\n      return finishDefered.promise;\n    },\n    updateState: (func: () => void) => {\n      func();\n      state.onChange && state.onChange(state);\n    },\n    promiseWithAbort: (p: Promise<any>): Promise<any> =>\n      Promise.race([p, cancelDefered.promise]),\n  };\n\n  const doJob = async () => {\n    try {\n      await exec(state);\n\n      state.updateState(() => {\n        state.finishAt = new Date();\n      });\n\n      finishDefered.resolve(null);\n    } catch (error) {\n      state.updateState(() => {\n        state.error = error as Error;\n      });\n      finishDefered.reject(error);\n    }\n  };\n\n  return state;\n}\n","import Web3 from 'web3';\nimport type { Account } from 'web3-core';\nimport type { Contract } from 'web3-eth-contract';\nimport type WalletConnect from '@walletconnect/client';\nimport type { WebsocketProvider, HttpProvider } from 'web3-core';\nimport { EventEmitter } from 'stream';\nimport { MongoClient } from 'mongodb';\n\nexport enum ENV {\n  Staging = 'STAG',\n  Prod = 'PROD',\n  ProdPorichain = 'PROD_PORICHAIN',\n}\nexport type SendMessageHandler = (msg: string) => Promise<any>;\nexport type EditMessageHandler = (\n  lastMsginfo: any,\n  msg: string\n) => Promise<any>;\nexport type CustomEstGasprice = (ctx: Context) => Promise<string>;\n\nexport type Context = {\n  contract: Contract;\n  contractPortal: Contract;\n  web3: Web3;\n  walletAcc?: Account;\n  provider: WebsocketProvider | HttpProvider;\n  walletConnectChannel?: WalletConnect;\n  env: ENV;\n  emiter?: EventEmitter;\n  mongoClient?: MongoClient;\n  playerAddress?: string;\n\n  ui: {\n    writeMessage: SendMessageHandler;\n    editMessage: EditMessageHandler;\n  };\n  setting: {\n    gasFactor: number;\n    safeGweith: number;\n    autoPlayMicroDelayMs: number;\n  };\n  custom: {\n    estimageGas?: CustomEstGasprice;\n  };\n};\n\nexport type DnaBodyPartInfo = {\n  d_head_class: number;\n  d_head_type: number;\n  r1_head_class: number;\n  r1_head_type: number;\n  r2_head_class: number;\n  r2_head_type: number;\n  r3_head_class: number;\n  r3_head_type: number;\n  d_face_class: number;\n  d_face_type: number;\n  r1_face_class: number;\n  r1_face_type: number;\n  r2_face_class: number;\n  r2_face_type: number;\n  r3_face_class: number;\n  r3_face_type: number;\n  d_body_class: number;\n  d_body_type: number;\n  r1_body_class: number;\n  r1_body_type: number;\n  r2_body_class: number;\n  r2_body_type: number;\n  r3_body_class: number;\n  r3_body_type: number;\n  d_arm_class: number;\n  d_arm_type: number;\n  r1_arm_class: number;\n  r1_arm_type: number;\n  r2_arm_class: number;\n  r2_arm_type: number;\n  r3_arm_class: number;\n  r3_arm_type: number;\n  d_accessory_class: number;\n  d_accessory_type: number;\n  r1_accessory_class: number;\n  r1_accessory_type: number;\n  r2_accessory_class: number;\n  r2_accessory_type: number;\n  r3_accessory_class: number;\n  r3_accessory_type: number;\n  d_leg_class: number;\n  d_leg_type: number;\n  r1_leg_class: number;\n  r1_leg_type: number;\n  r2_leg_class: number;\n  r2_leg_type: number;\n  r3_leg_class: number;\n  r3_leg_type: number;\n  d_tail_class: number;\n  d_tail_type: number;\n  r1_tail_class: number;\n  r1_tail_type: number;\n  r2_tail_class: number;\n  r2_tail_type: number;\n  r3_tail_class: number;\n  r3_tail_type: number;\n  legendary: number;\n  reserved: number;\n  l_head: number;\n  l_face: number;\n  l_body: number;\n  l_arm: number;\n  l_accessory: number;\n  l_leg: number;\n  l_tail: number;\n  species_type: number;\n  species_class: string;\n  d_head_type_name: string;\n  d_face_type_name: string;\n  d_body_type_name: string;\n  d_arm_type_name: string;\n  d_accessory_type_name: string;\n  d_leg_type_name: string;\n  d_tail_type_name: string;\n  r1_head_type_name: string;\n  r1_face_type_name: string;\n  r1_body_type_name: string;\n  r1_arm_type_name: string;\n  r1_accessory_type_name: string;\n  r1_leg_type_name: string;\n  r1_tail_type_name: string;\n  r2_head_type_name: string;\n  r2_face_type_name: string;\n  r2_body_type_name: string;\n  r2_arm_type_name: string;\n  r2_accessory_type_name: string;\n  r2_leg_type_name: string;\n  r2_tail_type_name: string;\n  r3_head_type_name: string;\n  r3_face_type_name: string;\n  r3_body_type_name: string;\n  r3_arm_type_name: string;\n  r3_accessory_type_name: string;\n  r3_leg_type_name: string;\n  r3_tail_type_name: string;\n  purity: number;\n};\n\nexport type NftInfo = {\n  tokenId: number;\n  type: number;\n  name: string;\n  dna: string;\n  status: number;\n  poriClass: number;\n  numOfBreeds: number;\n  maxOfBreeds: number;\n  legend: number;\n  purity: number;\n  birthDate: string;\n  ownerAddress: string;\n  stage: number;\n  health: number;\n  speed: number;\n  physicalAttack: number;\n  physicalDefend: number;\n  critical: number;\n  magicAttack: number;\n  magicDefend: number;\n  minePower: number;\n  helpPower: number;\n  autoRenew: boolean;\n  chapter1ExpiredAt: number | null;\n  createdAt: string;\n  updatedAt: string;\n  ownerInfo: {\n    ownerId: string;\n    fullName: string;\n    publicAddress: string;\n  };\n};\n\nexport type AdventureInfo = {\n  mineId: number;\n\n  state?: string;\n\n  isFarmer: boolean;\n  farmerAddress?: string;\n  startTime?: Date;\n  farmerEndTime: Date;\n\n  isSupporter?: boolean;\n  supporterAddress?: string;\n  supporterEndTime?: Date;\n  winnerAddress?: string;\n\n  farmerPories?: number[];\n  farmerRewardLevel?: number[];\n  farmerSlots?: number[];\n\n  supporterPories?: number[];\n  supporterRewardLevel?: number[];\n  supporterSlots?: number[];\n};\n\nexport type AdventureStatsGroupByDay = {\n  unixDay: number;\n  timestamp: Date;\n  finishedMineIds: number[];\n  totalRigy: number;\n  totalRiken: number;\n  rigyUsd?: number;\n  rikenUsd?: number;\n};\n\nexport type AdventureInfoEx = Omit<\n  AdventureInfo,\n  'startTime' | 'farmerEndTime' | 'supporterEndTime'\n> & {\n  link: string;\n  canCollect?: boolean;\n  hasBigReward: boolean;\n  startTime?: string;\n  farmerEndTime?: string;\n  supporterEndTime?: string;\n  farmerAtkTime?: string;\n  supporterAtkTime?: string;\n  blockedTo: Date;\n  atkAt: Date;\n  powers: Record<string, number>;\n};\n\nexport type PromiseReturnType<T> = T extends Promise<infer Return> ? Return : T;\n","import { Context, CustomEstGasprice, ENV } from './commonTypes';\nimport * as stagConfig from './lib/sta-poriverse_info';\nimport * as prodConfig from './lib/prod-poriverse_info';\nimport * as prodPoriChainConfig from './lib/prod-porichain-poriverse_info';\nimport { isEmpty, mean } from 'lodash';\n\nexport const TEN_POWER_10 = 10 ** 18;\nexport const TEN_POWER_10_BN = BigInt(10 ** 18);\nexport const TURN_DURATION_SEC = 1800;\n\nexport function getWeb3NodeUri(env: ENV) {\n  const key = `NODE_URI_${env}`.toUpperCase();\n  return process.env[key] as string;\n}\n\nexport function getWeb3NodeUriHttp(env: ENV) {\n  const key = `NODE_URI_${env}_HTTP`.toUpperCase();\n  return process.env[key] as string;\n}\n\nexport function getWeb3NodeUriPolygonHttp() {\n  const key = `NODE_URI_${ENV.Prod}_HTTP`.toUpperCase();\n  return process.env[key] as string;\n}\n\nexport function getAPILink(env: ENV) {\n  if (env === ENV.Staging) return stagConfig.gameInfo.m.app.apiUrl;\n  else if (env === ENV.ProdPorichain)\n    return prodPoriChainConfig.gameInfo.m.app.apiUrl;\n  else return prodConfig.gameInfo.m.app.apiUrl;\n}\n\nexport function getKyberSwapFactoryAddress(env: ENV) {\n  // https://docs.kyberswap.com/developer-guides/kyberswap-addresses#mainnet\n\n  if (env === ENV.Staging) return '0x7900309d0b1c8D3d665Ae40e712E8ba4FC4F5453';\n  return '0x5f1fe642060b5b9658c15721ea22e982643c095c';\n}\n\nexport function getRIGYTokenInfoOnPolygon() {\n  const tokenConfig = prodConfig.gameInfo.m.app;\n  return {\n    symbol: tokenConfig.token.inGameSymbol,\n    tokenAddress: tokenConfig.token.inGameAddress,\n    decimal: tokenConfig.token.inGameDecimal,\n    chainId: tokenConfig.rpcMetamask.chainId,\n  };\n}\n\nexport function getRIGYTokenInfo(env: ENV) {\n  let tokenConfig = prodConfig.gameInfo.m.app;\n  if (env === ENV.Staging) {\n    tokenConfig = stagConfig.gameInfo.m.app;\n  } else if (env === ENV.ProdPorichain)\n    tokenConfig = prodPoriChainConfig.gameInfo.m.app;\n\n  return {\n    symbol: tokenConfig.token.inGameSymbol,\n    tokenAddress: tokenConfig.token.inGameAddress,\n    decimal: tokenConfig.token.inGameDecimal,\n    chainId: tokenConfig.rpcMetamask.chainId,\n  };\n}\n\nexport function getRIKENTokenInfoOnPolygon() {\n  const tokenConfig = prodConfig.gameInfo.m.app;\n  return {\n    symbol: tokenConfig.token.nativeSymbol,\n    tokenAddress: tokenConfig.token.nativeAddress,\n    decimal: tokenConfig.token.nativeDecimal,\n    chainId: tokenConfig.rpcMetamask.chainId,\n  };\n}\n\nexport function getRIKENTokenInfo(env: ENV) {\n  let tokenConfig = prodConfig.gameInfo.m.app;\n  if (env === ENV.Staging) {\n    tokenConfig = stagConfig.gameInfo.m.app;\n  } else if (env === ENV.ProdPorichain)\n    tokenConfig = prodPoriChainConfig.gameInfo.m.app;\n\n  return {\n    symbol: tokenConfig.token.nativeSymbol,\n    tokenAddress: tokenConfig.token.nativeAddress,\n    decimal: tokenConfig.token.nativeDecimal,\n    chainId: tokenConfig.rpcMetamask.chainId,\n  };\n}\n\nexport function getAdventureBaseLink(env: ENV) {\n  if (env === ENV.Staging) return stagConfig.gameInfo.m.app.urlAdventure;\n  else if (env === ENV.ProdPorichain)\n    return prodPoriChainConfig.gameInfo.m.app.urlAdventure;\n  return prodConfig.gameInfo.m.app.urlAdventure;\n}\n\nexport function getMarketplayBaseLink(env: ENV) {\n  if (env === ENV.Staging) return stagConfig.gameInfo.m.app.urlMarketplace;\n  else if (env === ENV.ProdPorichain)\n    return prodPoriChainConfig.gameInfo.m.app.urlMarketplace;\n  return prodConfig.gameInfo.m.app.urlMarketplace;\n}\n\nexport function getIdleGameAddressSC(env: ENV) {\n  if (env === ENV.Staging) {\n    return {\n      abi: stagConfig.ABI_IDLE,\n      address: stagConfig.gameInfo.m.app.contractAddress.idleGameAddress,\n      createdBlock: stagConfig.gameInfo.m.app.scCreatedBlock.idle,\n    };\n  } else if (env === ENV.ProdPorichain)\n    return {\n      abi: prodPoriChainConfig.ABI_IDLE,\n      address:\n        prodPoriChainConfig.gameInfo.m.app.contractAddress.idleGameAddress,\n      createdBlock: prodPoriChainConfig.gameInfo.m.app.scCreatedBlock.idle,\n    };\n  return {\n    abi: prodConfig.ABI_IDLE,\n    address: prodConfig.gameInfo.m.app.contractAddress.idleGameAddress,\n    createdBlock: prodConfig.gameInfo.m.app.scCreatedBlock.idle,\n  };\n}\n\nexport function getPortalAddressSC(env: ENV) {\n  if (env === ENV.ProdPorichain)\n    return {\n      abi: prodPoriChainConfig.ABI_PORTAL,\n      address: prodPoriChainConfig.gameInfo.m.app.contractAddress.rainbowPortal,\n    };\n  return null;\n}\n\nexport function calculateMineTurnTime(startTime: Date) {\n  const farmerAtkStartAt = new Date(\n    startTime.valueOf() + TURN_DURATION_SEC * 1000\n  );\n  const supporterAtkStartAt = new Date(\n    startTime.valueOf() + TURN_DURATION_SEC * 2 * 1000\n  );\n  return {\n    farmerAtkStartAt,\n    supporterAtkStartAt,\n  };\n}\n\nexport function getContextSetting(env: ENV) {\n  // getGas porichain return as 500. But avg fee on chain around 4100\n  const gasFactor = 1;\n  const safeGweith = env === ENV.ProdPorichain ? 5000 : 80;\n  const autoPlayMicroDelayMs = env === ENV.ProdPorichain ? 10000 : 3000;\n\n  // custom estimage gas function base on pending tx for porichain\n  let estimageGas: CustomEstGasprice | undefined;\n  if (env === ENV.ProdPorichain) {\n    estimageGas = async (ctx: Context) => {\n      const blockInfo = await ctx.web3.eth.getBlock('latest');\n      const pendingTx = await Promise.all(\n        blockInfo.transactions.map((itm) => ctx.web3.eth.getTransaction(itm))\n      );\n      if (isEmpty(pendingTx)) return ctx.web3.utils.toWei('5000', 'gwei');\n\n      const avgGas = mean(\n        pendingTx\n          .filter((itm) => +itm.gasPrice > 0)\n          .map((itm) => {\n            return +itm.gasPrice;\n          })\n      );\n      return Math.round(avgGas).toString();\n    };\n  }\n\n  return {\n    setting: { gasFactor, safeGweith, autoPlayMicroDelayMs },\n    custom: {\n      estimageGas,\n    },\n  };\n}\n\nexport function getMobileWalletApplink(env: ENV, link: string) {\n  if (env === ENV.ProdPorichain) {\n    const linkWithoutHttps = link.split('https://')[1];\n    return `https://metamask.app.link/dapp/${linkWithoutHttps}`;\n  }\n  return `https://link.trustwallet.com/open_url?url=${link}&coin_id=966`;\n}\n\nexport function getChainExplorerTxHashLink(env: ENV, txHash: string) {\n  if (env === ENV.ProdPorichain) {\n    return `https://explorer.porichain.io/tx/${txHash}`;\n  }\n  return `https://polygonscan.com/tx/${txHash}`;\n}\n\nexport function getDatastoreBackupKey(env: ENV) {\n  if (env === ENV.ProdPorichain) return 'porichain-db-realm';\n  return 'pori-db-realm';\n}\n\nexport * from './commonTypes';\n\nexport * as IdleGameSc from './lib/idleGameSc';\nexport * from './lib/idleGameSc/type.idleGame';\n","import Web3 from 'web3';\nimport {\n  hexToBytes,\n  splitPackedHexBy32Bytes,\n  toDecimal128,\n  toNumber,\n  transformArrayElementToNumber,\n} from '@pori-and-friends/utils';\nimport type { EventData } from 'web3-eth-contract';\nimport {\n  AllIdleGameEvents,\n  AllIdleGameSCEventData,\n  EIdleGameSCEventType,\n  IdleGameSCEvent,\n  IdleGameSCEventInvSignatureTable,\n  SBattleSwapData,\n} from './type.idleGame';\n\nexport function parseIdleGameScEvent(\n  eventInfo: EventData\n): IdleGameSCEvent | null {\n  // if (!AllIdleGameEvents.includes(eventInfo.event)) return null;\n\n  let evType!: EIdleGameSCEventType;\n  let data: AllIdleGameSCEventData;\n  if (eventInfo.event) evType = eventInfo.event as EIdleGameSCEventType;\n  else {\n    const rawTopic = eventInfo.signature || eventInfo.raw.topics[0];\n    evType = IdleGameSCEventInvSignatureTable[rawTopic];\n  }\n\n  if (!evType) return null;\n\n  switch (evType) {\n    case EIdleGameSCEventType.AdventureStarted:\n      data = {\n        mineId: toNumber(eventInfo.returnValues['mineId']),\n        farmer: eventInfo.returnValues['farmer'],\n        startTime: toNumber(eventInfo.returnValues['startTime']),\n        blockedTime: toNumber(eventInfo.returnValues['blockedTime']),\n        porians: transformArrayElementToNumber(\n          eventInfo.returnValues['porians']\n        ),\n        indexes: transformArrayElementToNumber(\n          eventInfo.returnValues['indexes']\n        ),\n        rewardLevels: transformArrayElementToNumber(\n          eventInfo.returnValues['rewardLevels']\n        ),\n      };\n      break;\n\n    case EIdleGameSCEventType.AdventureFinished:\n      data = {\n        mineId: toNumber(eventInfo.returnValues['mineId']),\n        winner: eventInfo.returnValues['winner'],\n        fragments: toNumber(eventInfo.returnValues['fragments']),\n        farmerReward1: toDecimal128(eventInfo.returnValues['farmerReward1']),\n        farmerReward2: toDecimal128(eventInfo.returnValues['farmerReward2']),\n        helperReward1: toDecimal128(eventInfo.returnValues['helperReward1']),\n        helperReward2: toDecimal128(eventInfo.returnValues['helperReward2']),\n      };\n      break;\n\n    case EIdleGameSCEventType.AdventureFortified:\n      data = {\n        mineId: toNumber(eventInfo.returnValues['mineId']),\n        porian: toNumber(eventInfo.returnValues['porian']),\n        index: toNumber(eventInfo.returnValues['index']),\n        rewardLevel: toNumber(eventInfo.returnValues['rewardLevel']),\n        blockedTime: toNumber(eventInfo.returnValues['blockedTime']),\n      };\n      break;\n\n    case EIdleGameSCEventType.AdventureSupported1:\n      data = {\n        mineId: toNumber(eventInfo.returnValues['mineId']),\n        helper: eventInfo.returnValues['helper'],\n        porians: transformArrayElementToNumber(\n          eventInfo.returnValues['porians']\n        ),\n        indexes: transformArrayElementToNumber(\n          eventInfo.returnValues['indexes']\n        ),\n        rewardLevels: transformArrayElementToNumber(\n          eventInfo.returnValues['rewardLevels']\n        ),\n        blockedTime: toNumber(eventInfo.returnValues['blockedTime']),\n      };\n      break;\n\n    case EIdleGameSCEventType.AdventureSupported2:\n      data = {\n        mineId: toNumber(eventInfo.returnValues['mineId']),\n        porian: toNumber(eventInfo.returnValues['porian']),\n        index: toNumber(eventInfo.returnValues['index']),\n        rewardLevel: toNumber(eventInfo.returnValues['rewardLevel']),\n        blockedTime: toNumber(eventInfo.returnValues['blockedTime']),\n      };\n      break;\n\n    case EIdleGameSCEventType.PorianDeposited:\n      data = {\n        from: eventInfo.returnValues['from'],\n        porian: toNumber(eventInfo.returnValues['porian']),\n        expiredAt: toNumber(eventInfo.returnValues['expiredAt']),\n      };\n      break;\n\n    case EIdleGameSCEventType.PorianWithdrawed:\n      data = {\n        to: eventInfo.returnValues['to'],\n        porian: toNumber(eventInfo.returnValues['porian']),\n      };\n      break;\n\n    case EIdleGameSCEventType.GameDurationChanged:\n      data = {\n        adventureDuration: toNumber(\n          eventInfo.returnValues['adventureDuration']\n        ),\n        turnDuration: toNumber(eventInfo.returnValues['turnDuration']),\n      };\n      break;\n    case EIdleGameSCEventType.SBattleSwapped:\n      data = parseSBattleSwapRawData(eventInfo.raw.data);\n      break;\n  }\n\n  return {\n    type: evType,\n    txHash: eventInfo.transactionHash,\n    blockNo: eventInfo.blockNumber,\n    data,\n  };\n}\n\nfunction parseSBattleSwapRawData(rawData: string): SBattleSwapData {\n  const tmp = splitPackedHexBy32Bytes(rawData);\n  const mineId = parseInt(tmp[0], 16);\n  const address = Web3.utils.toChecksumAddress(\n    `0x${tmp[1].slice(24, tmp[1].length)}`\n  );\n  const porianOutside = parseInt(tmp[2], 16);\n  const porianInside = parseInt(tmp[3], 16);\n  const fromIndex = parseInt(tmp[4], 16);\n  const toIndex = parseInt(tmp[5], 16);\n\n  return {\n    mineId,\n    farmer: address,\n    porians: [porianOutside, porianInside],\n    from: fromIndex.toString(),\n    to: toIndex.toString(),\n  };\n}\n","export * from './eventParser';\nexport * from './type.idleGame';\n","// Idle Game Events\nimport type Realm from 'realm';\n\nexport enum EIdleGameSCEventType {\n  AdventureFinished = 'AdventureFinished',\n  AdventureFortified = 'AdventureFortified',\n  AdventureStarted = 'AdventureStarted',\n  AdventureSupported1 = 'AdventureSupported1',\n  AdventureSupported2 = 'AdventureSupported2',\n  PorianDeposited = 'PorianDeposited',\n  PorianWithdrawed = 'PorianWithdrawed',\n  GameDurationChanged = 'GameDurationChanged',\n  SBattleSwapped = 'SBattleSwapped',\n}\n\nexport interface AdventureStartedData {\n  mineId: number;\n  farmer: string;\n  startTime: number;\n  blockedTime: number;\n  porians: number[];\n  indexes: number[];\n  rewardLevels: number[];\n}\n\nexport interface AdventureFinishedData {\n  mineId: number;\n  winner: string;\n  fragments: number;\n  farmerReward1: Realm.BSON.Decimal128;\n  farmerReward2: Realm.BSON.Decimal128;\n  helperReward1: Realm.BSON.Decimal128;\n  helperReward2: Realm.BSON.Decimal128;\n}\n\nexport interface AdventureFortifiedData {\n  mineId: number;\n  porian: number;\n  index: number;\n  rewardLevel: number;\n  blockedTime: number;\n}\n\nexport interface AdventureSupported1Data {\n  mineId: number;\n  helper: string;\n  porians: number[];\n  indexes: number[];\n  rewardLevels: number[];\n  blockedTime: number;\n}\n\nexport interface AdventureSupported2Data {\n  mineId: number;\n  porian: number;\n  index: number;\n  rewardLevel: number;\n  blockedTime: number;\n}\n\nexport interface PorianDepositedData {\n  from: string;\n  porian: number;\n  expiredAt: number;\n}\n\nexport interface PorianWithdrawedData {\n  to: string;\n  porian: number;\n}\n\nexport interface GameDurationChangedData {\n  adventureDuration: number;\n  turnDuration: number;\n}\n\nexport interface SBattleSwapData {\n  mineId: number;\n  farmer?: string;\n  from: string;\n  to: string;\n  porians: number[];\n}\n\nexport type AllIdleGameSCEventData =\n  | AdventureStartedData\n  | AdventureFinishedData\n  | AdventureFortifiedData\n  | AdventureSupported1Data\n  | AdventureSupported2Data\n  | PorianDepositedData\n  | PorianWithdrawedData\n  | GameDurationChangedData\n  | SBattleSwapData;\n\nexport interface IdleGameSCEvent {\n  type: EIdleGameSCEventType;\n  txHash: string;\n  blockNo: number;\n  data: AllIdleGameSCEventData;\n}\n\nexport const IdleGameSCEventSignatureTable: Record<\n  EIdleGameSCEventType,\n  string\n> = {\n  [EIdleGameSCEventType.AdventureFinished]:\n    '0xacba132576685783d626ee7ff7486ac6cf8580b51ca1ef49ee36edb6303ac735',\n  [EIdleGameSCEventType.AdventureFortified]:\n    '0x71b4d764a280d810a1907567eb53bcf7ebe267f0d94d40d2a5f20009e7b73569',\n  [EIdleGameSCEventType.AdventureStarted]:\n    '0xd498194e39f0d0d9426ee530bd16b2182b34d07d968365c8fdcaf73c5a6d0ac5',\n  [EIdleGameSCEventType.AdventureSupported1]:\n    '0xbe2e74f68284a904ef29e10f3e20b2c9bb540481fb9903c1aead3e26cc56f8b1',\n  [EIdleGameSCEventType.AdventureSupported2]:\n    '0x6dbf0858232497280bfdf35e37adf2002793779d07d4f48947b17509c71dd41c',\n  [EIdleGameSCEventType.PorianDeposited]:\n    '0xc42131d410ea79f1eafecd549df9a392681974b7f4d9f4d78c216ea12b6766e8',\n  [EIdleGameSCEventType.PorianWithdrawed]:\n    '0x44402a61584354899786311a4f0c7bf924b31db70b5ebef891d88cee08156ed5',\n  [EIdleGameSCEventType.GameDurationChanged]:\n    '0xc62be04bfb76e5e364578771d33bb80ebbea7219b67ba068fb4bbdaf83e4a3c0',\n  [EIdleGameSCEventType.SBattleSwapped]:\n    '0x6bdac8de130455f3dbd97b2916ff758c9cb534e9770af694954b63b76169d728',\n};\n\nexport const IdleGameSCEventInvSignatureTable: Record<\n  string,\n  EIdleGameSCEventType\n> = {\n  '0x6bdac8de130455f3dbd97b2916ff758c9cb534e9770af694954b63b76169d728':\n    EIdleGameSCEventType.SBattleSwapped,\n};\n\nexport const AllIdleGameEvents = Object.keys(IdleGameSCEventSignatureTable);\n","// ABI Idle\nexport const ABI_IDLE = JSON.parse(\n  '[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"mineId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fragments\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"farmerReward1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"farmerReward2\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"helperReward1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"helperReward2\",\"type\":\"uint256\"}],\"name\":\"AdventureFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"mineId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"porian\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"rewardLevel\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockedTime\",\"type\":\"uint256\"}],\"name\":\"AdventureFortified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"mineId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"farmer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[3]\",\"name\":\"porians\",\"type\":\"uint256[3]\"},{\"indexed\":false,\"internalType\":\"uint8[3]\",\"name\":\"indexes\",\"type\":\"uint8[3]\"},{\"indexed\":false,\"internalType\":\"uint8[3]\",\"name\":\"rewardLevels\",\"type\":\"uint8[3]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockedTime\",\"type\":\"uint256\"}],\"name\":\"AdventureStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"mineId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"helper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[3]\",\"name\":\"porians\",\"type\":\"uint256[3]\"},{\"indexed\":false,\"internalType\":\"uint8[3]\",\"name\":\"indexes\",\"type\":\"uint8[3]\"},{\"indexed\":false,\"internalType\":\"uint8[3]\",\"name\":\"rewardLevels\",\"type\":\"uint8[3]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockedTime\",\"type\":\"uint256\"}],\"name\":\"AdventureSupported1\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"mineId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"porian\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"rewardLevel\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockedTime\",\"type\":\"uint256\"}],\"name\":\"AdventureSupported2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"FragmentConfigsChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"adventureDuration\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"turnDuration\",\"type\":\"uint256\"}],\"name\":\"GameDurationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"env\",\"type\":\"uint8\"}],\"name\":\"GameEnvChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"NoFragments\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"porianNFT\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"porianPower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rentalCentre\",\"type\":\"address\"}],\"name\":\"PorianContractAddressChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"porian\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"expiredAt\",\"type\":\"uint256\"}],\"name\":\"PorianDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"porian\",\"type\":\"uint256\"}],\"name\":\"PorianWithdrawed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rentalFee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reservePool\",\"type\":\"address\"}],\"name\":\"RentalConfigsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rigyToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rikenToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rigyReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rikenReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"winRatio\",\"type\":\"uint256\"}],\"name\":\"RewardConfigsChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rewardLevel\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rewardRatio\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amountCell\",\"type\":\"uint256\"}],\"name\":\"RewardLevelChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"adventureDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"blockedTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decreasedTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"env\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fragmentAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fragmentRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fragmentToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mechaDiscount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mines\",\"outputs\":[{\"internalType\":\"enum IdleGame.MiningState\",\"name\":\"state\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"bytes12\",\"name\":\"selectedCells\",\"type\":\"bytes12\"},{\"internalType\":\"uint128\",\"name\":\"porianId1\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"porianId2\",\"type\":\"uint128\"}],\"internalType\":\"struct IdleGame.PlayerInfo\",\"name\":\"farmer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"bytes12\",\"name\":\"selectedCells\",\"type\":\"bytes12\"},{\"internalType\":\"uint128\",\"name\":\"porianId1\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"porianId2\",\"type\":\"uint128\"}],\"internalType\":\"struct IdleGame.PlayerInfo\",\"name\":\"helper\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"rewardMap\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mission2Riken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"porianNFT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"porianPower\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"portalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"portalInfos\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"missions\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"fastMissions\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"supplied\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"locked\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rentalCentre\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rentalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rentalPriceOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"price\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"endTime\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reservePool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rewardLevels\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountCell\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rigyReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rigyToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rikenReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rikenToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFragments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"turnDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_adventureDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_turnDuration\",\"type\":\"uint256\"}],\"name\":\"setGameDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_env\",\"type\":\"uint8\"}],\"name\":\"setGameEnv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[4]\",\"name\":\"rewardRatios\",\"type\":\"uint256[4]\"},{\"internalType\":\"uint256[4]\",\"name\":\"amountCells\",\"type\":\"uint256[4]\"}],\"name\":\"setRewardLevels\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rigyToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rikenToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rigyReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rikenReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_winRatio\",\"type\":\"uint256\"}],\"name\":\"setRewardConfigs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_porianNFT\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_porianPower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rentalCentre\",\"type\":\"address\"}],\"name\":\"setPorianContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fragmentRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fragmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_fragmentToken\",\"type\":\"address\"}],\"name\":\"setFragmentConfigs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositRiken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawRiken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"porian\",\"type\":\"uint256\"}],\"name\":\"getOwnerNowOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"porian\",\"type\":\"uint256\"}],\"name\":\"notExisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiredAt\",\"type\":\"uint256\"},{\"internalType\":\"bytes12\",\"name\":\"flags\",\"type\":\"bytes12\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onAuthorized\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"porians\",\"type\":\"uint256[]\"}],\"name\":\"withdrawPorians\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"porianID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"atTime\",\"type\":\"uint256\"}],\"name\":\"getOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[3]\",\"name\":\"porians\",\"type\":\"uint256[3]\"}],\"name\":\"isMecha\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[3]\",\"name\":\"porians\",\"type\":\"uint256[3]\"},{\"internalType\":\"uint8[3]\",\"name\":\"indexes\",\"type\":\"uint8[3]\"},{\"internalType\":\"bool\",\"name\":\"notPortal\",\"type\":\"bool\"}],\"name\":\"startAdventure\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mineId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[3]\",\"name\":\"porians\",\"type\":\"uint256[3]\"},{\"internalType\":\"uint8[3]\",\"name\":\"indexes\",\"type\":\"uint8[3]\"},{\"internalType\":\"bool\",\"name\":\"notPortal\",\"type\":\"bool\"}],\"name\":\"support1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mineId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"porian\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"fortify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mineId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"porian\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"support2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mineId\",\"type\":\"uint256\"}],\"name\":\"finish\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"mission\",\"type\":\"uint256\"}],\"name\":\"getPortalInfoOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"rewardMap\",\"type\":\"bytes32\"},{\"internalType\":\"bytes12\",\"name\":\"_selectedCells\",\"type\":\"bytes12\"}],\"name\":\"_calculateNormalReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward2\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IdleGame.MiningState\",\"name\":\"state\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"bytes12\",\"name\":\"selectedCells\",\"type\":\"bytes12\"},{\"internalType\":\"uint128\",\"name\":\"porianId1\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"porianId2\",\"type\":\"uint128\"}],\"internalType\":\"struct IdleGame.PlayerInfo\",\"name\":\"farmer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"bytes12\",\"name\":\"selectedCells\",\"type\":\"bytes12\"},{\"internalType\":\"uint128\",\"name\":\"porianId1\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"porianId2\",\"type\":\"uint128\"}],\"internalType\":\"struct IdleGame.PlayerInfo\",\"name\":\"helper\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"rewardMap\",\"type\":\"bytes32\"}],\"internalType\":\"struct IdleGame.MineInfo\",\"name\":\"m\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"_env\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"fRigyReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fRikenReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hRigyReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hRikenReward\",\"type\":\"uint256\"}],\"name\":\"_calculateBigReward\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fragments\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fRigyRewardNew\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fRikenRewardNew\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hRigyRewardNew\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hRikenRewardNew\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_env\",\"type\":\"uint8\"}],\"name\":\"atkPowerOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"atkPower\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_env\",\"type\":\"uint8\"}],\"name\":\"defPowerOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"defPower\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"rewardMap\",\"type\":\"bytes32\"}],\"name\":\"randomRewardLevel\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"rewardLevel\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"rewardMap\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"joined\",\"type\":\"uint8\"}],\"name\":\"setRewardMap\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"rewardMap\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"getRewardInfo\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"joined\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"rewardMap\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"_env\",\"type\":\"uint8\"}],\"name\":\"setEnv2RewardMap\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"rewardMap\",\"type\":\"bytes32\"}],\"name\":\"getEnvOf\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"rewardMap\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"setStartTime2RewardMap\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"rewardMap\",\"type\":\"bytes32\"}],\"name\":\"getStartTimeOfRewardMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mode\",\"type\":\"uint256\"}],\"name\":\"getRewardOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_rigyReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rikenReward\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ep\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ap\",\"type\":\"uint256\"}],\"name\":\"getESB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"rikenAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_mechaDiscount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"capacityRiken\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"missionLimit\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"_decreasedTime\",\"type\":\"uint256\"}],\"name\":\"setRikenPortalConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"portalInfoOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"suppliedRiken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockedRiken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableRiken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"capacityRiken\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"missions\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"fastMissions\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"capacityMissions\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"missions\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isMecha\",\"type\":\"bool\"}],\"name\":\"getRikenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rikenAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"sqrt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"missionOfPori\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"missionId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isAP\",\"type\":\"bool\"}],\"name\":\"getPoriansAtSCell\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"id2\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"missionId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"srcIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"desIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint8\",\"name\":\"sTreasure\",\"type\":\"uint8\"}],\"name\":\"swapPorians\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]'\n);\n\nexport const ABI_RENTAL = JSON.parse(\n  '[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reservePool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minRentalTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxRentalTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"yes\",\"type\":\"bool\"}],\"name\":\"AutoRenewSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPricePerSec\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minRentalTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxRentalTime\",\"type\":\"uint256\"}],\"name\":\"ItemInfoChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePerSec\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minRentalTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxRentalTime\",\"type\":\"uint256\"}],\"name\":\"ItemListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"renter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePerSec\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiredAt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"name\":\"ItemRented\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"}],\"name\":\"ItemUnlisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"MarketFeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldNFTToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newNFTToken\",\"type\":\"address\"}],\"name\":\"NFTTokenChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPaymentToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPaymentToken\",\"type\":\"address\"}],\"name\":\"PaymentTokenChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPricePerSec\",\"type\":\"uint256\"}],\"name\":\"PricePerSecChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minRentalTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxRentalTime\",\"type\":\"uint256\"}],\"name\":\"RentalTimeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldReservePool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newReservePool\",\"type\":\"address\"}],\"name\":\"ReservePoolChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"A_HUNDRED_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reservePool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minRentalTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxRentalTime\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSec\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minRentalTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxRentalTime\",\"type\":\"uint256\"}],\"name\":\"listItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newPricePerSec\",\"type\":\"uint256\"}],\"name\":\"changePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newPricePerSec\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minRentalTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxRentalTime\",\"type\":\"uint256\"}],\"name\":\"changeItemInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"}],\"name\":\"unlistItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rentalTime\",\"type\":\"uint256\"}],\"name\":\"rentItem\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"yes\",\"type\":\"bool\"}],\"name\":\"setAutoRenew\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minRentalTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxRentalTime\",\"type\":\"uint256\"}],\"name\":\"setRentalTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]'\n);\n\nexport const ABI_MARKETPLACE = JSON.parse(\n  '[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reservePool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"name\":\"ItemSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemUnlisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"MarketFeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldNFTToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newNFTToken\",\"type\":\"address\"}],\"name\":\"NFTTokenChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldPaymentToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPaymentToken\",\"type\":\"address\"}],\"name\":\"PaymentTokenChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"PriceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldReservePool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newReservePool\",\"type\":\"address\"}],\"name\":\"ReservePoolChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"A_HUNDRED_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"changeFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPaymentToken\",\"type\":\"address\"}],\"name\":\"changePaymentToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newNFTToken\",\"type\":\"address\"}],\"name\":\"changeNFTToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newReservePool\",\"type\":\"address\"}],\"name\":\"changeReservePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"listItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"changePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"unlistItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"buyItem\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"getItem\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"enum Marketplace.ItemState\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"internalType\":\"struct Marketplace.MarketItem\",\"name\":\"item\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalItems\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalItems\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConfigs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reservePool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]'\n);\n\nexport const ABI_PORTAL = JSON.parse(\n  '[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RikenDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RikenWithdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"addressOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"missionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"explorer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"assistant\",\"type\":\"address\"}],\"name\":\"closePortal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"configuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"configure\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositRiken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"missionId\",\"type\":\"uint256\"}],\"name\":\"getPortalInfoOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"expressMode\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"lockedRiken\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"missionCount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"discounted\",\"type\":\"bool\"}],\"name\":\"getRikenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rikenAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[3]\",\"name\":\"porians\",\"type\":\"uint256[3]\"}],\"name\":\"hasMecha\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"missionRiken\",\"type\":\"uint256[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"porianId\",\"type\":\"uint256\"}],\"name\":\"isMecha\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mission2Riken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"missionId\",\"type\":\"uint256\"}],\"name\":\"missionInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"expressMode\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"lockedRiken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mineId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"expressMode\",\"type\":\"bool\"},{\"internalType\":\"uint256[3]\",\"name\":\"porians\",\"type\":\"uint256[3]\"}],\"name\":\"openPortal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"porianNFT\",\"outputs\":[{\"internalType\":\"contract Porian\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"portalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"portalInfoOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"suppliedRiken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockedRiken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableRiken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"capacityRiken\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"missions\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"fastMissions\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"capacityMissions\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"portalInfos\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"missions\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"fastMissions\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"supplied\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"locked\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"riken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"missionRiken\",\"type\":\"uint256[]\"}],\"name\":\"setMissionRiken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawRiken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]'\n);\n\nexport const gameInfo = {\n  m: {\n    app: {\n      name: '\"PoriAdventureGame\";',\n      version: \"'1.0.0';\",\n      apiUrl: 'https://porichain-api.poriverse.io',\n      apiKey: '3537a676-6ad9-462a-ae31-3cc2dd6f8c1d',\n      apiSecretKey:\n        '55cdeacd6ef64abc90097ecc5def8ab1044d968892714cff833a11357c1f4168',\n      locale: 'en',\n      fallbackLocale: 'en',\n      urlAdventure: 'https://adventure.porichain.io',\n      urlMarketplace: 'https://marketplace.porichain.io',\n      linkPori2D: 'https://photos.poriverse.io',\n      linkPori3D: 'https://3d-model.poriverse.io/index.html',\n      token: {\n        nativeSymbol: 'RIKEN',\n        nativeAddress: '0x57DF4ACC269e5F04be0f6e4d5b26d9467b71706e',\n        nativeDecimal: '18',\n        nativeId: 'tether',\n        inGameSymbol: 'RIGY',\n        inGameAddress: '0xa31D195021dDb415E3937E5f846408b02A9d8419',\n        inGameDecimal: '18',\n        inGameId: 'siacoin',\n        fragmentSymbol: 'FRAGMENT',\n        fragmentAddress: '0xC0a2792fE016c2d4f1b9e30862b08287AE9Fcc68',\n        fragmentDecimal: '0',\n      },\n      scCreatedBlock: {\n        idle: 7643,\n      },\n      contractAddress: {\n        PoriNFTBreedable: '0xe27C1017907Db12cb377d4746cA3435B2027514C',\n        poriBreedingRule: '0x7DB415742ff3393c954262B03D1E719871547F0D',\n        marketplaceAddress: '0x2d6957F05AFD85697305b7243C76664f7cefaDF9',\n        rentalAddress: '0xdc6729725B29779752f45C2Ef3F5384cbA6cC0BA',\n        idleGameAddress: '0xd678f37434d06Fc3Eb43c11024998FAaFd411881',\n        rainbowPortal: '0x5712696231255765aeFBafe78dd7849B60C190c4',\n        poriLensAddress: '0xB73B8A250B317D52eD88E9b510919eCFAE5923a0',\n        itemsAddress: '0xA5e16E6bac094c1B38c64d3e0590c3b42f78e669',\n        multicallAddress: '0x309f6E71d91BdC916Aab66C737719e242E36f2E3',\n      },\n      rpcMetamask: {\n        chainId: '52861',\n      },\n    },\n  },\n  n: {\n    chainId: '0x89',\n    chainName: 'Polygon Mainnet',\n    nativeCurrency: {\n      name: 'MATIC',\n      symbol: 'MATIC',\n      decimals: 18,\n    },\n    rpcUrls: [\n      'https://rpc-mainnet.maticvigil.com/v1/ca075eb5895f0ea35c4c45a026ad062cd5153437',\n    ],\n    blockExplorerUrls: ['https://polygonscan.com/'],\n  },\n  b: {\n    Terra: '1',\n    Aqua: '2',\n    Magica: '3',\n    Mecha: '4',\n    Ancia: '5',\n    Stellar: '6',\n    Mysteria: '7',\n  },\n  l: {\n    Egg: 1,\n    Adult: 2,\n  },\n  k: {\n    Origin: 2,\n    Genesis: 1,\n  },\n  a: {\n    ForSale: 1,\n    ForRent: 2,\n    Renting: 3,\n    Available: 4,\n    InGameChapter1: 5,\n  },\n  c: 2,\n  d: {\n    selectClass: '',\n    sortPower: 'minePower',\n    sortOrder: 'asc',\n  },\n  e: 7955107200,\n  g: {\n    ExploreMission: 1,\n    AssitMission: 2,\n    CanAssitMission: 3,\n  },\n  f: {\n    Explore: 'Explore',\n    Assit: 'Assit',\n    Fortify1: 3,\n    Fortify2: 4,\n    Finish: 100,\n  },\n  i: {\n    Explore: 3,\n    Assit: 3,\n    Fortify1: 1,\n    Fortify2: 1,\n    Finish: 100,\n  },\n  h: {\n    Explore: 'Explore',\n    Assit: 'Assit',\n  },\n  j: {\n    Explore: 'Explore',\n    Supported1: 'Supported1',\n    Fortify1: 'Fortify1',\n    Supported2: 'Supported2',\n  },\n};\n","// ABI Idle\nexport const ABI_IDLE = JSON.parse(\n  '[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"mineId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fragments\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"farmerReward1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"farmerReward2\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"helperReward1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"helperReward2\",\"type\":\"uint256\"}],\"name\":\"AdventureFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"mineId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"porian\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"rewardLevel\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockedTime\",\"type\":\"uint256\"}],\"name\":\"AdventureFortified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"mineId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"farmer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[3]\",\"name\":\"porians\",\"type\":\"uint256[3]\"},{\"indexed\":false,\"internalType\":\"uint8[3]\",\"name\":\"indexes\",\"type\":\"uint8[3]\"},{\"indexed\":false,\"internalType\":\"uint8[3]\",\"name\":\"rewardLevels\",\"type\":\"uint8[3]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockedTime\",\"type\":\"uint256\"}],\"name\":\"AdventureStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"mineId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"helper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[3]\",\"name\":\"porians\",\"type\":\"uint256[3]\"},{\"indexed\":false,\"internalType\":\"uint8[3]\",\"name\":\"indexes\",\"type\":\"uint8[3]\"},{\"indexed\":false,\"internalType\":\"uint8[3]\",\"name\":\"rewardLevels\",\"type\":\"uint8[3]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockedTime\",\"type\":\"uint256\"}],\"name\":\"AdventureSupported1\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"mineId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"porian\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"rewardLevel\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockedTime\",\"type\":\"uint256\"}],\"name\":\"AdventureSupported2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"FragmentConfigsChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"adventureDuration\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"turnDuration\",\"type\":\"uint256\"}],\"name\":\"GameDurationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"env\",\"type\":\"uint8\"}],\"name\":\"GameEnvChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"NoFragments\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"porianNFT\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"porianPower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rentalCentre\",\"type\":\"address\"}],\"name\":\"PorianContractAddressChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"porian\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"expiredAt\",\"type\":\"uint256\"}],\"name\":\"PorianDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"porian\",\"type\":\"uint256\"}],\"name\":\"PorianWithdrawed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rentalFee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reservePool\",\"type\":\"address\"}],\"name\":\"RentalConfigsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rigyToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rikenToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rigyReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rikenReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"winRatio\",\"type\":\"uint256\"}],\"name\":\"RewardConfigsChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rewardLevel\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rewardRatio\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amountCell\",\"type\":\"uint256\"}],\"name\":\"RewardLevelChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"adventureDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"blockedTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decreasedTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"env\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fragmentAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fragmentRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fragmentToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mechaDiscount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mines\",\"outputs\":[{\"internalType\":\"enum IdleGame.MiningState\",\"name\":\"state\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"bytes12\",\"name\":\"selectedCells\",\"type\":\"bytes12\"},{\"internalType\":\"uint128\",\"name\":\"porianId1\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"porianId2\",\"type\":\"uint128\"}],\"internalType\":\"struct IdleGame.PlayerInfo\",\"name\":\"farmer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"bytes12\",\"name\":\"selectedCells\",\"type\":\"bytes12\"},{\"internalType\":\"uint128\",\"name\":\"porianId1\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"porianId2\",\"type\":\"uint128\"}],\"internalType\":\"struct IdleGame.PlayerInfo\",\"name\":\"helper\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"rewardMap\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mission2Riken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"porianNFT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"porianPower\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"portalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"portalInfos\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"missions\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"fastMissions\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"supplied\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"locked\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rentalCentre\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rentalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rentalPriceOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"price\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"endTime\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reservePool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rewardLevels\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountCell\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rigyReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rigyToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rikenReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rikenToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalFragments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"turnDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_adventureDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_turnDuration\",\"type\":\"uint256\"}],\"name\":\"setGameDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_env\",\"type\":\"uint8\"}],\"name\":\"setGameEnv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[4]\",\"name\":\"rewardRatios\",\"type\":\"uint256[4]\"},{\"internalType\":\"uint256[4]\",\"name\":\"amountCells\",\"type\":\"uint256[4]\"}],\"name\":\"setRewardLevels\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rigyToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rikenToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rigyReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rikenReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_winRatio\",\"type\":\"uint256\"}],\"name\":\"setRewardConfigs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_porianNFT\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_porianPower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rentalCentre\",\"type\":\"address\"}],\"name\":\"setPorianContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fragmentRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fragmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_fragmentToken\",\"type\":\"address\"}],\"name\":\"setFragmentConfigs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositRiken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawRiken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"porian\",\"type\":\"uint256\"}],\"name\":\"getOwnerNowOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"porian\",\"type\":\"uint256\"}],\"name\":\"notExisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiredAt\",\"type\":\"uint256\"},{\"internalType\":\"bytes12\",\"name\":\"flags\",\"type\":\"bytes12\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onAuthorized\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"porians\",\"type\":\"uint256[]\"}],\"name\":\"withdrawPorians\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"porianID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"atTime\",\"type\":\"uint256\"}],\"name\":\"getOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[3]\",\"name\":\"porians\",\"type\":\"uint256[3]\"}],\"name\":\"isMecha\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[3]\",\"name\":\"porians\",\"type\":\"uint256[3]\"},{\"internalType\":\"uint8[3]\",\"name\":\"indexes\",\"type\":\"uint8[3]\"},{\"internalType\":\"bool\",\"name\":\"notPortal\",\"type\":\"bool\"}],\"name\":\"startAdventure\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mineId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[3]\",\"name\":\"porians\",\"type\":\"uint256[3]\"},{\"internalType\":\"uint8[3]\",\"name\":\"indexes\",\"type\":\"uint8[3]\"},{\"internalType\":\"bool\",\"name\":\"notPortal\",\"type\":\"bool\"}],\"name\":\"support1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mineId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"porian\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"fortify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mineId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"porian\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"support2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mineId\",\"type\":\"uint256\"}],\"name\":\"finish\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"mission\",\"type\":\"uint256\"}],\"name\":\"getPortalInfoOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"rewardMap\",\"type\":\"bytes32\"},{\"internalType\":\"bytes12\",\"name\":\"_selectedCells\",\"type\":\"bytes12\"}],\"name\":\"_calculateNormalReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward2\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"enum IdleGame.MiningState\",\"name\":\"state\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"bytes12\",\"name\":\"selectedCells\",\"type\":\"bytes12\"},{\"internalType\":\"uint128\",\"name\":\"porianId1\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"porianId2\",\"type\":\"uint128\"}],\"internalType\":\"struct IdleGame.PlayerInfo\",\"name\":\"farmer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"bytes12\",\"name\":\"selectedCells\",\"type\":\"bytes12\"},{\"internalType\":\"uint128\",\"name\":\"porianId1\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"porianId2\",\"type\":\"uint128\"}],\"internalType\":\"struct IdleGame.PlayerInfo\",\"name\":\"helper\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"rewardMap\",\"type\":\"bytes32\"}],\"internalType\":\"struct IdleGame.MineInfo\",\"name\":\"m\",\"type\":\"tuple\"},{\"internalType\":\"uint8\",\"name\":\"_env\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"fRigyReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fRikenReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hRigyReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hRikenReward\",\"type\":\"uint256\"}],\"name\":\"_calculateBigReward\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fragments\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fRigyRewardNew\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fRikenRewardNew\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hRigyRewardNew\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hRikenRewardNew\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_env\",\"type\":\"uint8\"}],\"name\":\"atkPowerOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"atkPower\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_env\",\"type\":\"uint8\"}],\"name\":\"defPowerOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"defPower\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"rewardMap\",\"type\":\"bytes32\"}],\"name\":\"randomRewardLevel\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"rewardLevel\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"rewardMap\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"joined\",\"type\":\"uint8\"}],\"name\":\"setRewardMap\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"rewardMap\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"getRewardInfo\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"joined\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"rewardMap\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"_env\",\"type\":\"uint8\"}],\"name\":\"setEnv2RewardMap\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"rewardMap\",\"type\":\"bytes32\"}],\"name\":\"getEnvOf\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"rewardMap\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"setStartTime2RewardMap\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"rewardMap\",\"type\":\"bytes32\"}],\"name\":\"getStartTimeOfRewardMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mode\",\"type\":\"uint256\"}],\"name\":\"getRewardOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_rigyReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rikenReward\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ep\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ap\",\"type\":\"uint256\"}],\"name\":\"getESB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"rikenAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"_mechaDiscount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"capacityRiken\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"missionLimit\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"_decreasedTime\",\"type\":\"uint256\"}],\"name\":\"setRikenPortalConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"portalInfoOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"suppliedRiken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockedRiken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableRiken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"capacityRiken\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"missions\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"fastMissions\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"capacityMissions\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"missions\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isMecha\",\"type\":\"bool\"}],\"name\":\"getRikenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rikenAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"sqrt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"missionOfPori\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]'\n);\n\nexport const ABI_RENTAL = JSON.parse(\n  '[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reservePool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minRentalTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxRentalTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"yes\",\"type\":\"bool\"}],\"name\":\"AutoRenewSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPricePerSec\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minRentalTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxRentalTime\",\"type\":\"uint256\"}],\"name\":\"ItemInfoChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePerSec\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minRentalTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxRentalTime\",\"type\":\"uint256\"}],\"name\":\"ItemListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"renter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePerSec\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiredAt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"name\":\"ItemRented\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"}],\"name\":\"ItemUnlisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"MarketFeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldNFTToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newNFTToken\",\"type\":\"address\"}],\"name\":\"NFTTokenChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPaymentToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPaymentToken\",\"type\":\"address\"}],\"name\":\"PaymentTokenChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPricePerSec\",\"type\":\"uint256\"}],\"name\":\"PricePerSecChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minRentalTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxRentalTime\",\"type\":\"uint256\"}],\"name\":\"RentalTimeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldReservePool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newReservePool\",\"type\":\"address\"}],\"name\":\"ReservePoolChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"A_HUNDRED_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reservePool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minRentalTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxRentalTime\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerSec\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minRentalTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxRentalTime\",\"type\":\"uint256\"}],\"name\":\"listItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newPricePerSec\",\"type\":\"uint256\"}],\"name\":\"changePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newPricePerSec\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minRentalTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxRentalTime\",\"type\":\"uint256\"}],\"name\":\"changeItemInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"}],\"name\":\"unlistItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rentalTime\",\"type\":\"uint256\"}],\"name\":\"rentItem\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"orderId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"yes\",\"type\":\"bool\"}],\"name\":\"setAutoRenew\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minRentalTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxRentalTime\",\"type\":\"uint256\"}],\"name\":\"setRentalTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]'\n);\n\nexport const ABI_MARKETPLACE = JSON.parse(\n  '[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reservePool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"name\":\"ItemSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemUnlisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"MarketFeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldNFTToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newNFTToken\",\"type\":\"address\"}],\"name\":\"NFTTokenChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldPaymentToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPaymentToken\",\"type\":\"address\"}],\"name\":\"PaymentTokenChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"PriceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldReservePool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newReservePool\",\"type\":\"address\"}],\"name\":\"ReservePoolChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"A_HUNDRED_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"changeFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPaymentToken\",\"type\":\"address\"}],\"name\":\"changePaymentToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newNFTToken\",\"type\":\"address\"}],\"name\":\"changeNFTToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newReservePool\",\"type\":\"address\"}],\"name\":\"changeReservePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"listItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"changePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"unlistItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"buyItem\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"getItem\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"enum Marketplace.ItemState\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"internalType\":\"struct Marketplace.MarketItem\",\"name\":\"item\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalItems\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalItems\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConfigs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reservePool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]'\n);\n\nexport const ABI_PORTAL = JSON.parse(\n  '[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RikenDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RikenWithdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"addressOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"missionId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"explorer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"assistant\",\"type\":\"address\"}],\"name\":\"closePortal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"configuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"keys\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"configure\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositRiken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"missionId\",\"type\":\"uint256\"}],\"name\":\"getPortalInfoOf\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"expressMode\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"lockedRiken\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"missionCount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"discounted\",\"type\":\"bool\"}],\"name\":\"getRikenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rikenAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[3]\",\"name\":\"porians\",\"type\":\"uint256[3]\"}],\"name\":\"hasMecha\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"missionRiken\",\"type\":\"uint256[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"porianId\",\"type\":\"uint256\"}],\"name\":\"isMecha\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mission2Riken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"missionId\",\"type\":\"uint256\"}],\"name\":\"missionInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"expressMode\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"lockedRiken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mineId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"expressMode\",\"type\":\"bool\"},{\"internalType\":\"uint256[3]\",\"name\":\"porians\",\"type\":\"uint256[3]\"}],\"name\":\"openPortal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"porianNFT\",\"outputs\":[{\"internalType\":\"contract Porian\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"portalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"portalInfoOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"suppliedRiken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockedRiken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableRiken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"capacityRiken\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"missions\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"fastMissions\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"capacityMissions\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"portalInfos\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"missions\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"fastMissions\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"supplied\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"locked\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"riken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"missionRiken\",\"type\":\"uint256[]\"}],\"name\":\"setMissionRiken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawRiken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]'\n);\n\nexport const gameInfo = {\n  m: {\n    app: {\n      name: '\"PoriAdventureGame\";',\n      version: \"'1.0.0';\",\n      apiUrl: 'https://api.poriverse.io',\n      apiKey: '3537a676-6ad9-462a-ae31-3cc2dd6f8c1d',\n      apiSecretKey:\n        '55cdeacd6ef64abc90097ecc5def8ab1044d968892714cff833a11357c1f4168',\n      locale: 'en',\n      fallbackLocale: 'en',\n      urlAdventure: 'https://adventure.poriverse.io',\n      urlMarketplace: 'https://marketplace.poriverse.io',\n      linkPori2D: 'https://photos.poriverse.io',\n      linkPori3D: 'https://3d-model.poriverse.io/index.html',\n      token: {\n        nativeSymbol: 'RIKEN',\n        nativeAddress: '0xFbBd93fC3BE8B048c007666AF4846e4A36BACC95',\n        nativeDecimal: '18',\n        nativeId: 'tether',\n        inGameSymbol: 'RIGY',\n        inGameAddress: '0x9F994e2783b44C83204377589854A17c6b0c226d',\n        inGameDecimal: '18',\n        inGameId: 'siacoin',\n        fragmentSymbol: 'FRAGMENT',\n        fragmentAddress: '0xB640AdA89445ce74C6554bf27CD1aecE9CE998e4',\n        fragmentDecimal: '0',\n      },\n      scCreatedBlock: {\n        idle: 27503296,\n      },\n      contractAddress: {\n        PoriNFTBreedable: '0x81d5a77b1a070bec11280af89849ac5d74bb06cf',\n        poriBreedingRule: '0x34041860276ebafe36067974acf52e232dc8452f',\n        marketplaceAddress: '0xb73b8a250b317d52ed88e9b510919ecfae5923a0',\n        rentalAddress: '0xEa5ee287DE00112b427f96eCe8d2725EA2BfEf41',\n        idleGameAddress: '0xF8D301Db0bcbEe19B91629402AEF9FE569bE0221',\n        multicallAddress: '0x11ce4B23bD875D7F5C6a31084f55fDe1e9A87507',\n      },\n      rpcMetamask: {\n        chainId: '137',\n      },\n    },\n  },\n  n: {\n    chainId: '0x89',\n    chainName: 'Polygon Mainnet',\n    nativeCurrency: {\n      name: 'MATIC',\n      symbol: 'MATIC',\n      decimals: 18,\n    },\n    rpcUrls: [\n      'https://rpc-mainnet.maticvigil.com/v1/ca075eb5895f0ea35c4c45a026ad062cd5153437',\n    ],\n    blockExplorerUrls: ['https://polygonscan.com/'],\n  },\n  b: {\n    Terra: '1',\n    Aqua: '2',\n    Magica: '3',\n    Mecha: '4',\n    Ancia: '5',\n    Stellar: '6',\n    Mysteria: '7',\n  },\n  l: {\n    Egg: 1,\n    Adult: 2,\n  },\n  k: {\n    Origin: 2,\n    Genesis: 1,\n  },\n  a: {\n    ForSale: 1,\n    ForRent: 2,\n    Renting: 3,\n    Available: 4,\n    InGameChapter1: 5,\n  },\n  c: 2,\n  d: {\n    selectClass: '',\n    sortPower: 'minePower',\n    sortOrder: 'asc',\n  },\n  e: 7955107200,\n  g: {\n    ExploreMission: 1,\n    AssitMission: 2,\n    CanAssitMission: 3,\n  },\n  f: {\n    Explore: 'Explore',\n    Assit: 'Assit',\n    Fortify1: 3,\n    Fortify2: 4,\n    Finish: 100,\n  },\n  i: {\n    Explore: 3,\n    Assit: 3,\n    Fortify1: 1,\n    Fortify2: 1,\n    Finish: 100,\n  },\n  h: {\n    Explore: 'Explore',\n    Assit: 'Assit',\n  },\n  j: {\n    Explore: 'Explore',\n    Supported1: 'Supported1',\n    Fortify1: 'Fortify1',\n    Supported2: 'Supported2',\n  },\n};\n","// ABI Idle\nexport const ABI_IDLE = JSON.parse(\n  '[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"mineId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fragments\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"farmerReward1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"farmerReward2\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"helperReward1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"helperReward2\",\"type\":\"uint256\"}],\"name\":\"AdventureFinished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"mineId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"porian\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"rewardLevel\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockedTime\",\"type\":\"uint256\"}],\"name\":\"AdventureFortified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"mineId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"farmer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256[3]\",\"name\":\"porians\",\"type\":\"uint256[3]\"},{\"indexed\":false,\"internalType\":\"uint8[3]\",\"name\":\"indexes\",\"type\":\"uint8[3]\"},{\"indexed\":false,\"internalType\":\"uint8[3]\",\"name\":\"rewardLevels\",\"type\":\"uint8[3]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockedTime\",\"type\":\"uint256\"}],\"name\":\"AdventureStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"mineId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"helper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[3]\",\"name\":\"porians\",\"type\":\"uint256[3]\"},{\"indexed\":false,\"internalType\":\"uint8[3]\",\"name\":\"indexes\",\"type\":\"uint8[3]\"},{\"indexed\":false,\"internalType\":\"uint8[3]\",\"name\":\"rewardLevels\",\"type\":\"uint8[3]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockedTime\",\"type\":\"uint256\"}],\"name\":\"AdventureSupported1\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"mineId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"porian\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"rewardLevel\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockedTime\",\"type\":\"uint256\"}],\"name\":\"AdventureSupported2\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"FragmentConfigsChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"adventureDuration\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"turnDuration\",\"type\":\"uint256\"}],\"name\":\"GameDurationChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint8\",\"name\":\"env\",\"type\":\"uint8\"}],\"name\":\"GameEnvChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"NoFragments\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"porianNFT\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"porianPower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"rentalCentre\",\"type\":\"address\"}],\"name\":\"PorianContractAddressChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"porian\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"expiredAt\",\"type\":\"uint256\"}],\"name\":\"PorianDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"porian\",\"type\":\"uint256\"}],\"name\":\"PorianWithdrawed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rentalFee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reservePool\",\"type\":\"address\"}],\"name\":\"RentalConfigsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rigyToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"rikenToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rigyReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rikenReward\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"winRatio\",\"type\":\"uint256\"}],\"name\":\"RewardConfigsChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rewardLevel\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"rewardRatio\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amountCell\",\"type\":\"uint256\"}],\"name\":\"RewardLevelChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"adventureDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"blockedTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"env\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fragmentAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fragmentRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fragmentToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mines\",\"outputs\":[{\"internalType\":\"enum IdleGame.MiningState\",\"name\":\"state\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"bytes12\",\"name\":\"selectedCells\",\"type\":\"bytes12\"},{\"internalType\":\"uint128\",\"name\":\"porianId1\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"porianId2\",\"type\":\"uint128\"}],\"internalType\":\"struct IdleGame.PlayerInfo\",\"name\":\"farmer\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"internalType\":\"bytes12\",\"name\":\"selectedCells\",\"type\":\"bytes12\"},{\"internalType\":\"uint128\",\"name\":\"porianId1\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"porianId2\",\"type\":\"uint128\"}],\"internalType\":\"struct IdleGame.PlayerInfo\",\"name\":\"helper\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"rewardMap\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"porianNFT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"porianPower\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rentalCentre\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rentalFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rentalPriceOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"price\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"endTime\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reservePool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rewardLevels\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardRatio\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountCell\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rigyReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rigyToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rikenReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rikenToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"turnDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"winRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_adventureDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_turnDuration\",\"type\":\"uint256\"}],\"name\":\"setGameDuration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_env\",\"type\":\"uint8\"}],\"name\":\"setGameEnv\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[4]\",\"name\":\"rewardRatios\",\"type\":\"uint256[4]\"},{\"internalType\":\"uint256[4]\",\"name\":\"amountCells\",\"type\":\"uint256[4]\"}],\"name\":\"setRewardLevels\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_rigyToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rikenToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rigyReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rikenReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_winRatio\",\"type\":\"uint256\"}],\"name\":\"setRewardConfigs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_porianNFT\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_porianPower\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rentalCentre\",\"type\":\"address\"}],\"name\":\"setPorianContractAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fragmentRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fragmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_fragmentToken\",\"type\":\"address\"}],\"name\":\"setFragmentConfigs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiredAt\",\"type\":\"uint256\"},{\"internalType\":\"bytes12\",\"name\":\"flags\",\"type\":\"bytes12\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onAuthorized\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"porians\",\"type\":\"uint256[]\"}],\"name\":\"withdrawPorians\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"porianID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"atTime\",\"type\":\"uint256\"}],\"name\":\"getOwnerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[3]\",\"name\":\"porians\",\"type\":\"uint256[3]\"},{\"internalType\":\"uint8[3]\",\"name\":\"indexes\",\"type\":\"uint8[3]\"},{\"internalType\":\"bool\",\"name\":\"notPortal\",\"type\":\"bool\"}],\"name\":\"startAdventure\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mineId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[3]\",\"name\":\"porians\",\"type\":\"uint256[3]\"},{\"internalType\":\"uint8[3]\",\"name\":\"indexes\",\"type\":\"uint8[3]\"},{\"internalType\":\"bool\",\"name\":\"notPortal\",\"type\":\"bool\"}],\"name\":\"support1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mineId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"porian\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"fortify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mineId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"porian\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"support2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mineId\",\"type\":\"uint256\"}],\"name\":\"finish\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"rewardMap\",\"type\":\"bytes32\"},{\"internalType\":\"bytes12\",\"name\":\"_selectedCells\",\"type\":\"bytes12\"}],\"name\":\"_calculateNormalReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"reward1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward2\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fPorian1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fPorian2\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hPorian1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hPorian2\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_env\",\"type\":\"uint8\"}],\"name\":\"_calculateBigReward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isFarmer\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"fragments\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_env\",\"type\":\"uint8\"}],\"name\":\"atkPowerOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"atkPower\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_env\",\"type\":\"uint8\"}],\"name\":\"defPowerOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"defPower\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"rewardMap\",\"type\":\"bytes32\"}],\"name\":\"randomRewardLevel\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"rewardLevel\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"rewardMap\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"joined\",\"type\":\"uint8\"}],\"name\":\"setRewardMap\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"rewardMap\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"getRewardInfo\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"joined\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"rewardMap\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"_env\",\"type\":\"uint8\"}],\"name\":\"setEnv2RewardMap\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"rewardMap\",\"type\":\"bytes32\"}],\"name\":\"getEnvOf\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"rewardMap\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"timestamp\",\"type\":\"uint64\"}],\"name\":\"setStartTime2RewardMap\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"rewardMap\",\"type\":\"bytes32\"}],\"name\":\"getStartTimeOfRewardMap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mode\",\"type\":\"uint256\"}],\"name\":\"getRewardOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_rigyReward\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rikenReward\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]'\n);\n\nJSON.parse(\n  '[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]'\n);\nJSON.parse(\n  '[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]'\n);\nJSON.parse(\n  '[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]'\n);\nJSON.parse(\n  '[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"baseTokenURI\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiredAt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes12\",\"name\":\"flags\",\"type\":\"bytes12\"}],\"name\":\"Authorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"eggId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fatherId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"motherId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"birthdate\",\"type\":\"uint256\"}],\"name\":\"Breeded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldBreedingRule\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newBreedingRule\",\"type\":\"address\"}],\"name\":\"BreedingRuleAddressChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"eggId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gene\",\"type\":\"uint256\"}],\"name\":\"EggHatched\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"porianId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"extraGene\",\"type\":\"uint256\"}],\"name\":\"ExtraGeneActive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldGeneFactory\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newGeneFactory\",\"type\":\"address\"}],\"name\":\"GeneFactoryAddressChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CAN_AUTHORIZE_FLAG\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MUST_BE_EXPIRED_FLAG\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"authorityOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes12\",\"name\":\"\",\"type\":\"bytes12\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFlagAt\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiredAt\",\"type\":\"uint256\"},{\"internalType\":\"bytes12\",\"name\":\"flags\",\"type\":\"bytes12\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeAuthorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeAuthorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"expiredAts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes12[]\",\"name\":\"flags\",\"type\":\"bytes12[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_datas\",\"type\":\"bytes[]\"}],\"name\":\"safeAuthorizeBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes[]\",\"name\":\"_datas\",\"type\":\"bytes[]\"}],\"name\":\"safeAuthorizeBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"value\",\"type\":\"bool\"}],\"name\":\"setFlagAt\",\"outputs\":[{\"internalType\":\"bytes12\",\"name\":\"\",\"type\":\"bytes12\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"baseTokenURI\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"breedingRule\",\"type\":\"address\"}],\"name\":\"setBreedingRuleAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"geneFactory\",\"type\":\"address\"}],\"name\":\"setGeneFactoryAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"breedingRuleAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"geneFactoryAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"gene\",\"type\":\"uint256\"}],\"name\":\"mintPori\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"genes\",\"type\":\"uint256[]\"}],\"name\":\"mintPoriBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dadId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"momId\",\"type\":\"uint256\"}],\"name\":\"breed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eggId\",\"type\":\"uint256\"}],\"name\":\"hatchEgg\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"activeExtraGene\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getPori\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"gene\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"extraGene\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fatherId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"motherId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"birthdate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"breedingCount\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"}],\"name\":\"getFamily\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]'\n);\nJSON.parse(\n  '[{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentBlockTimestamp\",\"outputs\":[{\"name\":\"timestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"components\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"callData\",\"type\":\"bytes\"}],\"name\":\"calls\",\"type\":\"tuple[]\"}],\"name\":\"aggregate\",\"outputs\":[{\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"name\":\"returnData\",\"type\":\"bytes[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getLastBlockHash\",\"outputs\":[{\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"getEthBalance\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentBlockDifficulty\",\"outputs\":[{\"name\":\"difficulty\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentBlockGasLimit\",\"outputs\":[{\"name\":\"gaslimit\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCurrentBlockCoinbase\",\"outputs\":[{\"name\":\"coinbase\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getBlockHash\",\"outputs\":[{\"name\":\"blockHash\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}]'\n);\nJSON.parse(\n  '[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reservePool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payout\",\"type\":\"uint256\"}],\"name\":\"ItemSold\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemUnlisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"MarketFeeChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldNFTToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newNFTToken\",\"type\":\"address\"}],\"name\":\"NFTTokenChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldPaymentToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPaymentToken\",\"type\":\"address\"}],\"name\":\"PaymentTokenChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"PriceChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldReservePool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newReservePool\",\"type\":\"address\"}],\"name\":\"ReservePoolChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"A_HUNDRED_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"changeFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPaymentToken\",\"type\":\"address\"}],\"name\":\"changePaymentToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newNFTToken\",\"type\":\"address\"}],\"name\":\"changeNFTToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newReservePool\",\"type\":\"address\"}],\"name\":\"changeReservePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"listItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"changePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"unlistItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"buyItem\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"getItem\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"enum Marketplace.ItemState\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"}],\"internalType\":\"struct Marketplace.MarketItem\",\"name\":\"item\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalItems\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalItems\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConfigs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"nftToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reservePool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]'\n);\nJSON.parse(\n  '[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"hatchingTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxBreedingCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"relationshipLevel\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"feeToken1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeToken2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reservePool1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reservePool2\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"fee1ByBreedingCount\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"fee2ByBreedingCount\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxBreedingCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"relationshipLevel\",\"type\":\"uint256\"}],\"name\":\"BreedingConfigChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"breedingCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"Fee1ByBreedingCount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"breedingCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"Fee2ByBreedingCount\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldFeeToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newFeeToken\",\"type\":\"address\"}],\"name\":\"FeeToken1Changed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldFeeToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newFeeToken\",\"type\":\"address\"}],\"name\":\"FeeToken2Changed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"oldHatchingTime\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"newHatchingTime\",\"type\":\"uint256\"}],\"name\":\"HatchingConfigChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldPoriNFT\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newPoriNFT\",\"type\":\"address\"}],\"name\":\"PoriNFTChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldReservePool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newReservePool\",\"type\":\"address\"}],\"name\":\"ReservePool1Changed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldReservePool\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newReservePool\",\"type\":\"address\"}],\"name\":\"ReservePool2Changed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConfigs\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"maxBreedingCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"relationshipLevel\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getConfigAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"poriNFT\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeToken1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"feeToken2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reservePool1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"reservePool2\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"breedingCount\",\"type\":\"uint128\"}],\"name\":\"getFeeOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee2\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getHatchingConfig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"hatchingTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"hatchingTime\",\"type\":\"uint256\"}],\"name\":\"setHatchingConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxBreedingCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"relationshipLevel\",\"type\":\"uint256\"}],\"name\":\"setBreedingConfigs\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"fee1ByBreedingCount\",\"type\":\"uint256[]\"}],\"name\":\"setFee1ByBreedingCount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"fee2ByBreedingCount\",\"type\":\"uint256[]\"}],\"name\":\"setFee2ByBreedingCount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nft\",\"type\":\"address\"}],\"name\":\"setPoriNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeToken1\",\"type\":\"address\"}],\"name\":\"setFeeToken1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"feeToken2\",\"type\":\"address\"}],\"name\":\"setFeeToken2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newReservePool1\",\"type\":\"address\"}],\"name\":\"setReservePool1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newReservePool2\",\"type\":\"address\"}],\"name\":\"setReservePool2\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"dadId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dadGene\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"dadBreedingCount\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"momId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"momGene\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"momBreedingCount\",\"type\":\"uint128\"}],\"name\":\"breed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"gene\",\"type\":\"uint256\"},{\"internalType\":\"uint256[2]\",\"name\":\"parents\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint128\",\"name\":\"birthdate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"breedingCount\",\"type\":\"uint128\"}],\"internalType\":\"struct PoriNFTBreedable.PoriInfo\",\"name\":\"pori\",\"type\":\"tuple\"}],\"name\":\"validateHatchingRule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]'\n);\n\nexport const gameInfo = {\n  m: {\n    app: {\n      name: '\"PoriIdleGame\";',\n      version: \"'1.0.0';\",\n      apiUrl: 'https://stage2-po-api.vinaweb.app',\n      apiKey: '3537a676-6ad9-462a-ae31-3cc2dd6f8c1d',\n      apiSecretKey:\n        '55cdeacd6ef64abc90097ecc5def8ab1044d968892714cff833a11357c1f4168',\n      locale: 'en',\n      fallbackLocale: 'en',\n      urlAdventure: 'https://stag-adventure.poriverse.io',\n      urlMarketplace: 'https://stag-marketplace.poriverse.io',\n      linkPori2D: 'https://stag-porian-photo.vinaweb.app',\n      linkPori3D: 'https://po-model.vinaweb.app/index.html',\n      token: {\n        nativeSymbol: 'RIKEN',\n        nativeAddress: '0xc78cd7A12D73B3021CDB3Bffb8230065118D3b47',\n        nativeDecimal: '18',\n        nativeId: 'crabada',\n        inGameSymbol: 'RIGY',\n        inGameAddress: '0xB9C88958806a187a6626A5B22089E3d3909415aa',\n        inGameDecimal: '18',\n        inGameId: 'treasure-under-sea',\n        fragmentSymbol: 'FRAGMENT',\n        fragmentAddress: '0x37a0318c36D38724fD3b193BF2D6bAD3498A67e3',\n        fragmentDecimal: '18',\n      },\n      scCreatedBlock: {\n        idle: 25777543,\n      },\n      contractAddress: {\n        PoriNFTBreedable: '0xe958F64556f7293D882E7a3E7330546F9Ea75182',\n        poriBreedingRule: '0x066aB3B4817514a86cf91433dfF8C5bC2c666FDf',\n        marketplaceAddress: '0x4831013ac926366e856140548692e4e2B4799Bfa',\n        rentalAddress: '0xEa5ee287DE00112b427f96eCe8d2725EA2BfEf41',\n        idleGameAddress: '0x70d66d12c424Db41bf4E501A3FBbF5D4a779E66b',\n        multicallAddress: '0x08411ADd0b5AA8ee47563b146743C13b3556c9Cc',\n      },\n      rpcMetamask: {\n        chainId: '80001',\n      },\n    },\n  },\n  n: {\n    chainId: '0x13881',\n    chainName: 'Mumbai-Testnet',\n    nativeCurrency: {\n      name: 'MATIC',\n      symbol: 'MATIC',\n      decimals: 18,\n    },\n    rpcUrls: ['https://rpc-mumbai.vinaweb.app'],\n    blockExplorerUrls: ['https://mumbai.polygonscan.com/'],\n  },\n  b: {\n    Terra: '1',\n    Aqua: '2',\n    Magica: '3',\n    Mecha: '4',\n    Ancia: '5',\n    Stellar: '6',\n    Mysteria: '7',\n  },\n  l: {\n    Egg: 1,\n    Adult: 2,\n  },\n  k: {\n    Origin: 2,\n    Genesis: 1,\n  },\n  a: {\n    ForSale: 1,\n    ForRent: 2,\n    Renting: 3,\n    Available: 4,\n    InGameChapter1: 5,\n  },\n  c: {\n    selectClass: '',\n    sortPower: 'minePower',\n    sortOrder: 'asc',\n  },\n  d: 7955107200,\n  g: {\n    ExploreMission: 1,\n    AssitMission: 2,\n    CanAssitMission: 3,\n  },\n  f: {\n    Explore: 'Explore',\n    Assit: 'Assit',\n    Fortify1: 3,\n    Fortify2: 4,\n    Finish: 100,\n  },\n  i: {\n    Explore: 3,\n    Assit: 3,\n    Fortify1: 1,\n    Fortify2: 1,\n    Finish: 100,\n  },\n  h: {\n    Explore: 'Explore',\n    Assit: 'Assit',\n  },\n  j: {\n    Explore: 'Explore',\n    Supported1: 'Supported1',\n    Fortify1: 'Fortify1',\n    Supported2: 'Supported2',\n  },\n  e: {\n    Unknown: 0,\n    Started: 1,\n    Supported1: 2,\n    Fortified1: 3,\n    Supported2: 4,\n    Finished: 5,\n  },\n};\n","import Realm, { ConfigurationWithoutSync } from 'realm';\nimport { Schemas as IdleGameSchemas } from './lib/idleGames/schema';\nimport {\n  IdleGameSCMetadataRepo,\n  IdleGameSCMetadataDataModel,\n  IdleGameSCEventRepo,\n  IdleGameSCEventDataModel,\n  PlayerRepo,\n  PlayerDataModel,\n  PoriRepo,\n  PoriDataModel,\n  DataViewModel,\n  DataViewRepo,\n} from './lib/idleGames/schema';\nimport {\n  ScheduleJobModel,\n  SchedulerServiceSchema,\n  SchedulerRepo,\n  SchedulerService,\n} from './lib/services/scheduler';\n\nexport async function openRepo(opt: ConfigurationWithoutSync) {\n  const schemas = opt.schema ?? [];\n  const ins = await Realm.open({\n    ...opt,\n    schemaVersion: 3,\n    schema: [...schemas, ...IdleGameSchemas, ...SchedulerServiceSchema],\n    shouldCompactOnLaunch: () => true,\n  });\n  return ins;\n}\n\nconst Services = {\n  SchedulerService,\n};\n\nexport {\n  IdleGameSCMetadataDataModel,\n  IdleGameSCEventDataModel,\n  IdleGameSCMetadataRepo,\n  IdleGameSCEventRepo,\n  PlayerRepo,\n  PlayerDataModel,\n  PoriRepo,\n  PoriDataModel,\n  DataViewModel,\n  DataViewRepo,\n  ScheduleJobModel,\n  SchedulerRepo,\n  SchedulerService,\n  Services,\n};\n","import Realm from 'realm';\n\nexport function CommonReamRepo<T extends Realm.Object>(MODEL_NAME: string) {\n  return class Wrapper {\n    public static async findOne(realm: Realm, id: any): Promise<T | undefined> {\n      const res = realm.objectForPrimaryKey<T>(MODEL_NAME, id);\n      return res;\n    }\n\n    public static findOneSync(realm: Realm, id: any): T | undefined {\n      const res = realm.objectForPrimaryKey<T>(MODEL_NAME, id);\n      return res;\n    }\n\n    public static async findAll(realm: Realm) {\n      return realm.objects<T>(MODEL_NAME);\n    }\n\n    public static create(realm: Realm, data: Partial<T>): T {\n      return realm.create<T>(\n        MODEL_NAME,\n        { ...data },\n        Realm.UpdateMode.Modified\n      );\n    }\n\n    static getOrCreate(realm: Realm, id: any, defaultData: Partial<T>): T {\n      const res = realm.objectForPrimaryKey<T>(MODEL_NAME, id);\n      if (res) {\n        return res;\n      }\n      return Wrapper.create(realm, { ...defaultData, _id: id });\n    }\n\n    public static async createWithTx(\n      realm: Realm,\n      data: Partial<T>\n    ): Promise<T> {\n      return new Promise((resolve, reject) => {\n        try {\n          realm.write(() => {\n            const res = realm.create<T>(\n              MODEL_NAME,\n              { ...data },\n              Realm.UpdateMode.Modified\n            );\n            resolve(res as unknown as T);\n          });\n        } catch (error) {\n          reject(error);\n        }\n      });\n    }\n\n    static async upsertWithTx(\n      realm: Realm,\n      id: any,\n      val: Partial<T>\n    ): Promise<T> {\n      return new Promise((resolve, reject) => {\n        try {\n          const res = realm.objectForPrimaryKey<T>(MODEL_NAME, id);\n          if (res) {\n            const mergedData = { ...res.toJSON(), ...val };\n            return Wrapper.createWithTx(realm, mergedData)\n              .then(resolve)\n              .catch(reject);\n          }\n\n          return Wrapper.createWithTx(realm, { ...val, _id: id })\n            .then(resolve)\n            .catch(reject);\n        } catch (error) {\n          return reject(error);\n        }\n      });\n    }\n\n    static async getOrCreateWithTx(\n      realm: Realm,\n      id: any,\n      defaultData: Partial<T>\n    ): Promise<T> {\n      return new Promise((resolve, reject) => {\n        try {\n          const res = realm.objectForPrimaryKey<T>(MODEL_NAME, id);\n          if (res) {\n            return resolve(res);\n          }\n\n          return Wrapper.createWithTx(realm, { ...defaultData, _id: id })\n            .then(resolve)\n            .catch(reject);\n        } catch (error) {\n          return reject(error);\n        }\n      });\n    }\n\n    static async tx(realm: Realm, handler: () => void): Promise<void> {\n      return new Promise((resolve, reject) => {\n        realm.write(() => {\n          try {\n            handler();\n            resolve();\n          } catch (error) {\n            reject(error);\n          }\n        });\n      });\n    }\n\n    static txSync(realm: Realm, handler: () => void): void {\n      realm.write(() => {\n        handler();\n      });\n    }\n  };\n}\n","import Realm from 'realm';\nimport { CommonReamRepo } from '../common/baseDataModel';\nimport { NftInfo } from '@pori-and-friends/pori-metadata';\n\n// -------------------------------------------------\n//  Players\n// -------------------------------------------------\nexport class PlayerDataModel extends Realm.Object {\n  constructor(\n    public readonly _id: string,\n    public createdBlock: number,\n    public pories: Realm.List<PoriDataModel>\n  ) {\n    super();\n  }\n  public static readonly NAME = 'Players';\n\n  static generate(_id: string, createdBlock: number) {\n    return {\n      _id,\n      createdBlock,\n    };\n  }\n\n  static schema = {\n    name: PlayerDataModel.NAME,\n    primaryKey: '_id',\n    properties: {\n      _id: 'string',\n      createdBlock: 'int',\n      pories: 'Pories[]',\n    },\n  };\n}\nexport const PlayerRepo = CommonReamRepo<PlayerDataModel>(PlayerDataModel.NAME);\n\n// -------------------------------------------------\n//  Pori\n// -------------------------------------------------\nexport class PoriDataModel extends Realm.Object {\n  constructor(\n    public _id: number,\n\n    // deposit to IdleGame\n    public isActive: boolean,\n\n    // nftInfo\n    public type: number,\n    public name: string,\n    public dna: string,\n    public status: number,\n    public poriClass: number,\n    public legend: number,\n    public purity: number,\n    public birthDate: string,\n    public ownerAddress: string,\n    public stage: number,\n    public health: number,\n    public speed: number,\n    public physicalAttack: number,\n    public physicalDefend: number,\n    public critical: number,\n    public magicAttack: number,\n    public magicDefend: number,\n    public minePower: number,\n    public helpPower: number,\n    public createdAt: string,\n    public updatedAt: string,\n\n    // link\n    public player: PlayerDataModel\n  ) {\n    super();\n  }\n  public static readonly NAME = 'Pories';\n\n  static generate(info: NftInfo) {\n    const {\n      tokenId,\n      type,\n      name,\n      dna,\n      status,\n      poriClass,\n      legend,\n      purity,\n      birthDate,\n      ownerAddress,\n      stage,\n      health,\n      speed,\n      physicalAttack,\n      physicalDefend,\n      critical,\n      magicAttack,\n      magicDefend,\n      minePower,\n      helpPower,\n      createdAt,\n      updatedAt,\n    } = info;\n    return {\n      _id: tokenId,\n      isActive: true,\n\n      // nftInfo\n      type,\n      name,\n      dna,\n      status,\n      poriClass,\n      legend,\n      purity,\n      birthDate,\n      ownerAddress,\n      stage,\n      health,\n      speed,\n      physicalAttack,\n      physicalDefend,\n      critical,\n      magicAttack,\n      magicDefend,\n      minePower,\n      helpPower,\n      createdAt,\n      updatedAt,\n    };\n  }\n\n  static schema = {\n    name: PoriDataModel.NAME,\n    primaryKey: '_id',\n    properties: {\n      _id: 'int',\n      isActive: 'bool',\n\n      // nftInfo\n      type: 'int?',\n      name: 'string?',\n      dna: 'string?',\n      status: 'int?',\n      poriClass: 'int?',\n      legend: 'int?',\n      purity: 'int?',\n      birthDate: 'string?',\n      ownerAddress: 'string?',\n      stage: 'int?',\n      health: 'int?',\n      speed: 'int?',\n      physicalAttack: 'int?',\n      physicalDefend: 'int?',\n      critical: 'int?',\n      magicAttack: 'int?',\n      magicDefend: 'int?',\n      minePower: 'int?',\n      helpPower: 'int?',\n      createdAt: 'string?',\n      updatedAt: 'string?',\n      player: {\n        type: 'linkingObjects',\n        objectType: PlayerDataModel.NAME,\n        property: 'pories',\n      },\n    },\n  };\n}\nexport const PoriRepo = CommonReamRepo<PoriDataModel>(PoriDataModel.NAME);\n\n// -------------------------------------------------\n//  Players\n// -------------------------------------------------\nexport class DataViewModel extends Realm.Object {\n  constructor(\n    public readonly _id: string,\n    public cursor: string,\n    public _v: string,\n    public data: string\n  ) {\n    super();\n  }\n  public static readonly NAME = 'DataView';\n\n  static generate(_id: string, cursor: string, data: any, version = '1') {\n    return {\n      _id,\n      cursor,\n      _v: version,\n      data: JSON.stringify(data),\n    };\n  }\n\n  static schema = {\n    name: DataViewModel.NAME,\n    primaryKey: '_id',\n    properties: {\n      _id: 'string',\n      cursor: 'string',\n      _v: 'string',\n      data: 'string',\n    },\n  };\n}\nexport const DataViewRepo = CommonReamRepo<DataViewModel>(DataViewModel.NAME);\n","import {\n  AllIdleGameSCEventData,\n  EIdleGameSCEventType,\n  IdleGameSCEvent,\n} from '@pori-and-friends/pori-metadata';\nimport Realm from 'realm';\nimport { CommonReamRepo } from '../common/baseDataModel';\nconst { ObjectID } = Realm.BSON;\n\n// -------------------------------------------------\n//  SC.Events\n// -------------------------------------------------\n\nexport class IdleGameSCEventDataModel\n  extends Realm.Object\n  implements IdleGameSCEvent\n{\n  constructor(\n    public readonly _id: Realm.BSON.ObjectId = new ObjectID(),\n    public type: EIdleGameSCEventType,\n    public txHash: string,\n    public blockNo: number,\n    public data: AllIdleGameSCEventData\n  ) {\n    super();\n  }\n\n  public static generate({ type, txHash, blockNo, data }: IdleGameSCEvent) {\n    return {\n      _id: new ObjectID(),\n      type,\n      txHash,\n      blockNo,\n      data,\n    };\n  }\n\n  public static readonly NAME = 'IdleGame.SCEvents';\n  static schema = {\n    name: IdleGameSCEventDataModel.NAME,\n    primaryKey: '_id',\n    properties: {\n      _id: 'objectId',\n      type: 'string',\n      txHash: 'string',\n      blockNo: 'int',\n      data: 'IdleGame.SCEvents.EventPayload',\n    },\n  };\n\n  static embededEventDataSchema = {\n    name: 'IdleGame.SCEvents.EventPayload',\n    embedded: true,\n    properties: {\n      mineId: 'int?',\n      farmer: 'string?',\n      startTime: 'int?',\n      porians: {\n        type: 'list',\n        objectType: 'int',\n        optional: true,\n      },\n      indexes: {\n        type: 'list',\n        objectType: 'int',\n        optional: true,\n      },\n      winner: 'string?',\n      fragments: 'int?',\n      farmerReward1: 'decimal128?',\n      farmerReward2: 'decimal128?',\n      helperReward1: 'decimal128?',\n      helperReward2: 'decimal128?',\n      porian: 'int?',\n      index: 'int?',\n      rewardLevel: 'int?',\n      blockedTime: 'int?',\n      helper: 'string?',\n      rewardLevels: {\n        type: 'list',\n        objectType: 'int',\n        optional: true,\n      },\n      from: 'string?',\n      expiredAt: 'int?',\n      to: 'string?',\n      adventureDuration: 'int?',\n      turnDuration: 'int?',\n    },\n  };\n}\nexport const IdleGameSCEventRepo = CommonReamRepo<IdleGameSCEventDataModel>(\n  IdleGameSCEventDataModel.NAME\n);\n// -------------------------------------------------\n//  SC.Metadata\n// -------------------------------------------------\n\nexport class IdleGameSCMetadataDataModel extends Realm.Object {\n  constructor(\n    public readonly _id: string,\n    public createdBlock: number,\n    public updatedBlock: number,\n    public extras: Record<string, any> = {}\n  ) {\n    super();\n  }\n  public static readonly NAME = 'IdleGame.Metadata';\n\n  static schema = {\n    name: IdleGameSCMetadataDataModel.NAME,\n    primaryKey: '_id',\n    properties: {\n      _id: 'string',\n      createdBlock: 'int',\n      updatedBlock: 'int',\n      extras: '{}',\n    },\n  };\n}\nexport const IdleGameSCMetadataRepo =\n  CommonReamRepo<IdleGameSCMetadataDataModel>(IdleGameSCMetadataDataModel.NAME);\n","import {\n  IdleGameSCMetadataDataModel,\n  IdleGameSCEventDataModel,\n} from './scInfo.schema';\nimport { DataViewModel, PlayerDataModel, PoriDataModel } from './game.schema';\n\nexport * from './scInfo.schema';\nexport * from './game.schema';\n\nexport const Schemas = [\n  IdleGameSCEventDataModel.schema,\n  IdleGameSCMetadataDataModel.schema,\n  IdleGameSCEventDataModel.embededEventDataSchema,\n  PlayerDataModel.schema,\n  PoriDataModel.schema,\n  DataViewModel.schema,\n];\n","import debug from 'debug';\nimport Realm from 'realm';\nimport { CommonReamRepo } from '../common/baseDataModel';\n\nconst { ObjectID } = Realm.BSON;\nconst debugLog = debug('pori:services:scheduler');\n\n// -------------------------------------------------\n//  Scheduler\n// -------------------------------------------------\nexport class ScheduleJobModel extends Realm.Object {\n  _id = '';\n  type = '';\n  codeName = '';\n  params = '';\n  runAt: Date = new Date();\n  hasFinish = false;\n  result = '';\n\n  public static readonly NAME = 'Schedulers';\n\n  static generate(\n    codeName: string,\n    params: string,\n    runAt: Date,\n    _id: string = new ObjectID().toHexString()\n  ) {\n    return {\n      _id,\n      type: 'SCHEDULE',\n      codeName,\n      params,\n      runAt,\n      hasFinish: false,\n    };\n  }\n\n  static schema = {\n    name: ScheduleJobModel.NAME,\n    primaryKey: '_id',\n    properties: {\n      _id: 'string',\n      hasFinish: 'bool',\n      type: 'string',\n      codeName: 'string',\n      params: 'string?',\n      runAt: 'date?',\n      result: 'string?',\n    },\n  };\n}\n\nexport const SchedulerRepo = CommonReamRepo<ScheduleJobModel>(\n  ScheduleJobModel.NAME\n);\n\nexport const SchedulerServiceSchema = [ScheduleJobModel];\n\nexport type JobHandlerFunc = (arg: ScheduleJobModel) => Promise<any>;\n\nexport class SchedulerService {\n  private jobHandlers: Record<string, JobHandlerFunc> = {};\n  private timerTickets: Record<string, NodeJS.Timeout> = {};\n\n  addHandler(name: string, func: JobHandlerFunc) {\n    this.jobHandlers[name] = func;\n  }\n\n  async start(realm: Realm) {\n    await this.refreshAllJob(realm);\n  }\n  async stop(realm: Realm) {\n    for (const [k, v] of Object.entries(this.timerTickets)) {\n      clearTimeout(v);\n    }\n  }\n\n  async getJobById(realm: Realm, jobId: string) {\n    const ins = await SchedulerRepo.findOne(realm, jobId);\n    if (!ins) return;\n    return ins;\n  }\n\n  async deleteJob(realm: Realm, jobId: string) {\n    const ins = await SchedulerRepo.findOne(realm, jobId);\n    if (!ins) return;\n\n    SchedulerRepo.txSync(realm, () => {\n      const ticketId = ins._id;\n      delete this.timerTickets[ticketId];\n\n      realm.delete(ins);\n    });\n  }\n\n  async scheduleJob(\n    realm: Realm,\n    {\n      codeName,\n      params,\n      runAt,\n      _id,\n    }: { codeName: string; params: string; runAt: Date; _id?: string }\n  ) {\n    const ins = await SchedulerRepo.createWithTx(\n      realm,\n      ScheduleJobModel.generate(codeName, params, runAt, _id)\n    );\n    await this.internalRegisterJob(realm, ins);\n    return ins._id;\n  }\n\n  async refreshAllJob(realm: Realm) {\n    const availableJobs = await this.listPendingJob(realm);\n    for (const iterator of availableJobs) {\n      await this.internalRegisterJob(\n        realm,\n        iterator as unknown as ScheduleJobModel\n      );\n    }\n  }\n\n  async listPendingJob(realm: Realm) {\n    const now = new Date();\n    const availableJobs = (await SchedulerRepo.findAll(realm)).filtered(\n      `runAt >= $0 && hasFinish = false`,\n      now\n    );\n    return availableJobs;\n  }\n\n  private async internalRegisterJob(realm: Realm, iterator: ScheduleJobModel) {\n    const now = new Date();\n    const { _id, runAt, codeName } = iterator;\n    const ticketId = _id;\n    if (this.timerTickets[ticketId]) {\n      clearTimeout(this.timerTickets[ticketId]);\n    }\n    const intervalMs = runAt.valueOf() - now.valueOf();\n    this.timerTickets[_id] = setTimeout(\n      this.execJob(realm, ticketId),\n      intervalMs\n    );\n  }\n\n  private execJob(realm: Realm, jobId: string) {\n    return async () => {\n      debugLog(`[scheduler] job id run ${jobId}`);\n      const ins = await SchedulerRepo.findOne(realm, jobId);\n      if (!ins) return;\n      const codeName = ins.codeName;\n      const params = ins.params;\n      debugLog(\n        `[scheduler] job id run ${jobId}. codeName ${codeName}, params ${params}`\n      );\n      let result = '';\n      try {\n        const func = this.jobHandlers[codeName];\n        if (!func) {\n          result = `[error] missing handler for codeName ${codeName}`;\n          debugLog(\n            `[scheduler] job id run ${jobId}. missing handler for codeName ${codeName}`\n          );\n          return;\n        }\n        result = await func(ins);\n      } catch (error: any) {\n        result = `[error] ${error.message}`;\n        console.error(\n          `[scheduler] job id run ${jobId}. error ${error.message}`\n        );\n      } finally {\n        delete this.timerTickets[jobId];\n        SchedulerRepo.txSync(realm, () => {\n          ins.hasFinish = true;\n          ins.result = result;\n        });\n      }\n    };\n  }\n}\n","export * from './lib/axiosHelper';\nexport * from './lib/typeConvertHelper';\nexport * from './lib/cryptoHelper';\nexport * from './lib/deferred';\nexport * from './lib/functionHelper';\nexport * from './lib/jobQueue';\n","import { Axios } from 'axios';\n\nconst axiosIns = new Axios({\n  headers: {\n    'User-Agent':\n      'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.127 Safari/537.36',\n  },\n});\n\n// Todo add log\n\nexport { axiosIns };\n","import crypto from 'crypto';\nconst algo = 'aes-256-cbc';\n\nexport function generateAesKey(pass: string): { key: Buffer; algo: string } {\n  const salt = crypto.randomBytes(16);\n  const keyLengthBytes = 256 / 8;\n\n  const key = crypto.scryptSync(pass, salt, keyLengthBytes);\n\n  return { key, algo };\n}\n\nexport function generateAesIv() {\n  const iv = crypto.randomBytes(16);\n  return iv;\n}\n\nexport async function encryptAes({\n  key,\n  iv,\n  data,\n}: {\n  key: Buffer;\n  iv: Buffer;\n  data: string;\n}) {\n  return new Promise<string>((resolve, reject) => {\n    const cipher = crypto.createCipheriv(algo, key, iv);\n\n    let encrypted = '';\n    cipher.on('readable', () => {\n      let chunk;\n      while (null !== (chunk = cipher.read())) {\n        encrypted += chunk.toString('hex');\n      }\n    });\n    cipher.on('end', () => {\n      resolve(encrypted);\n    });\n    cipher.on('error', (err) => {\n      reject(err);\n    });\n\n    cipher.write(data);\n    cipher.end();\n  });\n}\n\nexport async function decryptAes({\n  key,\n  iv,\n  encrypted,\n}: {\n  key: Buffer;\n  iv: Buffer;\n  encrypted: string;\n}) {\n  return new Promise<string>((resolve, reject) => {\n    const decipher = crypto.createDecipheriv(algo, key, iv);\n    let decrypted = decipher.update(encrypted, 'hex', 'utf8');\n    decrypted += decipher.final('utf8');\n    resolve(decrypted);\n  });\n}\n","import { Function1 } from 'lodash';\n\nexport class Deferred<T = any> {\n  promise: Promise<T>;\n  reject!: Function1<any, void>;\n  resolve!: Function1<T, void>;\n\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.reject = reject;\n      this.resolve = resolve;\n    });\n  }\n\n  reset() {\n    this.promise = new Promise((resolve, reject) => {\n      this.reject = reject;\n      this.resolve = resolve;\n    });\n  }\n}\n","import { minBy } from 'lodash';\n\nexport const waitForMs = (ms: number) => new Promise((r) => setTimeout(r, ms));\n\nexport async function doTaskWithRetry(\n  times: number,\n  doTask: () => Promise<void>,\n  onRetry?: (error: Error, time: number) => void,\n  delayMs?: number\n) {\n  let it = times;\n  while (it > 0) {\n    try {\n      await doTask();\n      return;\n    } catch (error) {\n      it--;\n      const canRetry = it > 0;\n      if (!canRetry) throw error;\n      onRetry && onRetry(error as Error, times - it);\n      if (delayMs) await waitForMs(delayMs);\n    }\n  }\n}\n\nexport function boolFromString(inp: any) {\n  if (inp === '1' || inp === 'true') return true;\n  return false;\n}\n\nexport function isArrayIncludeAll(array: any[], contain: any[]) {\n  for (const itm of contain) {\n    if (!array.includes(itm)) return false;\n  }\n  return true;\n}\n\nexport function byte2number(bytes: number[]) {\n  return parseInt(Buffer.from(bytes).toString('hex'), 16);\n}\n\nexport function isHexStrict(hex: string) {\n  return (\n    (typeof hex === 'string' || typeof hex === 'number') &&\n    /^(-)?0x[0-9a-f]*$/i.test(hex)\n  );\n}\n\nexport function hexToBytes(hex: string) {\n  hex = (hex as any).toString(16);\n\n  if (!isHexStrict(hex)) {\n    throw new Error('Given value \"' + hex + '\" is not a valid hex string.');\n  }\n\n  hex = hex.replace(/^0x/i, '');\n\n  const bytes = [];\n  for (let c = 0; c < hex.length; c += 2)\n    bytes.push(parseInt(hex.slice(c, c + 2), 16));\n  return bytes;\n}\n\nexport function splitPackedHexBy32Bytes(hex: string) {\n  hex = hex.replace(/^0x/i, '');\n  const fixedSize = 64;\n\n  const res = [];\n  for (let i = 0; i < hex.length; i += fixedSize) {\n    const chunk = hex.slice(i, i + fixedSize);\n    res.push(chunk);\n  }\n  return res;\n}\n\nexport function minIndex<T>(arr: T[]) {\n  const res = minBy<[T, number]>(Object.entries(arr) as any, (itm) => itm[1]);\n  if (!res) return null;\n  return {\n    minVal: res[1],\n    minIndex: res[0],\n  };\n}\nexport function minIndexBy<T>(arr: T[], byFunc: (arg: [T, number]) => number) {\n  const res = minBy<[T, number]>(Object.entries(arr) as any, (itm) =>\n    byFunc(itm)\n  );\n  if (!res) return null;\n  return {\n    minVal: res[1],\n    minIndex: res[0],\n  };\n}\n","import { Deferred } from './deferred';\n\nexport class JobQueue {\n  _queue: any;\n  isProcessing: any;\n  constructor() {\n    this._queue = [];\n    this.isProcessing = false;\n  }\n\n  addJob(exeFunc: any) {\n    const def = new Deferred();\n    this._queue.push({\n      def,\n      exeFunc,\n    });\n    this._checkJob();\n\n    return def.promise;\n  }\n\n  private _checkJob() {\n    if (this.isProcessing) return;\n    if (this._queue.length <= 0) return;\n    const itm = this._queue.shift();\n    this._exeJob(itm);\n  }\n\n  private async _exeJob({ def, exeFunc }: any) {\n    try {\n      this.isProcessing = true;\n      const res = await exeFunc();\n      def.resolve(res);\n    } catch (error) {\n      def.reject(error);\n    } finally {\n      this.isProcessing = false;\n      this._checkJob();\n    }\n  }\n}\n","import Realm from 'realm';\n\nexport function toNumber(val: any) {\n  return parseFloat(val);\n}\n\nexport function toDecimal128(val: any) {\n  return Realm.BSON.Decimal128.fromString(val);\n}\n\nexport function transformArrayElementToNumber(val: any[]) {\n  return val.map((itm) => toNumber(itm));\n}\n","module.exports = require(\"@dynamic-amm/sdk\");","module.exports = require(\"@ethersproject/providers\");","module.exports = require(\"@walletconnect/client\");","module.exports = require(\"@walletconnect/qrcode-modal\");","module.exports = require(\"axios\");","module.exports = require(\"debug\");","module.exports = require(\"lodash\");","module.exports = require(\"moment\");","module.exports = require(\"mongodb\");","module.exports = require(\"node-telegram-bot-api\");","module.exports = require(\"process\");","module.exports = require(\"realm\");","module.exports = require(\"tslib\");","module.exports = require(\"web3\");","module.exports = require(\"crypto\");","module.exports = require(\"fs\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"stream\");","module.exports = require(\"url\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import * as MongoDataStore from '@pori-and-friends/mongodb-data-store';\nimport {\n  Auto,\n  Cmds,\n  Computed,\n  expandEngadedMission,\n  getKyberPoolRIGYPrice,\n  getKyberPoolRIKENPrice,\n  getMaticBalance,\n  getTokenBalance,\n  init,\n  queryBinancePrice,\n  queryMarketInfo,\n  token2Usd,\n} from '@pori-and-friends/pori-actions';\nimport {\n  AdventureInfoEx,\n  Context,\n  ENV,\n  getDatastoreBackupKey,\n  getMarketplayBaseLink,\n  getMobileWalletApplink,\n  getRIGYTokenInfo,\n  getRIKENTokenInfo,\n  TEN_POWER_10_BN,\n} from '@pori-and-friends/pori-metadata';\nimport * as Repos from '@pori-and-friends/pori-repositories';\nimport { decryptAes, waitForMs } from '@pori-and-friends/utils';\nimport {\n  copyFileSync,\n  createReadStream,\n  createWriteStream,\n  existsSync,\n  mkdirSync,\n  readFileSync,\n  writeFileSync,\n} from 'fs';\nimport moment from 'moment';\nimport TelegramBot, { InlineKeyboardButton } from 'node-telegram-bot-api';\nimport * as os from 'os';\nimport process from 'process';\nimport {\n  activeEnv,\n  botMasterUid,\n  env,\n  RuntimeConfig,\n  playerAddress,\n  VERSION,\n} from './app/config';\nimport {\n  addWorkerTaskForMineAtkNotify,\n  addWorkerTaskForMineEndNotify,\n  registerWorkerNotify,\n} from './app/worker';\n\ninterface BotMemoryStructure {\n  activeChats: string[];\n}\n\nlet Memory: BotMemoryStructure;\nfunction captureChatId(chatId) {\n  if (!Memory.activeChats.includes(chatId)) {\n    Memory.activeChats.push(chatId);\n    saveBotMemory();\n  }\n}\n\nlet appCtx!: Context;\n\nasync function main() {\n  const token = process.env.TELEGRAM_TOKEN;\n  if (!token) {\n    console.error('missing env TELEGRAM_TOKEN');\n    return process.exit(1);\n  }\n\n  if (!botMasterUid) {\n    console.error('missing env TELEGRAM_MASTER_ID');\n    return process.exit(1);\n  }\n\n  console.log('🤖 booting step 1 done');\n  const bootInfo = await boot();\n  const { ctx, scheduler } = bootInfo;\n  let realm = bootInfo.realm;\n\n  async function reloadRealm() {\n    realm = await Repos.openRepo({\n      path: activeEnv.environment.dbPath,\n    });\n  }\n\n  loadBotMemory();\n\n  console.log('🤖 booting step 2 done');\n\n  const bot = new TelegramBot(token, { polling: true });\n  bot.on('polling_error', console.log);\n\n  // mongodb data store\n  if (activeEnv.environment.mongodbDataStoreUri) {\n    MongoDataStore.addMongodbDataStore(\n      ctx,\n      activeEnv.environment.mongodbDataStoreUri,\n      activeEnv.environment.mongodbDataStoreSSLCer\n    ).then((res) => {\n      ctx.ui.writeMessage('🤖 mongodb datastore connected!');\n      const chatId = Memory.activeChats[0];\n      if (chatId) doFetchSnapshotDb(bot, parseInt(chatId), ctx, realm);\n    });\n  }\n\n  // worker register\n  registerWorkerNotify({ ctx, realm, scheduler, bot });\n\n  // extend ctx UI\n  // register send msg, edit msg\n  ctx.ui.writeMessage = async (msg) => {\n    const chatId = Memory.activeChats[0];\n    if (chatId) return await bot.sendMessage(chatId, msg);\n  };\n\n  ctx.ui.editMessage = async (lastMsg, msg) => {\n    const msgInfo = lastMsg as TelegramBot.Message;\n    if (msgInfo) {\n      await bot.editMessageText(msg, {\n        chat_id: msgInfo.chat.id,\n        message_id: msgInfo.message_id,\n      });\n    }\n  };\n\n  appCtx = ctx;\n\n  // --------------------\n  // cmds begin\n  // --------------------\n\n  bot.onText(/\\/whoami/, async function whoami(msg) {\n    if (!requireBotMaster(msg)) return;\n    captureChatId(msg.chat.id);\n\n    // console.log(msg);\n    const localMetadata = await getLocalRealmRevision(realm);\n\n    const resp = `i am 🤖. \n    <pre><code class=\"language-json\">\n      isMaster: ${msg.from.id.toString() === botMasterUid}\n      masterUid: ${botMasterUid}\n      uptime: ${process.uptime()}\n      pid: ${process.pid}\n      hostname: ${os.hostname()}\n      playerAddress: ${playerAddress}\n      walletUnlock: ${Boolean(ctx.walletAcc)}\n      settingGasFactor: ${ctx.setting.gasFactor} \n      realmRevision: ${localMetadata.revision}\n      env: ${env}\n      _v: ${VERSION}\n    </code></pre>\n    Have fun!\n    `;\n    bot.sendMessage(msg.chat.id, resp, { parse_mode: 'HTML' });\n  });\n\n  bot.onText(/\\/clear/, async function (msg) {\n    if (!requireBotMaster(msg)) return;\n    captureChatId(msg.chat.id);\n\n    await bot.sendMessage(msg.chat.id, 'clear...', {\n      reply_markup: { remove_keyboard: true },\n    });\n  });\n\n  bot.onText(/\\/exit/, async function (msg) {\n    if (!requireBotMaster(msg)) return;\n    captureChatId(msg.chat.id);\n\n    await bot.sendMessage(msg.chat.id, 'shutdown... in next 2 sec', {\n      reply_markup: { remove_keyboard: true },\n    });\n\n    setTimeout(() => {\n      process.exit(0);\n    }, 2000);\n  });\n\n  bot.onText(/\\/help/, async function (msg) {\n    if (!requireBotMaster(msg)) return;\n    captureChatId(msg.chat.id);\n\n    await bot.sendMessage(msg.chat.id, 'clear...', {\n      reply_markup: {\n        keyboard: [\n          [\n            { text: '/db_fetch' },\n            { text: '/db_upload' },\n            { text: '/sch_list' },\n            { text: '/auto_list' },\n          ],\n          [{ text: '/auto_all' }, { text: '/setting_set_gas_factor 1.05' }],\n          [\n            { text: '/market_list' },\n            { text: '/price' },\n            { text: '/wallet_balance' },\n            { text: '/whoami' },\n          ],\n          [{ text: '/stats' }],\n        ],\n        resize_keyboard: true,\n      },\n    });\n  });\n\n  bot.onText(/\\/setting_set_gas_factor (.+)/, async (msg, match) => {\n    withErrorWrapper({ chatId: msg.chat.id, bot }, async () => {\n      if (!requireBotMaster(msg)) return;\n      captureChatId(msg.chat.id);\n\n      const args = parseFloat(match[1]);\n      ctx.setting.gasFactor = args;\n\n      ctx.ui.writeMessage(`update setting.gasFactor to ${args}`);\n    });\n  });\n\n  bot.onText(/\\/wallet_reset/, async function (msg) {\n    if (!requireBotMaster(msg)) return;\n    captureChatId(msg.chat.id);\n\n    ctx.walletAcc = null;\n\n    // No longer need it\n    // await bot.sendMessage(msg.chat.id, 'trying to reset wallet channel...');\n    // ctx.walletConnectChannel = null;\n    // await addWalletConnectToContext(\n    //   ctx,\n    //   activeEnv.environment.walletConnectSessionStoragePath\n    // );\n  });\n\n  bot.onText(/\\/wallet_balance/, async function (msg) {\n    if (!requireBotMaster(msg)) return;\n    captureChatId(msg.chat.id);\n\n    const rigyInfo = getRIGYTokenInfo(env);\n    const rikenInfo = getRIKENTokenInfo(env);\n\n    // eslint-disable-next-line prefer-const\n    let [RIGY, RIKEN, MATIC, priceInfo] = await Promise.all([\n      getTokenBalance({\n        ctx,\n        erc20Address: rigyInfo.tokenAddress,\n        walletAddress: playerAddress,\n      }),\n      getTokenBalance({\n        ctx,\n        erc20Address: rikenInfo.tokenAddress,\n        walletAddress: playerAddress,\n      }),\n      getMaticBalance({ ctx, walletAddress: playerAddress }),\n      token2Usd(ctx),\n    ]);\n\n    if (ctx.env === ENV.ProdPorichain) {\n      RIGY = MATIC;\n      MATIC = 0;\n    }\n\n    bot.sendMessage(\n      msg.chat.id,\n      `#balance\n      <pre><code class=\"language-json\">${JSON.stringify(\n        {\n          MATIC,\n          RIGY,\n          RIKEN,\n          RigyUsd: RIGY * priceInfo.rigy2Usd,\n          RikenUsd: RIKEN * priceInfo.rken2Usd,\n        },\n        null,\n        2\n      )}</code></pre>`,\n      { parse_mode: 'HTML' }\n    );\n  });\n\n  bot.onText(/\\/wallet_unlock (.+)/, async function (msg, match) {\n    if (!requireBotMaster(msg)) return;\n    captureChatId(msg.chat.id);\n\n    if (!existsSync(activeEnv.environment.aesKeyPath)) {\n      await bot.sendMessage(\n        msg.chat.id,\n        'key not found. Please generate a new key + rebuild docker img...'\n      );\n      return;\n    }\n    const keyObj = JSON.parse(\n      readFileSync(activeEnv.environment.aesKeyPath).toString()\n    );\n    const key = Buffer.from(keyObj.key, 'hex');\n    const iv = Buffer.from(keyObj.iv, 'hex');\n    let privKey = '';\n    try {\n      const encrypted = match[1];\n      privKey = await decryptAes({ key, iv, encrypted });\n    } catch (error) {\n      await bot.sendMessage(msg.chat.id, 'decrypt error...');\n      return;\n    }\n\n    try {\n      const acc = ctx.web3.eth.accounts.privateKeyToAccount(privKey);\n      if (acc.address !== playerAddress)\n        throw new Error('not match playerAddress...');\n\n      ctx.walletAcc = acc;\n    } catch (error) {\n      await bot.sendMessage(msg.chat.id, error.message);\n      return;\n    }\n\n    await bot.sendMessage(msg.chat.id, 'wallet unlocked..');\n    await bot.deleteMessage(msg.chat.id, msg.message_id.toString());\n  });\n\n  bot.onText(/\\/stats/, async (msg, match) => {\n    await withErrorWrapper({ chatId: msg.chat.id, bot }, async () => {\n      if (!requireBotMaster(msg)) return;\n      captureChatId(msg.chat.id);\n\n      const addr = playerAddress;\n      await bot.sendMessage(msg.chat.id, 'refreshing....');\n      const humanView =\n        await Computed.MyAdventure.refreshAdventureStatsForAddress(\n          {\n            realm,\n            ctx,\n            options: { withGasPrice: true, withPortal: true, withPrice: true },\n          },\n          addr\n        );\n\n      const chartIncomLast7Days =\n        await Computed.MyAdventure.genLast7DaysGraphData({\n          ctx,\n          realm,\n          playerAddress: addr,\n        });\n\n      const localMetadata = await getLocalRealmRevision(realm);\n\n      // targets:\n      // ${humanView.protentialTarget.map(\n      //   (itm) => `\\n\\t \\\\- ${itm.mineId} ${itm.hasBigReward} ${itm.sinceSec}`\n      // )}\n\n      const protentialTarget = humanView.protentialTarget;\n      const mines = Object.values(humanView.mines);\n      const adventureRender = (inp: AdventureInfoEx) => {\n        const appLink = getMobileWalletApplink(env, inp.link);\n        return `  * <a href=\"${appLink}\">${inp.mineId}</a>\n          - supporterAddr: ${inp.supporterAddress}\n          - blockTo: ${inp.blockedTo.toLocaleString()}\n          - supportTime: ${inp.atkAt.toLocaleString()}\n          - hasBigReward: ${inp.hasBigReward}\n          - isFarmer: ${inp.isFarmer}\n          - farmerRewardLevel: ${inp.farmerRewardLevel?.join(',')}\n          - supporterRewardLevel: ${inp.supporterRewardLevel?.join(',')}\n        `;\n      };\n\n      const resp = `\n<b>Mines:</b>      \n${mines.map((itm) => adventureRender(itm)).join('\\n')}\n<b>Targets:</b>\n${protentialTarget\n  .slice(0, 5)\n  .filter((itm) => !!itm)\n  .map(\n    (itm) =>\n      `\\t\\t - ${itm.mineId} bigReward-${itm.hasBigReward} since-${itm.sinceSec} sec`\n  )\n  .join('\\n')}\n<b>Summary:</b>\n  - <i>revision: </i> <b>${localMetadata.revision}</b>\n  - <i>canDoNextAction: </i> <b>${humanView.canDoNextAction}</b>\n  - <i>activeMine: </i> ${humanView.activeMines}\n  - <i>nextSupportAt: </i> ${humanView.nextAtkAt}\n  - <i>nextActionAt: </i> ${humanView.nextActionAt}\n  - <i>gasPriceGWEI: </i> ${humanView.gasPriceGWEI}\n  - <i>portalInfo: </i> available/supplied: ${\n    humanView.portalInfo?.availableRiken\n  }/${humanView.portalInfo?.suppliedRiken}, nextMissionRequire: ${\n        humanView.portalInfo?.nextMissionRequireRiken\n      }\n\n<b>Today:</b>\n  - <i>day: </i> ${new Date(\n    humanView.todayStats?.timestamp\n  ).toLocaleDateString()}\n  - <i>mines: </i> ${humanView.todayStats?.finishedMineIds.length}\n  - <i>RIGY: </i> ${humanView.todayStats?.totalRigy}\n  - <i>RIKEN: </i> ${humanView.todayStats?.totalRiken}\n  - <i>RIGY$: </i> ${humanView.todayStats?.rigyUsd}\n  - <i>RIKEN$: </i> ${humanView.todayStats?.rikenUsd}\n\n\n<b>Charts:</b>\n  - <a href=\"${chartIncomLast7Days.url}\">RIGYLast7Days</a>\n\n      `;\n\n      let keyboardActions: InlineKeyboardButton[] = [];\n      const hasPortal = canUsePortal(humanView);\n\n      keyboardActions = protentialTarget.slice(0, 5).map((itm) => {\n        return {\n          text: `${itm.mineId} - ${itm.hasBigReward ? 1 : 0}`,\n          switch_inline_query_current_chat: hasPortal\n            ? `/atk ${itm.mineId} 1`\n            : `/atk ${itm.mineId} 0`,\n        };\n      });\n      const newMineAction: InlineKeyboardButton = {\n        text: `new mine`,\n        switch_inline_query_current_chat: hasPortal ? `/mine 1` : `/mine 0`,\n      };\n\n      const keyboard = humanView.canDoNextAction\n        ? [keyboardActions, [newMineAction]]\n        : undefined;\n\n      // capture and send end notification\n      captureNotificationForMyMine(mines, msg);\n\n      await bot.sendMessage(msg.chat.id, 'finish....');\n      await bot.sendMessage(msg.chat.id, resp, {\n        parse_mode: 'HTML',\n        reply_markup: {\n          inline_keyboard: keyboard,\n        },\n      });\n    });\n  });\n\n  bot.onText(/\\/finish (.+)/, async (msg, match) => {\n    withErrorWrapper({ chatId: msg.chat.id, bot }, async () => {\n      if (!requireBotMaster(msg)) return;\n      captureChatId(msg.chat.id);\n\n      const args = match[1];\n      await Cmds.cmdDoFinish({ ctx, realm, args });\n    });\n  });\n\n  bot.onText(/\\/auto_all/, async (msg, match) => {\n    withErrorWrapper({ chatId: msg.chat.id, bot }, async () => {\n      if (!requireBotMaster(msg)) return;\n      captureChatId(msg.chat.id);\n\n      if (!ctx.walletAcc)\n        return bot.sendMessage(\n          msg.chat.id,\n          `please call /wallet_unlock <.enveloped_key..> frist`\n        );\n\n      // update bot formations here\n      for await (const iterator of RuntimeConfig.formations) {\n        await Auto.autoPlayV1({\n          ctx,\n          realm,\n          playerAddress,\n          args: {\n            type: 'bot',\n            minePories: iterator.minePories,\n            supportPori: iterator.supportPori,\n            timeOutHours: RuntimeConfig.settings.botTimeoutHours,\n            usePortal: iterator.usePortal,\n          },\n        });\n\n        await waitForMs(20000);\n      }\n\n      // background update db\n      await Auto.autoRefreshStatus({\n        ctx,\n        realm,\n        playerAddress,\n        args: { type: 'background_refresh', intervalMs: 2 * 60 * 1000 },\n      });\n    });\n  });\n\n  bot.onText(/\\/auto_list/, async (msg, match) => {\n    withErrorWrapper({ chatId: msg.chat.id, bot }, async () => {\n      if (!requireBotMaster(msg)) return;\n      captureChatId(msg.chat.id);\n\n      const allRunningBots = Object.entries(Auto.AutoPlayDb).map(\n        (itm) => itm[1]\n      );\n      const resp = allRunningBots\n        .map((itm) => {\n          const args = itm.args;\n\n          switch (args.type) {\n            case 'bot': {\n              const endAt = new Date(\n                itm.state.startAt.valueOf() + args.timeOutHours * 60 * 60 * 1000\n              );\n\n              return `  * bot : ${itm.state.id}\n                startAt: ${itm.state.startAt.toLocaleString()}\n                endAt: ${endAt.toLocaleString()}\n                `;\n            }\n            case 'background_refresh': {\n              return `  * background_refresh : ${itm.state.id} \n                interval: - ${args.intervalMs} ms\n                it: - ${itm.state.data['_it']} times\n                nextAt: - ${moment(itm.state.data['_nextAt']).fromNow()} \n                `;\n            }\n\n            default:\n              break;\n          }\n        })\n        .join('\\n');\n\n      let keyboardActions: InlineKeyboardButton[] = [];\n      keyboardActions = allRunningBots.map((itm) => {\n        return {\n          text: `del - ${itm.state.id}`,\n          switch_inline_query_current_chat: `/auto_del ${itm.state.id}`,\n        };\n      });\n\n      await bot.sendMessage(msg.chat.id, resp || 'empty', {\n        parse_mode: 'HTML',\n        reply_markup: {\n          inline_keyboard: [keyboardActions],\n        },\n      });\n    });\n  });\n\n  bot.onText(/\\/auto_del (.+)/, async (msg, match) => {\n    withErrorWrapper({ chatId: msg.chat.id, bot }, async () => {\n      if (!requireBotMaster(msg)) return;\n      captureChatId(msg.chat.id);\n\n      const botId = match[1];\n      await Auto.stopBot(botId);\n\n      bot.sendMessage(msg.chat.id, `jobId ${botId} deleted`);\n    });\n  });\n\n  bot.onText(/\\/sch_list/, async (msg, match) => {\n    withErrorWrapper({ chatId: msg.chat.id, bot }, async () => {\n      if (!requireBotMaster(msg)) return;\n      captureChatId(msg.chat.id);\n\n      const allPendingJobs = await scheduler.listPendingJob(realm);\n      const resp = allPendingJobs\n        .map((itm) => {\n          return `  * ${itm._id} - ${\n            itm.codeName\n          } - ${itm.runAt.toLocaleString()} (${moment(itm.runAt).fromNow()})`;\n        })\n        .join('\\n');\n\n      let keyboardActions: InlineKeyboardButton[] = [];\n      keyboardActions = allPendingJobs.map((itm) => {\n        return {\n          text: `del - ${itm._id}`,\n          switch_inline_query_current_chat: `/sch_del ${itm._id}`,\n        };\n      });\n\n      await bot.sendMessage(msg.chat.id, resp || 'empty', {\n        parse_mode: 'HTML',\n        reply_markup: {\n          inline_keyboard: [keyboardActions],\n        },\n      });\n    });\n  });\n\n  bot.onText(/\\/sch_del (.+)/, async (msg, match) => {\n    withErrorWrapper({ chatId: msg.chat.id, bot }, async () => {\n      if (!requireBotMaster(msg)) return;\n      captureChatId(msg.chat.id);\n\n      const jobId = match[1];\n      await scheduler.deleteJob(realm, jobId);\n\n      bot.sendMessage(msg.chat.id, `jobId ${jobId} deleted`);\n    });\n  });\n\n  bot.onText(/\\/price/, async (msg, match) => {\n    withErrorWrapper({ chatId: msg.chat.id, bot }, async () => {\n      if (!requireBotMaster(msg)) return;\n      captureChatId(msg.chat.id);\n\n      const rigyPoolInfo = await getKyberPoolRIGYPrice({ ctx });\n      const rikenPoolInfo = await getKyberPoolRIKENPrice({ ctx });\n      const [lunaBusd, maticBusd] = await Promise.all([\n        queryBinancePrice({ ctx, pair: 'LUNABUSD' }),\n        queryBinancePrice({ ctx, pair: 'MATICBUSD' }),\n      ]);\n\n      bot.sendMessage(\n        msg.chat.id,\n        `#price\n        <pre><code class=\"language-json\">${JSON.stringify(\n          {\n            ...rigyPoolInfo,\n            ...rikenPoolInfo,\n            'LUNA->BUSD': lunaBusd.price,\n            'MATIC->BUSD': maticBusd.price,\n          },\n          null,\n          2\n        )}</code></pre>`,\n        { parse_mode: 'HTML' }\n      );\n    });\n  });\n\n  bot.onText(/\\/market_list/, async (msg, match) => {\n    withErrorWrapper({ chatId: msg.chat.id, bot }, async () => {\n      if (!requireBotMaster(msg)) return;\n      captureChatId(msg.chat.id);\n      const sellingItems = await queryMarketInfo({ ctx });\n      const topItem = await expandEngadedMission({\n        ctx,\n        data: sellingItems.slice(0, 5),\n      });\n      const marketplaceBaseUrl = getMarketplayBaseLink(ctx.env);\n\n      const formatedData = topItem.map((itm) => {\n        const {\n          tokenId,\n          price,\n          helpPower,\n          minePower,\n          numOfBreeds,\n          maxOfBreeds,\n          engagedMission,\n        } = itm;\n        return {\n          tokenId,\n          link: `${marketplaceBaseUrl}/pori/${tokenId}`,\n          price: (BigInt(price) / TEN_POWER_10_BN).toString() + ' RIGY',\n          minePower,\n          helpPower,\n          engagedMission,\n          breed: `${numOfBreeds} / ${maxOfBreeds}`,\n        };\n      });\n\n      const resp = `\n<b>Top 5:</b>\n${formatedData\n  .map((itm) => {\n    const {\n      link,\n      price,\n      minePower,\n      helpPower,\n      breed,\n      tokenId,\n      engagedMission,\n    } = itm;\n\n    const baseAppLink = getMobileWalletApplink(env, link);\n    const appLink = baseAppLink;\n    return `  link: <a href=\"${appLink}\">${tokenId}</a>\n      - price: ${price}\n      - minePower: ${minePower}\n      - helpPower: ${helpPower}\n      - breed: ${breed}\n      - engagedMission: ${engagedMission}\n    `;\n  })\n  .join('\\n')}\n`;\n\n      await bot.sendMessage(msg.chat.id, resp, { parse_mode: 'HTML' });\n    });\n  });\n\n  bot.onText(/\\/db_fetch/, async (msg, match) => {\n    withErrorWrapper({ chatId: msg.chat.id, bot }, async () => {\n      if (!requireBotMaster(msg)) return;\n      captureChatId(msg.chat.id);\n      await doFetchSnapshotDb(bot, msg.chat.id, ctx, realm);\n    });\n  });\n\n  bot.onText(/\\/db_upload/, async (msg, match) => {\n    withErrorWrapper({ chatId: msg.chat.id, bot }, async () => {\n      if (!requireBotMaster(msg)) return;\n      captureChatId(msg.chat.id);\n      const backupKey = getDatastoreBackupKey(env);\n      const checkMsg = await bot.sendMessage(\n        msg.chat.id,\n        `🗄 ${backupKey} uploading...`\n      );\n\n      const remoteRevision = await doUploadSnapshot(realm, ctx);\n      const localMetadata = await getLocalRealmRevision(realm);\n\n      await bot.editMessageText(\n        `🗄 uploaded ${backupKey}. remoteRevision:${remoteRevision}, localRevision:${localMetadata.revision}`,\n        {\n          chat_id: checkMsg.chat.id,\n          message_id: checkMsg.message_id,\n        }\n      );\n    });\n  });\n\n  bot.onText(/\\/db_pull/, async (msg) => {\n    withErrorWrapper({ chatId: msg.chat.id, bot }, async () => {\n      if (!requireBotMaster(msg)) return;\n      captureChatId(msg.chat.id);\n      const backupKey = getDatastoreBackupKey(env);\n\n      const checkMsg = await bot.sendMessage(\n        msg.chat.id,\n        `🗄 ${backupKey} - checking...`\n      );\n\n      const updateText = async (msg) => {\n        await bot.editMessageText(`🗄 ${msg}`, {\n          chat_id: checkMsg.chat.id,\n          message_id: checkMsg.message_id,\n        });\n      };\n\n      await MongoDataStore.waitForConnected(ctx);\n\n      const tmpDir = './tmp/';\n      if (!existsSync(tmpDir)) mkdirSync(tmpDir);\n\n      const [fileMeta, dataStream] = await MongoDataStore.downloadBlob(\n        ctx,\n        backupKey\n      );\n\n      const totalBytes = fileMeta.length;\n      let downloaded = 0;\n      await updateText(`download begin. totalBytes ${totalBytes}`);\n      dataStream.prependListener('data', async (chunk) => {\n        downloaded += chunk.length;\n        await updateText(`progress ${downloaded / totalBytes}`);\n      });\n\n      dataStream\n        .pipe(createWriteStream('./tmp/snapshot.realm'))\n        .on('finish', async () => {\n          await updateText(`download finish. begin extract`);\n\n          realm.close();\n          copyFileSync('./tmp/snapshot.realm', activeEnv.environment.dbPath);\n\n          await updateText(`extract success. reload realm begin`);\n          await reloadRealm();\n\n          await updateText('reload realm success');\n\n          const localMetadata = await getLocalRealmRevision(realm);\n\n          await updateText(`#datastore_sync ${localMetadata.revision}`);\n        });\n    });\n  });\n\n  // --------------------\n  // cmd handler End\n  // --------------------\n\n  console.log('🤖 started');\n\n  for (const id of Memory.activeChats) {\n    await bot.sendMessage(id, `hi [master](tg://user?id=${botMasterUid}) 👋`, {\n      parse_mode: 'MarkdownV2',\n    });\n  }\n\n  function captureNotificationForMyMine(\n    mines: AdventureInfoEx[],\n    msg: TelegramBot.Message\n  ) {\n    const now = Date.now();\n    for (const itm of mines) {\n      // only register for unfinished mine\n      if (!itm.canCollect)\n        addWorkerTaskForMineEndNotify({\n          ctx,\n          realm,\n          scheduler,\n          chatId: msg.chat.id,\n          mineId: itm.mineId,\n          endAt: itm.blockedTo,\n          pnMessage: `mine ${itm.mineId} end`,\n          extra: {\n            reply_markup: {\n              inline_keyboard: [\n                [\n                  {\n                    text: `finish`,\n                    switch_inline_query_current_chat: `/finish ${itm.mineId}`,\n                  },\n                ],\n              ],\n            },\n          },\n        });\n\n      // register for can attak target\n      if (itm.atkAt.valueOf() > now) {\n        addWorkerTaskForMineAtkNotify({\n          ctx,\n          realm,\n          scheduler,\n          chatId: msg.chat.id,\n          mineId: itm.mineId,\n          endAt: itm.atkAt,\n          pnMessage: `mine ${itm.mineId} can atk`,\n          extra: {\n            reply_markup: {\n              inline_keyboard: [\n                [\n                  {\n                    text: `support`,\n                    switch_inline_query_current_chat: `/support ${itm.mineId}`,\n                  },\n                ],\n              ],\n            },\n          },\n        });\n      }\n    }\n  }\n\n  function canUsePortal(humanView: {\n    note: any;\n    // my active adventures\n    mines: Record<string, AdventureInfoEx>;\n    // protential target\n    targets: any;\n    protentialTarget: any[];\n    activeMines: number;\n    canDoNextAction: boolean;\n    nextActionAt: string;\n    gasPriceGWEI: string;\n  }) {\n    return humanView.activeMines <= 0;\n  }\n\n  async function doUploadSnapshot(realm: Realm, ctx: Context) {\n    const stream = createReadStream(activeEnv.environment.dbPath);\n    const backupKey = getDatastoreBackupKey(env);\n\n    console.log(`upload snapshot - ${backupKey}`);\n\n    const dbMetadata = await Repos.IdleGameSCMetadataRepo.findOne(\n      realm,\n      'default'\n    );\n    const metadata = {\n      revision: dbMetadata.updatedBlock,\n    };\n\n    await MongoDataStore.waitForConnected(ctx);\n\n    await MongoDataStore.storeBlob(ctx, backupKey, stream, metadata);\n    console.log(`uploaded - revision:${metadata.revision}`);\n    return metadata.revision;\n  }\n\n  // --------\n  // Cleanup\n  async function close() {\n    console.log('cleanup start');\n    for (const id of Memory.activeChats) {\n      await bot.sendMessage(id, 'bye 👋!');\n    }\n\n    console.log('bye 👋!');\n  }\n  process.once('SIGTERM', async () => {\n    await close();\n    appCtx.ui.writeMessage('recieved SIGTERM');\n    process.exit(0);\n  });\n}\n\nasync function doFetchSnapshotDb(\n  bot: TelegramBot,\n  chatId: number,\n  ctx: Context,\n  realm: Realm\n) {\n  const backupKey = getDatastoreBackupKey(env);\n\n  const checkMsg = await bot.sendMessage(\n    chatId,\n    `🗄 ${backupKey} - checking...`\n  );\n\n  await MongoDataStore.waitForConnected(ctx);\n\n  const metadata = await MongoDataStore.fetchBolb(ctx, backupKey);\n\n  const localMetadata = await getLocalRealmRevision(realm);\n\n  const remoteRevision = metadata?.metadata?.revision;\n  const shouldPull = remoteRevision > localMetadata.revision;\n\n  await bot.editMessageText(\n    `🗄 ${backupKey} - remoteRevision:${remoteRevision}, localRevision:${localMetadata.revision}\n        - shouldPull: ${shouldPull}\n        `,\n    {\n      chat_id: checkMsg.chat.id,\n      message_id: checkMsg.message_id,\n      reply_markup: {\n        inline_keyboard: shouldPull\n          ? [\n              [\n                {\n                  text: `db_pull`,\n                  switch_inline_query_current_chat: `/db_pull`,\n                },\n              ],\n            ]\n          : undefined,\n      },\n    }\n  );\n}\n\nasync function getLocalRealmRevision(realm: Realm) {\n  const dbMetadata = await Repos.IdleGameSCMetadataRepo.findOne(\n    realm,\n    'default'\n  );\n  const localMetadata = {\n    revision: dbMetadata.updatedBlock,\n  };\n  return localMetadata;\n}\n\nasync function boot() {\n  console.log(env, activeEnv);\n\n  if (!playerAddress) {\n    console.log('missing process.env.PLAYER_ADDRESS');\n    process.exit(1);\n  }\n  console.log('PlayerAddress:', playerAddress);\n  console.log('Example: cli');\n\n  const ctx = await init(env);\n  console.log('connected');\n\n  ctx.playerAddress = playerAddress;\n\n  // No longer need it\n  // await addWalletConnectToContext(\n  //   ctx,\n  //   activeEnv.environment.walletConnectSessionStoragePath\n  // );\n\n  const realm = await Repos.openRepo({\n    path: activeEnv.environment.dbPath,\n  });\n  const scheduler = new Repos.Services.SchedulerService();\n  await scheduler.start(realm);\n\n  return { realm, ctx, scheduler };\n}\n\nfunction requireBotMaster(msg: TelegramBot.Message) {\n  return msg.from.id.toString() === botMasterUid;\n}\n\nfunction loadBotMemory() {\n  if (\n    activeEnv.environment.botMemoryPath &&\n    existsSync(activeEnv.environment.botMemoryPath)\n  ) {\n    const data = readFileSync(activeEnv.environment.botMemoryPath).toString();\n    Memory = JSON.parse(data);\n    console.log(`🤖 - memory restore from activeEnv.environment.botMemoryPath`);\n    return;\n  }\n\n  // Init default\n  Memory = {\n    activeChats: [],\n  };\n}\n\nfunction saveBotMemory() {\n  if (activeEnv.environment.botMemoryPath) {\n    writeFileSync(activeEnv.environment.botMemoryPath, JSON.stringify(Memory));\n    console.log(\n      `🤖 - memory restore from ${activeEnv.environment.botMemoryPath}`\n    );\n  }\n}\n\nexport async function withErrorWrapper(\n  { chatId, bot }: { chatId: number; bot: TelegramBot },\n  handler: () => Promise<any>\n) {\n  try {\n    await handler();\n  } catch (error: any) {\n    console.error(error);\n    await bot.sendMessage(chatId, `Error: ${error.message}`);\n  }\n}\n\nprocess.on('uncaughtException', (err) => {\n  console.log('got uncaughtException exit');\n  appCtx.ui.writeMessage(`🤖 uncaughtException: ${err.message}`);\n  console.error(err);\n  process.exit(1);\n});\n\nprocess.on('unhandledRejection', (err) => {\n  console.log('got unhandledRejection exit');\n  appCtx.ui.writeMessage(`🤖 unhandledRejection: ${(err as any).message}`);\n  console.error(err);\n  process.exit(1);\n});\n\nmain();\n"],"names":["VERSION","env","ENV","ProdPorichain","activeEnv","Prod","AppEnvProd","AppEnvProdPorichain","Staging","AppEnv","computeActiveEnv","playerAddress","process","PLAYER_ADDRESS","botMasterUid","TELEGRAM_MASTER_ID","schedulerNewMineId","schedulerNewMineType","schedulerNotifyMineFinishId","mineId","schedulerNotifyMineNotifyIdType","schedulerNotifyMineAtkId","formationConfig","path","config","readFileSync","toString","JSON","parse","readAsset","join","__dirname","RuntimeConfig","formations","settings","scheduler","addHandler","async","job","paramObj","params","chatId","msgData","extra","bot","sendMessage","mineEndSchedulerId","jobIns","getJobById","realm","hasFinish","runAt","valueOf","endAt","scheduleJob","codeName","stringify","pnMessage","_id","mineAtkSchedulerId","environment","dbPath","walletConnectSessionStoragePath","botMemoryPath","mongodbDataStoreUri","MONGODB_DATA_STORE_URI","mongodbDataStoreSSLCer","aesKeyPath","createdBlock","production","log","connectDefer","Deferred","getBucket","mongoClient","db","GridFSBucket","chunkSizeBytes","ctx","promise","uri","pathToCert","client","MongoClient","sslKey","sslCert","serverApi","ServerApiVersion","v1","reset","connect","resolve","key","dataStream","metadata","Error","bucket","oldFiles","find","filename","toArray","it","delete","writeStream","openUploadStream","pipe","Promise","_","once","sort","uploadDate","openDownloadStreamByName","Input","DataView","Adventure","Workflow","WalletActions","Auto","Cmds","Computed","MyAdventure","ALL_SLOTS","parseMinePlayer","playerInfo","address","player","selectedIndex","web3","utils","hexToBytes","selectedCells","filter","itm","samples","excludeIndex","pool","includes","res","i","next","random","length","v","push","contract","methods","mines","call","farmer","helper","rewardMap","rawRewardMap","bytes","byte2number","slice","startTimeUnixSec","slots","startOffset","reward","joined","startTimeInDate","Date","mineRawRewadMap","parseRewardMap","mineInfo","randomRewardLevel","pori","engagedMission","missionOfPori","parseInt","addr","info","contractPortal","portalInfoOf","nextMissionRequireRiken","mission2Riken","fastMissions","TEN_POWER_10","Number","MAX_SAFE_INTEGER","missions","capacityMissions","suppliedRiken","availableRiken","lockedRiken","missionId","farmerSCellInfo","helperSCellInfo","all","getPoriansAtSCell","map","powers","id","farmerPories","PoriRepo","findOneSync","minePower","supporterPories","helpPower","ESB_P_THRESHOLD_KEEP_BIG_REWARD","captureStartedBot","state","args","finishDefered","then","console","catch","err","finally","AutoPlayDb","refreshStatus","takeABreak","refreshAdventureStatsForAddress","sec","promiseWithAbort","waitForMs","setting","autoPlayMicroDelayMs","checkGasPrice","msgInfo","ui","writeMessage","now","end","web3GasPrice","currentGasPrice","valueInGweith","toWei","safeGweith","editMessage","checkPoriMissionCapping","pories","minePories","supportPori","maxMission","missionCount","queryMissiontOfPoriSc","checkPortal","usePortal","portalCap","queryPortalInfoSc","doSupport","SUPPORT_PORI","cmdDoSupport","customSlotPick","supportSlotPick","doFinishWithRetry","doTaskWithRetry","cmdDoFinish","retryNo","message","findActiveMine","addvStats","isArrayIncludeAll","intervalMs","botId","createWorkflow","count","updateState","data","start","timeOutHours","activeMine","cmdDoMine","nextSupportAt","atkAt","isAfter","toLocaleString","fromNow","sAt","blockedTo","needToWaitForSMin","cmdDoSBattle","onChange","botInfo","abort","_parseMineInfo","farmerRewardLevel","farmerSlots","supporterRewardLevel","supporterSlots","sIndex","indexOf","powerOf","farmerPoriesSortedByDecPower","sortBy","index","power","rewardLevel","a","reverse","supporterPoriesSortedByDecPower","farmerMaxPowerOf2","supporterMaxPowerOf2","hasS","supporterAddress","parseMineInfo","sPowerFarmer","sum","sCellInfo","sPowerSupporter","minAtk","poriInfo","tmp","minBy","_pickOneMinRewardLevelAndAtkGtXPori","srcIds","desIds","sTreasureIndex","max1","max2","maxSum","minCost","sFarmer","needToFill","sbattleSlotPickCase3","isFarmer","esbCal","getESB","esbPercentage","Math","round","hasSupporter","activeIndexs","activeRewardLevels","slotIndex","bigRewardIndex","isFarmerFound","NaN","bigRewardEP","bigRewardAP","hasBigReward","farmerPori","supporterPori","randAdventureSlot","uniq","events","allEvents","on","subscriptionId","getPastEvents","fromBlock","toBlock","defaultSupportSlotPick","walletAcc","warn","split","boolFromString","poriants","callData","startAdventure","encodeABI","tx","from","to","getIdleGameAddressSC","txHash","sendRequestForWalletConnectTx","r","transactionHash","getChainExplorerTxHashLink","isNaN","finish","targets","FORMATION","support1","method","factor","MINE_ATK_PRICE_FACTOR","gasPrice","callDataAbi","fortify","support2","getPoriansAtSCellSc","sbattleCmd","sbattleSlotPick","swapPorians","withGasPrice","withPortal","withPrice","updateEventDb","activeAddr","viewData","computePlayerAdventure","realmEventStore","Repos","IdleGameSCEventRepo","findAll","humanView","note","humanrizeNote","protentialTarget","activeMines","canDoNextAction","nextActionAt","nextActionAtDate","nextAtkAt","nextAtkAtDate","gasPriceGWEI","k","Object","keys","activeAdventures","value","farmerAddress","humanrizeAdventureInfo","val","sinceSec","startTime","link","startTimeLocalTime","b","readyToStart","options","fromWei","timeViewMine","values","noBlock","every","canCollect","maxBy","toDayNo","startOf","unix","todayStats","finishedAdventures","portalInfo","price","token2Usd","rigyUsd","totalRigy","rigy2Usd","rikenUsd","totalRiken","rken2Usd","last7Days","entries","unixDay","graphData","labels","data1","data2","timestamp","format","url","URL","searchParams","append","computeViewId","lastViewIns","viewId","viewIns","DataViewRepo","findOne","defaultData","DataViewModel","generate","defaultViewData","createWithTx","getLastView","filtered","cursor","type","EIdleGameSCEventType","AdventureStarted","evData","farmerEndTime","blockedTime","porians","rewardLevels","indexes","AdventureSupported1","isSupporter","supporterEndTime","AdventureFortified","porian","AdventureSupported2","SBattleSwapped","poriIdOutside","poriIdInside","outsideIndex","findIndex","insideIndex","outsideRewardLevel","outsideSlot","insideRewardLevel","insideSlot","AdventureFinished","dateNo","previous","finishedMineIds","rigyReward","helperReward1","farmerReward1","rikenReward","helperReward2","farmerReward2","parseFloat","prevNote","lastMine","lastMineUnlockAt","txSync","toHexString","advIno","withPoriePower","undefined","getAdventureBaseLink","hasBigRewardFarmer","hasBigRewardSupporter","turnTime","calculateMineTurnTime","farmerAtkTime","farmerAtkStartAt","supporterAtkTime","supporterAtkStartAt","supportPories","axiosIns","request","baseURL","symbol","pair","toUpperCase","status","lazyProvider","PairCacheDb","getPairData","tokenA","tokenB","KyberFactoryAddress","getKyberSwapFactoryAddress","provider","etherJs","getWeb3NodeUriPolygonHttp","JsonRpcProvider","getProvider","Fetcher","fetchPairData","tokenInfo","getRIGYTokenInfoOnPolygon","RIGYToken","Token","chainId","tokenAddress","decimal","pools","WETH","route","Route","trade","Trade","TokenAmount","amountInWei","TradeType","EXACT_INPUT","executionPrice","invert","toSignificant","getRIKENTokenInfoOnPolygon","RIKENToken","Cache","_time","rigyPoolInfo","getKyberPoolRIGYPrice","rikenPoolInfo","getKyberPoolRIKENPrice","maticBusd","queryBinancePrice","scData","IdleGameSCMetadataRepo","getOrCreateWithTx","updatedBlock","batchSize","headBlock","eth","getBlockNumber","toJSON","min","scanEvents","transformedEvents","IdleGameSc","parseIdleGameScEvent","Boolean","iterator","create","IdleGameSCEventDataModel","knCursor","extras","scanner","total","resolveNft","queryNftInfo","saveInterval","onIt","forceSave","transformIdleGameEvent2Database","Array","updateKnowleageDb","error","e","test","RegExp","match","groups","legendary","l_head","l_face","l_body","l_arm","l_accessory","l_leg","l_tail","parseLegendary","species_type","d_head_class","reserved","d_head_type","r1_head_class","r1_head_type","r2_head_class","r2_head_type","r3_head_class","r3_head_type","d_face_class","d_face_type","r1_face_class","r1_face_type","r2_face_class","r2_face_type","r3_face_class","r3_face_type","d_body_class","d_body_type","r1_body_class","r1_body_type","r2_body_class","r2_body_type","r3_body_class","r3_body_type","d_arm_class","d_arm_type","r1_arm_class","r1_arm_type","r2_arm_class","r2_arm_type","r3_arm_class","r3_arm_type","d_accessory_class","d_accessory_type","r1_accessory_class","r1_accessory_type","r2_accessory_class","r2_accessory_type","r3_accessory_class","r3_accessory_type","d_leg_class","d_leg_type","r1_leg_class","r1_leg_type","r2_leg_class","r2_leg_type","r3_leg_class","r3_leg_type","d_tail_class","d_tail_type","r1_tail_class","r1_tail_type","r2_tail_class","r2_tail_type","r3_tail_class","r3_tail_type","species_class","l","has","get","name","getClassName","d_head_type_name","getTypeName","d_face_type_name","d_body_type_name","d_arm_type_name","d_accessory_type_name","d_leg_type_name","d_tail_type_name","r1_head_type_name","r1_face_type_name","r1_body_type_name","r1_arm_type_name","r1_accessory_type_name","r1_leg_type_name","r1_tail_type_name","r2_head_type_name","r2_face_type_name","r2_body_type_name","r2_arm_type_name","r2_accessory_type_name","r2_leg_type_name","r2_tail_type_name","r3_head_type_name","r3_face_type_name","r3_body_type_name","r3_arm_type_name","r3_accessory_type_name","r3_leg_type_name","r3_tail_type_name","s","purity","t","Map","n","c","o","set","typeNames","getAPILink","ownerAddress","toChecksumAddress","pageIndex","pageSize","sortOrder","minPrice","maxPrice","minNumOfBreeds","maxNumOfBreeds","minLegend","maxLegend","minMinePower","maxMinePower","minHelpPower","maxHelpPower","stage","poriClass","keyword","items","tokenId","uriws","getWeb3NodeUri","urihttp","getWeb3NodeUriHttp","exit","providers","WebsocketProvider","HttpProvider","idleGameSc","portalSc","getPortalAddressSC","Contract","abi","getContextSetting","emiter","EventEmitter","msg","lastMsginfo","custom","disconnect","resolveNftInfo","PorianDeposited","playerId","poriId","nftInfo","PlayerRepo","playerObj","getOrCreate","PlayerDataModel","blockNo","poriObj","PoriDataModel","isActive","PorianWithdrawed","GameDurationChanged","turnDuration","adventureDuration","inp","encodeFunctionSignature","minABI","constant","inputs","outputs","contractForTokenCache","erc20Address","balanceOf","walletAddress","balanceInWei","getBalance","MySessionStorage","constructor","storagePath","this","storageId","getSession","existsSync","setSession","session","writeFileSync","removeSession","unlinkSync","sessionStoragePath","storage","connector","bridge","qrcodeModal","clientMeta","description","icons","_sessionStorage","walletConnectChannel","connected","createSession","payload","accounts","sendTxJobQueue","JobQueue","isFunction","estimageGas","getGasPrice","onTxReceipt","addJob","gasFactor","defaultWeb3GasPrice","defaultNonce","getTransactionCount","baseGas","web3Tx","gas","nonce","signedTx","signTransaction","rawTransaction","txInfo","sendSignedTransaction","useAccountToSendTx","useAccountToSignTx","shouldRun","timeoutMs","getTransactionReceipt","blockNumber","exec","cancelDefered","startAt","currentStep","reject","doJob","func","p","race","finishAt","TEN_POWER_10_BN","BigInt","TURN_DURATION_SEC","stagConfig","gameInfo","m","app","apiUrl","prodPoriChainConfig","prodConfig","tokenConfig","token","inGameSymbol","inGameAddress","inGameDecimal","rpcMetamask","nativeSymbol","nativeAddress","nativeDecimal","urlAdventure","urlMarketplace","ABI_IDLE","contractAddress","idleGameAddress","scCreatedBlock","idle","ABI_PORTAL","rainbowPortal","blockInfo","getBlock","pendingTx","transactions","getTransaction","isEmpty","avgGas","mean","eventInfo","evType","event","rawTopic","signature","raw","topics","IdleGameSCEventInvSignatureTable","toNumber","returnValues","transformArrayElementToNumber","winner","fragments","toDecimal128","expiredAt","rawData","splitPackedHexBy32Bytes","porianOutside","porianInside","fromIndex","toIndex","parseSBattleSwapRawData","IdleGameSCEventSignatureTable","AllIdleGameEvents","ABI_RENTAL","ABI_MARKETPLACE","version","apiKey","apiSecretKey","locale","fallbackLocale","linkPori2D","linkPori3D","nativeId","inGameId","fragmentSymbol","fragmentAddress","fragmentDecimal","PoriNFTBreedable","poriBreedingRule","marketplaceAddress","rentalAddress","poriLensAddress","itemsAddress","multicallAddress","chainName","nativeCurrency","decimals","rpcUrls","blockExplorerUrls","Terra","Aqua","Magica","Mecha","Ancia","Stellar","Mysteria","Egg","Adult","Origin","Genesis","ForSale","ForRent","Renting","Available","InGameChapter1","d","selectClass","sortPower","g","ExploreMission","AssitMission","CanAssitMission","f","Explore","Assit","Fortify1","Fortify2","Finish","h","j","Supported1","Supported2","Unknown","Started","Fortified1","Finished","IdleGameSCMetadataDataModel","ScheduleJobModel","SchedulerRepo","SchedulerService","opt","schemas","schema","open","schemaVersion","SchedulerServiceSchema","shouldCompactOnLaunch","Services","MODEL_NAME","Wrapper","static","objectForPrimaryKey","objects","UpdateMode","Modified","write","mergedData","handler","super","NAME","primaryKey","properties","CommonReamRepo","dna","legend","birthDate","health","speed","physicalAttack","physicalDefend","critical","magicAttack","magicDefend","createdAt","updatedAt","objectType","property","_v","BSON","ObjectID","embededEventDataSchema","embedded","optional","Schemas","debugLog","result","jobHandlers","timerTickets","refreshAllJob","clearTimeout","jobId","ins","ticketId","internalRegisterJob","availableJobs","listPendingJob","setTimeout","execJob","Axios","headers","algo","pass","salt","randomBytes","scryptSync","cipher","createCipheriv","iv","encrypted","chunk","read","decipher","createDecipheriv","decrypted","update","final","isHexStrict","hex","ms","times","doTask","onRetry","delayMs","array","contain","Buffer","replace","arr","minVal","minIndex","byFunc","_queue","isProcessing","exeFunc","def","_checkJob","shift","_exeJob","Decimal128","fromString","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","Memory","appCtx","captureChatId","activeChats","doFetchSnapshotDb","backupKey","getDatastoreBackupKey","checkMsg","MongoDataStore","waitForConnected","fetchBolb","localMetadata","getLocalRealmRevision","remoteRevision","revision","shouldPull","editMessageText","chat_id","chat","message_id","reply_markup","inline_keyboard","text","switch_inline_query_current_chat","requireBotMaster","withErrorWrapper","TELEGRAM_TOKEN","bootInfo","init","openRepo","boot","loadBotMemory","polling","addMongodbDataStore","registerWorkerNotify","lastMsg","onText","resp","uptime","pid","os","hostname","parse_mode","remove_keyboard","keyboard","resize_keyboard","rigyInfo","getRIGYTokenInfo","rikenInfo","getRIKENTokenInfo","RIGY","RIKEN","MATIC","priceInfo","getTokenBalance","getMaticBalance","RigyUsd","RikenUsd","keyObj","privKey","decryptAes","acc","privateKeyToAccount","deleteMessage","chartIncomLast7Days","genLast7DaysGraphData","getMobileWalletApplink","adventureRender","toLocaleDateString","keyboardActions","hasPortal","canUsePortal","newMineAction","addWorkerTaskForMineEndNotify","addWorkerTaskForMineAtkNotify","captureNotificationForMyMine","autoPlayV1","botTimeoutHours","autoRefreshStatus","allRunningBots","stopBot","allPendingJobs","deleteJob","lunaBusd","sellingItems","queryMarketInfo","topItem","expandEngadedMission","marketplaceBaseUrl","getMarketplayBaseLink","breed","numOfBreeds","maxOfBreeds","stream","createReadStream","storeBlob","doUploadSnapshot","updateText","mkdirSync","fileMeta","downloadBlob","totalBytes","downloaded","prependListener","createWriteStream","close","copyFileSync","reloadRealm","main"],"sourceRoot":""}